{"version":3,"sources":["cache.js","asset/srLogo.png","reducer/headerReducer.js","context/headerContext.js","function/fn.js","dynamic/menu.js","dynamic/navbar.js","asset/goglobalschool.png","reducer/dashboardReducer.js","context/dashboardContext.js","function/set.js","reducer/caseReducer.js","context/caseContext.js","graphql/auth.js","context/userContext.js","reducer/quarantineReducer.js","context/quarantineContext.js","reducer/hospitalReducer.js","context/hospitalContext.js","component/datepickertwo/datePickerTwo.js","page/dashboard.js","component/case/tableColumn/caseColumn.js","static/own-comp.js","graphql/case.js","component/case/modal/addCase.js","page/case.js","component/case/tableColumn/subCaseColumn.js","component/case/modal/editCase.js","component/case/subCase.js","component/user/tableColumn/userColumn.js","component/user/modal/addUser.js","component/user/modal/editUser.js","component/user/tableColumn/roleColumn.js","component/user/modal/addRole.js","component/user/modal/editAccount.js","page/user.js","component/quarantine/tableColumn/quarantineColumn.js","graphql/quarantine.js","component/quarantine/modal/addQuarantine.js","page/quarantine.js","component/quarantine/tableColumn/subQuarantineColumn.js","component/quarantine/modal/editQuarantine.js","component/quarantine/modal/addSubQuarantine.js","component/quarantine/modal/editSubQuarantine.js","graphql/people.js","component/quarantine/subQuarantine.js","reducer/peopleReducer.js","context/peopleContext.js","component/people/tableColumn/peopleColumn.js","component/people/modal/addPeople.js","graphql/hospital.js","page/people.js","component/people/tableColumn/testColumn.js","component/people/tableColumn/relatedColumn.js","component/people/modal/addPeopleRelated.js","component/people/modal/addPeopleTest.js","component/hospital/modal/addHospital.js","component/people/modal/addPeopleHospital.js","component/people/modal/addPeopleStatus.js","component/people/modal/addPeopleQuarantine.js","component/people/modal/addPeopleHistory.js","graphql/location.js","component/location/modal/addLocation.js","graphql/historylocation.js","component/people/modal/addPeopleLocation.js","component/people/modal/editPeople.js","component/people/modal/uploadPic.js","component/people/modal/editCurrentState.js","component/people/subPeople.js","component/hospital/tableColumn/hospitalColumn.js","page/hospital.js","component/hospital/tableColumn/subHospitalColumn.js","component/hospital/modal/editHospital.js","component/hospital/modal/addSubHospital.js","component/hospital/modal/editSubHospital.js","component/hospital/subHospital.js","page/login.js","component/covideComponents/InfoBox.js","component/covideComponents/Table.js","component/covideComponents/util.js","component/covideComponents/Map.js","graphql/dashboardAndReport.js","component/covideComponents/BarChart.js","asset/covid19.png","asset/recover.png","asset/death.png","asset/curring.png","asset/direct.png","asset/close-area.png","asset/notdirect.png","asset/open-area.png","component/covideComponents/LineGraph.js","component/covideComponents/BarGraph.js","component/covideComponents/LineChartTesting.js","page/map.jsx","component/print/report.js","component/print/report1.js","component/print/report2.js","component/print/reportPersonalInfo.js","page/report.js","component/location/tableColumn/locationColumn.js","component/location/modal/editLocation.js","page/location.js","component/location/subLocation.js","component/interview/tableColumn/interviewColumn.js","component/interview/modal/addInterview.js","component/interview/modal/editInterview.js","page/interview.js","component/NotFound.js","Routes.js","asset/cover-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["isLoggedInVar","makeVar","localStorage","getItem","cache","InMemoryCache","typePolicies","Query","fields","isLoggedIn","read","headerReducer","state","action","type","payload","HeaderData","createContext","genderData","require","provinceData","districtData","communeData","villageData","districForMap","nationalityData","HeaderContext","props","userData","JSON","parse","urlPath","useLocation","pathname","useReducer","user","userDispatch","Provider","value","children","convertToDistrict","data","item","map","load","push","id","district","title","convertToCommune","distict","commune","convertToVillage","village","getRelated","e","condition","i","direct","convertEditData","array","Object","entries","key","moment","keyMenu","myArr","split","convertHospitalToSelect","hospitalName","convertQurantineToSelect","locationName","Sider","Layout","SubMenu","Menu","confirm","Modal","MenuHeader","useContext","useState","collapsed","setCollapsed","collapsible","onCollapse","className","style","to","width","src","Logo","preview","background","height","theme","selectedKeys","mode","Item","fontSize","icon","HomeOutlined","LoginOutlined","TeamOutlined","ReconciliationOutlined","AuditOutlined","BankOutlined","ContainerOutlined","backgroundColor","role","UserOutlined","ExportOutlined","onClick","okType","okText","cancelText","onOk","removeItem","onCancel","console","log","Header","Navbar","padding","textAlign","color","paddingRight","UserSwitchOutlined","username","toUpperCase","dashboardReducer","count","Error","DashboardController","DashBoardContext","today","total","dashBoardData","dashBoardDataDispatch","case","dashboardList","dashboardListDispatch","setEditCase","values","caseName","date","related","undefined","province","other","long","lat","setQuarantine","length","quarantineName","place","inCharge","tel","note","setSubQuarantine","caseId","name","gender","status","relatedInfo","setEditSubQuarantine","date_in","date_out","in","others","personalInfo","personalType","setEditHospital","capacity","createdAt","personInCharge","firstName","lastName","position","setAddQuarantine","parseFloat","setAddHospital","otehrs","setAddPeople","age","parseInt","nationality","occupation","idCard","vaccinated","interviewed","setAddSubQuarantine","format","setEditQuarantine","setPeopleLocation","affectedLocationId","setPeopleHospital","hospitalInfo","caseReducer","index","findIndex","index1","caseTitle","Date","remark","splice","setSubCase","CaseController","CaseContext","caseData","caseDataDispatch","subCaseData","subCaseDataDispatch","LOGIN_USER","gql","IS_LOGGED_IN","REGISTER_USER","GET_ALL_USERS","UPDATE_USER_DETAIL","DELETE_USER","ADD_USER_ROLE","UserController","UserContext","setUserData","useQuery","variables","page","limit","keyword","onCompleted","getUserWithPagination","users","loading","error","quarantineReducer","QuarantineController","QuarantineContext","quarantineData","quarantineDataDispatch","subQuarantineData","subQuarantineDataDispatch","hospitalReducer","HospitalController","HospitalContext","hospitalData","hospitalDataDispatch","subHospitalData","subHospitalDataDispatch","DatePickerTwo","ranges","setRange","selectionRange","startDate","endDate","ran","showSelectionPreview","showDateDisplay","onChange","selection","showMonthAndYearPickers","Typography","Title","DatePicker","RangePicker","Select","Option","caseCol","handleDelete","no","dataIndex","render","text","record","size","fixed","align","EditOutlined","onConfirm","DeleteOutlined","ListSelect","setValue","disabled","showSearch","placeholder","optionFilterProp","filterOption","input","option","indexOf","filterSort","optionA","optionB","localeCompare","affectedLocationName","GET_ALL_CASES","CREATE_NEW_CASE","GET_ALL_CASES_NO_LIMIT","GET_PERSON_BY_CASE","GET_CASE_BY_ID","UPDATE_CASE_BY_ID","DELETE_CASE_BY_ID","AddCase","open","setOpen","setRefetch","setCaseId","useMutation","createCase","message","success","onError","setProvince","setDistrict","setCommune","Form","useForm","form","visible","footer","onFinish","resetFields","onFinishFailed","errorInfo","xs","md","span","rules","required","offset","setFieldsValue","htmlType","Case","setCaseData","openAdd","setOpenAdd","setPage","setLimit","setKeyword","getCaseWithPagination","fetchPolicy","refetch","deleteCase","useEffect","PlusOutlined","Search","target","marginTop","columns","dataSource","cases","rowKey","pagination","paginator","totalDocs","current","currentPage","pageSize","scroll","x","sticky","subCaseCol","handleEditSubCase","currentState","EyeOutlined","EditCase","setRetetch","updateCase","destroyOnClose","getContainer","forceRender","initialValues","SubCase","useParams","setSubCaseData","openEdit","setOpenEdit","getPersonalInfoByCaseWithPagination","getCaseById","dataCase","refetchCase","level","personalInfos","margin","prefix","SearchOutlined","userCol","handleUserEdit","handleAccountEdit","comeBackUserRole","roles","SettingOutlined","AddUser","registerUser","password","firstname","lastname","email","EditUser","updateUserDetail","userId","roleColumn","AddRole","userID","dataRoles","addRole","EditAccount","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","User","setDataRoles","userEdit","setUserEdit","openRole","setOpenRole","roleUserID","setRoleUserID","openEditAccount","setOpenEditAccount","deleteUser","handleUserRole","quarantineCol","d","setHours","GET_ALL_QUARANTINEINFO","CREATE_QUARANTINEINFO","DELETE_QUARANTINE_BY_ID","CREATE_PERSON_QUARANTINE","GET_PERSON_BY_QUARANTINE","GET_QUARANTINE_BY_ID","UPDATE_QUARANTINE_BY_ID","DELETE_PERSON_BY_QUARANTINE","UPDATE_PEOPLE_BY_QUARANTINE","ALL_QUARANTINEINFO","AddQuarantine","quarantineId","setQuarantineId","createQuarantineInfo","quarantineInfo","Quarantine","setQuarantineData","getQuarantineInfoWithPagination","deleteQuarantineInfo","quarantineInfos","subQuarantineCol","handleEditSubQuarantine","EditQuarantine","updateQuarantineInfo","AddSubQuarantine","peopleData","createQuarantine","people","EditSubQuarantine","updateQuarantine","GET_ALL_PERSONINFO","CREATE_NEW_PERSON","GET_ALL_PERSONINFO_NO_LIMIT","RECORD_SAMPLETEST","GET_PERSONALINFO_BY_ID","DELETE_PERSONALINFO_BY_ID","GET_HOSPITAL_QUARANTINE_BY_PERSON","UPDATE_PERSON_BY_ID","DELETE_SAMPLETEST","UPDATE_CURRENTSTATE_BY_ID","GET_INTERVIEW","SubQuarantine","setPeopleData","updateSubData","setUpdateSubData","openAddSub","setOpenAddSub","openEditSub","setOpenEditSub","setSubQuarantineData","allPersonalInfos","getQuarantineInfoById","quarantine","refetchQuarantine","quarantineInfoId","getQuarantineByQurantineIdWithPagination","subQuarantine","refetchSub","deleteQuarantine","PlusCircleOutlined","quarantines","peopleReducer","job","PeopleController","PeopleContext","peopleDataDispatch","peopleCol","AddPeople","allCases","setAllCases","openModal","setOpenModal","createPersonalInfo","englishName","patientId","relation","illness","addonBefore","valuePropName","GET_ALL_HOSPITAL","CREATE_HOSPITALINFO","DELETE_HOSPITALINFO_BY_ID","CREATE_NEW_HOSPITALIZATION","GET_PERSON_BY_HOSPITALINFO","GET_HOSPITALINFO_BY_ID","UPDATE_HOSPITALINFO_BY_ID","UPDATE_PERSON_BY_HOSPITALINFO","DELETE_PERSON_BY_HOSPITAL","ALL_HOSPIAL_INFO","People","getPersonalInfoWithPagination","deletePersonalInfo","testCol","handleSampleTestDelete","result","relatedCol","handleRelatedDelete","AddPeopleRelated","AddPeopleTest","peopleID","recordSampleTest","times","location","symptom","personalInfoId","labFormCompletedBy","laboratory","reasonForTesting","symptomStart","AddHospital","hospitalId","setHospitalId","createHospitalInfo","hospitalInfos","AddPeopleHospital","peopleId","hospital","setHospital","createHospitalization","allHospitalInfos","AddPeopleStatus","AddPeopleQuarantine","allQuarantineInfos","AddPeopleHistory","GET_ALL_LOCATION","CREATE_NEW_LOCATION","GET_AFFECTED_LOCATION_PAGINATION","DELETE_AFFECTEDLOCATION_BY_ID","UPDATE_AFFECTEDLOCATION_BY_ID","AddLocation","locationId","setLocationId","createAffectedLocation","affectedLocation","CREATE_NEW_HISTORYLOCATION","GET_HISTORYLOCATION_BY_PERSON","AddPeopleLocation","locationData","setLocationData","setLocation","createHistoryLocation","allAffectedLocations","EditPeople","personId","personalData","updatePersonalInfo","UploadPic","fileList","setFileList","onPreview","file","a","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","window","document","write","outerHTML","rotate","listType","newFileList","maxCount","EditCurrentState","currentStateData","updateCurrentState","newObj","confirmedAt","recovered","recoveredAt","death","deathAt","SubPeople","openAddPeopleRelated","setOpenAddPeopleRelated","openAddPeopleTest","setOpenAddPeopleTest","openAddPeopleHospital","setOpenAddPeopleHospital","openAddPeopleStatus","setOpenAddPeopleStatus","openAddPeopleQuarantine","setOpenAddPeopleQuarantine","openAddPeopleHistory","setOpenAddPeopleHistory","openAddPeopleLocation","setOpenAddPeopleLocation","openUploadPic","setOpenUploadPic","setSubCasePagination","openEditCurrentState","setOpenEditCurrentState","setHospitalData","getPersonalInfoById","refetchPerson","personalId","getHospitalizationByPersonalInfo","hospital_quarantine","getHistoryLocationByPersonalInfoId","historylocation","refetchHistoryLocation","deleteSampleTest","border","CameraOutlined","marginLeft","paddingBottom","colSpan","marginBottom","label","paddingTop","sampleTestId","sampleTest","y","hospitalCol","Hospital","getHospitalInfoWithPagination","deleteHospitalInfo","subHospitalCol","handleEditSubHospital","EditHospital","updateHospitalInfo","AddSubHospital","EditSubHospital","updateHospitalization","setEditSubHospital","SubHospital","setSubHospitalData","getHospitalInfoById","refetchHospital","getQuarantineByHospitalIdIdWithPagination","hospitalSub","deleteHospitalization","hospitalizations","Login","useHistory","loginUser","setItem","stringify","lg","xl","autoComplete","InfoBox","active","isRed","ImageShow","r","Card","CardContent","as","top","right","Table","dis","numeral","confirmedCase","casesTypeColors","hex","rgb","half_op","multiplier","deaths","showDataOnMap","casesType","Circle","center","pathOptions","fillColor","fillOpacity","radius","Popup","Map","zoom","React","satellite","setSatellite","TileLayer","attribution","googleMapsLoaderConf","KEY","GET_ALL_PROVINCE","GET_DATA_FOR_MAP","GET_DATA_FOR_GRAP","FOR_BAR_GRAP","BarChart","setData","getDataForGrap","datas","dat","labels","datasets","fill","borderColor","options","maintainAspectRatio","LineGraph","BarGraph","getDataForBarGraphTotal","scales","yAxes","ticks","beginAtZero","LineChartTesting","MapScreen","districtLatLong","countries","tableData","setTableData","setCasesType","lng","mapCenter","mapZoom","districtInfo","setDistrictInfo","districtDatas","setDistrictDatas","getAllProvince","mapDatas","arr1","arr2","arr","load1","_id","joinArray","getAllDistrictForMap","sortedData","sort","b","sortData","lower","obj","prop","toLowerCase","forEach","c","FormControl","confirmedCaseToday","ImageCovid","recoveredToday","ImageRecover","deathToday","ImageDeath","ImageCure","ImageDirect","ImageNotDirect","ImageClose","ImageOpen","PrintReport","float","verticalAlign","listStyleType","Component","PrintReport1","rowSpan","PrintReport2","Report","componentRef","useRef","componentRef1","componentRef2","componentRef3","openModal1","setOpenModal1","openModal2","setOpenModal2","openModal3","setOpenModal3","setRanges","trigger","content","ref","locationCol","handleEdit","closeAt","openAt","EditLocation","dataEdit","updateAffectedLocation","Location","setDataEdit","getAffectedLocationWithPagination","deleteAffectedLocation","affectedLocations","SubLocation","interviewCol","Interview","interviewType","setInterviewType","setEditData","interviewedData","setInterviewedData","interview","getConfirmedPersonalInfoByInterviewWithPagination","defaultValue","NotFound","subTitle","extra","Footer","Content","Routes","login","minHeight","exact","path","marginRight","GoGlobalLogo","tokens","newToken","token","process","upLoadLink","createUploadLink","uri","headers","Authorization","wsLink","WebSocketLink","reconnect","splitLink","query","definition","getMainDefinition","kind","operation","client","ApolloClient","networkError","graphQLErrors","link","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b83071f6.chunk.js","sourcesContent":["import { InMemoryCache, Reference, makeVar } from '@apollo/client';\r\n\r\n\r\n// Initializes to true if localStorage includes a 'token' key,\r\n// false otherwise\r\nexport const  isLoggedInVar = makeVar(!!localStorage.getItem(\"user\"));\r\n\r\nexport const cache = new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          isLoggedIn: {\r\n            read() {\r\n              return isLoggedInVar();\r\n            }\r\n          },\r\n        }\r\n      }\r\n    }\r\n  });","export default __webpack_public_path__ + \"static/media/srLogo.85fb41d7.png\";","export const headerReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SET_DATA_BACK':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { headerReducer } from '../reducer/headerReducer'\r\n\r\nexport const HeaderData = createContext()\r\n\r\nexport const genderData = require('../asset/data/gender.json')\r\nexport const provinceData = require('../asset/data/province.json')\r\nexport const districtData = require('../asset/data/district.json')\r\nexport const communeData = require('../asset/data/commune.json')\r\nexport const villageData = require('../asset/data/village.json')\r\nexport const districForMap = require('../asset/data/districtFormap.json')\r\nexport const nationalityData = require('../asset/data/nationality.json')\r\n\r\nexport default function HeaderContext(props) {\r\n    let userData = JSON.parse(localStorage.getItem('user'))\r\n    const urlPath = useLocation().pathname\r\n    const [user, userDispatch] = useReducer(headerReducer,userData)\r\n\r\n    return (\r\n        <HeaderData.Provider\r\n            value={{\r\n                urlPath,\r\n                user,\r\n                userDispatch\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HeaderData.Provider>\r\n    )\r\n}\r\n","import moment from 'moment'\r\n\r\nexport function convertToDistrict(data) {\r\n    var item = []\r\n    data.map(load => {\r\n        return item.push({ id: load.district, title: load.district })\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function convertToCommune(distict, data) {\r\n    var item = []\r\n    data.map(load => {\r\n        if (distict === load.district) {\r\n            return (item.push({ id: load.commune, title: load.commune }))\r\n        }\r\n        return null\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function convertToVillage(commune, data) {\r\n    var item = []\r\n    data.map(load => {\r\n        if (commune === load.commune) {\r\n            item.push({ id: load.village, title: load.village })\r\n        }\r\n        return null\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function getRelated(e, condition) {\r\n    var i = 0\r\n    if (e) {\r\n        e.map(load => {\r\n            if (load.direct === condition) {\r\n                i += 1\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n    return i\r\n}\r\n\r\nexport function getRoles(e) {\r\n    var txt = \"\"\r\n    e.map(load => {\r\n        txt += load.role + \", \"\r\n    })\r\n    return txt\r\n}\r\n\r\nexport function getFullNamePersonInCharge(e) {\r\n    var txt = \"\"\r\n    e.map(load => {\r\n        txt += load.firstName + \" \" + load.lastName\r\n    })\r\n    return txt\r\n}\r\n\r\nexport function convertEditData(e) {\r\n    var array = []\r\n    for (let [key, value] of Object.entries(e)) {\r\n        if(key === \"openAt\" || key === \"closeAt\"){\r\n            array.push(\r\n                {\r\n                    \"name\": [\r\n                        key\r\n                    ],\r\n                    \"value\": value === null ? null : moment(value)\r\n                }\r\n            )\r\n        }else{\r\n            array.push(\r\n                {\r\n                    \"name\": [\r\n                        key\r\n                    ],\r\n                    \"value\": value\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return array\r\n}\r\n\r\nexport function keyMenu(e){\r\n    const myArr = e.split(\"/\");\r\n    let x = \"\"\r\n\r\n    if(myArr[1] === 'people' || myArr[1] === 'subPeople'){\r\n        x=\"/people\"\r\n    }\r\n\r\n    else if(myArr[1] === 'case' || myArr[1] === 'subCase'){\r\n        x=\"/case\"\r\n    }\r\n\r\n    else if(myArr[1] === 'quarantine' || myArr[1] === 'subQuarantine'){\r\n        x=\"/quarantine\"\r\n    }\r\n\r\n    else if(myArr[1] === 'hospital' || myArr[1] === 'subHospital'){\r\n        x=\"/hospital\"\r\n    }\r\n\r\n    else if(myArr[1] === 'specifylocation' || myArr[1] === 'subSpecifylocation'){\r\n        x=\"/specifylocation\"\r\n    }\r\n\r\n    else if(myArr[1] === 'interview' || myArr[1] === 'subInterview'){\r\n        x=\"/interview\"\r\n    }\r\n\r\n    else if(myArr[1] === 'user'){\r\n        x=\"/user\"\r\n    }\r\n\r\n    else if(myArr[1] === 'reportdaily'){\r\n        x=\"/reportdaily\"\r\n    }\r\n\r\n    else{\r\n        x=\"/\"\r\n    }\r\n    \r\n    return x\r\n}\r\n\r\nexport function convertHospitalToSelect(e){\r\n    let array = []\r\n\r\n    e?.map(load => {\r\n        return array.push({id: load.id, title: load.hospitalName})\r\n    })\r\n\r\n    return array\r\n}\r\n\r\nexport function convertQurantineToSelect(e){\r\n    let array = []\r\n\r\n    e?.map(load => {\r\n        return array.push({id: load.id, title: load.locationName})\r\n    })\r\n\r\n    return array\r\n}","import { Layout, Menu, Image,Divider, Popconfirm, Modal } from 'antd';\r\nimport {\r\n    SettingOutlined,\r\n    ContainerOutlined,\r\n    TeamOutlined,\r\n    ExportOutlined,\r\n    HomeOutlined,\r\n    LoginOutlined,\r\n    UserOutlined,\r\n    BankOutlined,\r\n    ReconciliationOutlined,AuditOutlined\r\n} from '@ant-design/icons';\r\nimport Logo from '../asset/srLogo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext, useState } from 'react';\r\nimport { HeaderData } from '../context/headerContext';\r\n// import { auth } from '../api/firebase';\r\nimport { isLoggedInVar } from '../cache';\r\nimport { keyMenu } from '../function/fn'\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { confirm } = Modal;\r\n\r\n\r\n\r\nexport default function MenuHeader() {\r\n    const { urlPath, user } = useContext(HeaderData)\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    // const token =()=>{\r\n    //     let newToken =  JSON.parse(localStorage.getItem('user'))\r\n    //     return newToken?.token\r\n    //   }\r\n      \r\n\r\n    const handleLoggout = ()=>{\r\n        localStorage.removeItem(\"user\")\r\n        isLoggedInVar(false)\r\n    }\r\n\r\n    function showConfirm() {\r\n        confirm({\r\n          title: 'តើអ្នកចង់ចាក់ចេញមែនឬទេ?',\r\n          okType: 'danger',\r\n          okText: \"ចង់\",\r\n          cancelText: \"មិនចង់\",\r\n          onOk() {\r\n            handleLoggout();\r\n          },\r\n          onCancel() {\r\n            console.log('Cancel');\r\n          },\r\n        });\r\n      }\r\n\r\n    return (\r\n        <Sider collapsible collapsed={collapsed} onCollapse={() => setCollapsed(!collapsed)}\r\n        className=\"side-custom\"\r\n            style={{\r\n                // backgroundColor: '#06385f' \r\n                // backgroundColor: '#22252A' \r\n                // backgroundColor:'#1e3b87'\r\n                // backgroundColor:'#005438'\r\n                // background: 'repeating-linear-gradient(-55deg,#005b3d,#005b3d 30px,#005438 30px,#005438 40px)'\r\n                // background: 'url(\"../asset/covid-19-bg.png\") repeat center'\r\n\r\n            }}>\r\n            <Link to=\"/\">\r\n                <div className=\"logo\">\r\n                    <Image width={\"100%\"} className=\"img-logo\" src={Logo} preview={false} />\r\n                </div>\r\n            </Link>\r\n            <Divider style={{background:'#FFF',height:2}} />\r\n            <Menu theme=\"dark\"\r\n                // defaultSelectedKeys={[urlPath]} \r\n                selectedKeys={[keyMenu(urlPath)]}\r\n                mode=\"inline\"\r\n                style={{\r\n                    // backgroundColor: '#06385f'\r\n                    // backgroundColor:'#1e3b87'\r\n                    // backgroundColor: '#22252A' \r\n                    // backgroundColor:'#005438'\r\n                    // background: 'repeating-linear-gradient(-55deg,#006745,#006745 10px,#005438 10px,#005438 20px)'\r\n                    // backgroundColor:\"none\"\r\n                    // background: repeating-linear-gradient(\r\n                    //     -55deg,\r\n                    //     #222,\r\n                    //     #222 10px,\r\n                    //     #333 10px,\r\n                    //     #333 20px\r\n                    //   );\r\n                }}>\r\n               \r\n                <Menu.Item key=\"/\" style={{fontSize:16}} icon={<HomeOutlined style={{fontSize:20}}  />}>\r\n                    ទំព័រដើម\r\n                    <Link to=\"/\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/case\" style={{fontSize:16}} icon={<LoginOutlined style={{fontSize:20}}  />}>\r\n                    កំណត់ត្រាករណី\r\n                    <Link to=\"/case\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/people\" style={{fontSize:16}} icon={<TeamOutlined style={{fontSize:20}}  />}>\r\n                    ព័ត៌មានអ្នកជំងឺ\r\n                    <Link to=\"/people\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/hospital\" style={{fontSize:16}} icon={<ReconciliationOutlined style={{fontSize:20}}  />}>\r\n                    ការព្យាបាល\r\n                    <Link to=\"/hospital\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/interview\" style={{fontSize:16}} icon={<AuditOutlined style={{fontSize:20}}  />}>\r\n                    ការសម្ភាសអ្នកជំងឺ\r\n                    <Link to=\"/interview\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/quarantine\" style={{fontSize:16}} icon={<BankOutlined style={{fontSize:20}}  />}>\r\n                    ចត្តាឡីស័ក\r\n                    <Link to=\"/quarantine\" />\r\n                </Menu.Item>\r\n                \r\n                <Menu.Item key=\"/specifylocation\" style={{fontSize:16}} icon={<AuditOutlined style={{fontSize:20}}  />}>\r\n                    ទីតាំងបិទ/បើក\r\n                    <Link to=\"/specifylocation\" />\r\n                </Menu.Item>\r\n                \r\n                <SubMenu key=\"sub1\" style={{fontSize:16}} icon={<ContainerOutlined style={{fontSize:20}}  />} title=\"របាយការណ៍\">\r\n                    <Menu.Item style={{backgroundColor:'#009966'}} key=\"/reportdaily\">\r\n                        របាយការណ៍\r\n                        <Link to=\"/reportdaily\" />\r\n                    </Menu.Item>\r\n                    {/* <Menu.Item key=\"5\">\r\n                        របាយការណ៍ទាំងមូល\r\n                        <Link to=\"/reportall\" />\r\n                    </Menu.Item> */}\r\n                </SubMenu>\r\n                {/* <Menu.Item key=\"/setting\" icon={<SettingOutlined />}>\r\n                    ការកំណត់\r\n                    <Link to=\"/setting\" />\r\n                </Menu.Item> */}\r\n                {user.role !== \"ADMIN\" ? (\r\n                    <Menu.Item key=\"/user\" style={{fontSize:16}} icon={<UserOutlined style={{fontSize:20}}  />}>\r\n                        កំណត់អ្នកប្រើប្រាស់\r\n                        <Link to=\"/user\" />\r\n                    </Menu.Item>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n\r\n                \r\n                    <Menu.Item\r\n                        // onClick={() => auth.signOut()}\r\n                        style={{fontSize:16}} \r\n                        key=\"6\"\r\n                        icon={<ExportOutlined style={{fontSize:20}}  />}\r\n                        onClick={showConfirm}\r\n                        // onClick={() => handleLoggout()}\r\n                    >\r\n                        ចាកចេញ\r\n                    </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Layout } from 'antd'\r\nimport { HeaderData } from '../context/headerContext'\r\nimport {UserSwitchOutlined} from '@ant-design/icons'\r\n\r\nconst { Header } = Layout\r\n\r\nexport default function Navbar() {\r\n    const { user } = useContext(HeaderData)\r\n\r\n    return (\r\n        // background:'#0087c0'\r\n        // background: 'repeating-linear-gradient(-55deg,#005b3d,#005b3d 30px,#005438 30px,#005438 40px)'\r\n        <Header className=\"site-layout-background nav-custom\" style={{ padding: 0, textAlign: \"right\", }}>\r\n            <p style={{ color: \"white\", paddingRight: 20}}><UserSwitchOutlined style={{fontSize:25}} /> {user?.user?.username.toUpperCase()}</p>\r\n        </Header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/goglobalschool.cd293cd0.png\";","export function dashboardReducer(state, action) {\r\n    switch (action.type) {\r\n      case 'increment':\r\n        return {count: state.count + 1};\r\n      case 'decrement':\r\n        return {count: state.count - 1};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }","import React, {useReducer, createContext} from 'react'\r\nimport { dashboardReducer } from '../reducer/dashboardReducer'\r\n\r\nexport const DashboardController = createContext()\r\n\r\nexport default function DashBoardContext(props) {\r\n    const [dashBoardData, dashBoardDataDispatch] = useReducer(dashboardReducer, [\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ជាសះស្បើយ\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីស្លាប់\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ចត្តាឡីស័ក\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n    ])\r\n\r\n    const [dashboardList, dashboardListDispatch] = useReducer(dashboardReducer, [\r\n        {\r\n            title: \"ស្រុកពួក\",\r\n            case: 10\r\n        },\r\n        {\r\n            title: \"ស្រុកបន្ទាយស្រី\",\r\n            case: 10\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <DashboardController.Provider\r\n            value={{\r\n                dashBoardData,\r\n                dashboardList,\r\n\r\n                dashBoardDataDispatch,\r\n                dashboardListDispatch\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DashboardController.Provider>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport function setCase(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseTitle: values.caseTitle,\r\n        date: new Date(values.date),\r\n        place: values.place,\r\n        related: values.related === undefined ? 0 : values.related,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        remark: values.remark,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditCase(values) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        caseName: values.caseName,\r\n        date: moment(values.date),\r\n        related: values.related === undefined ? 0 : values.related,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        other: values.other,\r\n        long: values.long === undefined ? \"\" : values.long,\r\n        lat: values.lat === undefined ? \"\" : values.lat,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setSubCase(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubCase(values) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setPeople(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        idCard: values.idCard === undefined ? \"\" : values.idCard,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        age: values.age === undefined ? \"\" : values.age,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        job: values.job === undefined ? \"\" : values.job,\r\n        nationality: values.nationality === undefined ? \"\" : values.nationality,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        remark: values.remark === undefined ? \"\" : values.remark,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setUser(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        username: values.username,\r\n        firstName: values.firstName === undefined ? \"\" : values.firstName,\r\n        lastName: values.lastName === undefined ? \"\" : values.lastName,\r\n        role: values.roles.role,\r\n        tel: values.tel,\r\n        email: values.email,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditUser(values) {\r\n    const data = values.roles\r\n\r\n    console.log(data)\r\n\r\n    var array = {\r\n        id: values.id + \"\",\r\n        username: values.username === undefined ? \"\" : values.username,\r\n        firstName: values.firstName === undefined ? \"\" : values.firstName,\r\n        lastName: values.lastName === undefined ? \"\" : values.lastName,\r\n        role: values.role === undefined ? \"\" : values.role,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        email: values.email === undefined ? \"\" : values.email,\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setQuarantine(values, length) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        quarantineName: values.quarantineName === undefined ? \"\" : values.quarantineName,\r\n        place: values.place === undefined ? \"\" : values.place,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        note: values.note === undefined ? \"\" : values.note,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n// export function setEditQuarantine(values, length) {\r\n//     var array = {\r\n//         id: values.id + \"\",\r\n//         quarantineName: values.quarantineName === undefined ? \"\" : values.quarantineName,\r\n//         place: values.place === undefined ? \"\" : values.place,\r\n//         village: values.village === undefined ? \"\" : values.village,\r\n//         commune: values.commune === undefined ? \"\" : values.commune,\r\n//         district: values.district === undefined ? \"\" : values.district,\r\n//         province: values.province === undefined ? \"\" : values.province,\r\n//         inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n//         tel: values.tel === undefined ? \"\" : values.tel,\r\n//         note: values.note === undefined ? \"\" : values.note,\r\n//     }\r\n\r\n//     return array\r\n// }\r\n\r\nexport function setSubQuarantine(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubQuarantine(values) {\r\n    var array = {\r\n        date_in: moment(values.date_in),\r\n        date_out: moment(values.date_out),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values?.personalInfo?.id,\r\n        personalType:values.personalType\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setSubHospital(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubHospital(values) {\r\n    var array = {\r\n        // id: values.id + \"\",\r\n        date_in: moment(values.date_in),\r\n        date_out: values.date_out === undefined || values.date_out === null ? null : moment(values.date_out),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values?.personalInfo?.id,\r\n        personalType:values.personalType\r\n       \r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setHospital(values, length) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        hospitalName: values.hospitalName === undefined ? \"\" : values.hospitalName,\r\n        place: values.place === undefined ? \"\" : values.place,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        note: values.note === undefined ? \"\" : values.note,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditHospital(values, length) {\r\n    var array = {\r\n        lat: values.lat,\r\n        capacity: values.capacity,\r\n        createdAt: values.createdAt,\r\n        hospitalName:values.hospitalName,\r\n        long:values.long,\r\n        other:values.other,\r\n        tel:values?.personInCharge?.tel,\r\n        firstName:values?.personInCharge?.firstName, \r\n        lastName:values?.personInCharge?.lastName, \r\n        position:values?.personInCharge?.position, \r\n        others:values?.personInCharge?.others,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setAddQuarantine(values) {\r\n    var array = {\r\n        locationName: values.locationName,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        long: parseFloat(values.long),\r\n        lat: parseFloat(values.lat),\r\n        other: values.other,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        position: values.position,\r\n        tel: values.tel,\r\n        others: values.others,\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddHospital(values) {\r\n    var array = {\r\n        hospitalName: values.hospitalName,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        long: parseFloat(values.long),\r\n        lat: parseFloat(values.lat),\r\n        other: values.other,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        position: values.position,\r\n        others: values.otehrs,\r\n        tel: values.tel,\r\n\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddPeople(values) {\r\n    var array = {\r\n        firstName:values.firstName,\r\n        lastName:values.lastName,\r\n        age:parseInt(values.age),\r\n        gender:values.gender,\r\n        tel:values.tel,\r\n        nationality:values.nationality,\r\n        occupation:values.occupation,\r\n        idCard:values.idCard,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        case:values.case,\r\n        direct:values.direct,\r\n        other:values.other,\r\n        vaccinated:parseInt(values.vaccinated),\r\n        interviewed: values.interviewed\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setEditPeople(values) {\r\n    var array = {\r\n        firstName:values.firstName,\r\n        lastName:values.lastName,\r\n        age:parseInt(values.age),\r\n        gender:values.gender,\r\n        tel:values.tel,\r\n        nationality:values.nationality,\r\n        occupation:values.occupation,\r\n        idCard:values.idCard,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        case:values.case,\r\n        other:values.other,\r\n        vaccinated:parseInt(values.vaccinated),\r\n        interviewed: values.interviewed\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddSubQuarantine(values){\r\n    var array= {\r\n        date_in: moment(values.date_in).format(),\r\n        date_out: moment(values.date_out).format(),\r\n        others: values.others,\r\n        personalType:values.personalType\r\n    }\r\n    return array;\r\n}\r\n\r\nexport function setEditQuarantine(values){\r\n    var array ={\r\n        lat: values.lat,\r\n        capacity: values.capacity,\r\n        createdAt: values.createdAt,\r\n        locationName:values.locationName,\r\n        long:values.long,\r\n        other:values.other,\r\n        tel:values?.personInCharge?.tel,\r\n        firstName:values?.personInCharge?.firstName, \r\n        lastName:values?.personInCharge?.lastName, \r\n        position:values?.personInCharge?.position, \r\n        others:values?.personInCharge?.others,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function setPeopleLocation(values){\r\n    var array ={\r\n        affectedLocationId: values.affectedLocationId,\r\n        type: values.type   ,\r\n        other: values.other === undefined ? \"\" : values.other,\r\n        date: moment(values.date).format()\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function setPeopleHospital(values){\r\n    var array ={\r\n        date_in: moment(values.date_in),\r\n        date_out: values.date_out === undefined ? null : moment(values.date_out),\r\n        hospitalInfo: values.hospitalInfo,\r\n        others: values.others\r\n    }\r\n\r\n    return array;\r\n}\r\n","import { setCase, setSubCase } from '../function/set'\r\n\r\nexport function caseReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CASE':\r\n            item.push(setCase(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_CASE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_CASE':\r\n            item.splice(index, 1)\r\n\r\n            return item;\r\n        case 'ADD_SUB_CASE':\r\n            item.push(setSubCase(action.payload, item.length))\r\n\r\n            return item;\r\n        case 'EDIT_SUB_CASE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_SUB_CASE':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { caseReducer } from '../reducer/caseReducer'\r\n\r\nexport const CaseController = createContext()\r\n\r\nexport default function CaseContext(props) {\r\n    const [caseData, caseDataDispatch] = useReducer(caseReducer, [\r\n        {\r\n            id: \"1\",\r\n            caseTitle: \"ផ្សារក្រោម\",\r\n            date: new Date(),\r\n            place: \"តូបអ៊ីលាប\",\r\n            related: 100,\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            remark: \"ដេកពេទ្យ\",\r\n            lat:12.23434,\r\n            long:34.3344,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            caseTitle: \"ផ្សារលើ\",\r\n            date: new Date(),\r\n            place: \"តូបអ៊ីលាប\",\r\n            related: 100,\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            remark: \"ដេកពេទ្យ\",\r\n            lat:12.23434,\r\n            long:34.3344,\r\n        },\r\n    ])\r\n\r\n    const [subCaseData, subCaseDataDispatch] = useReducer(caseReducer, [\r\n        {\r\n            id: \"1\",\r\n            caseId: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo: \"ប្រយោល\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            caseId: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo: \"ផ្ទាល់\"\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <CaseController.Provider\r\n            value={{\r\n                caseData,\r\n                subCaseData,\r\n\r\n                caseDataDispatch,\r\n                subCaseDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CaseController.Provider>\r\n    )\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($username: String!, $password: String!) {\r\n    loginUser(username: $username, password: $password) {\r\n      user {\r\n        id\r\n        email\r\n        username\r\n        lastName\r\n        firstName\r\n        image\r\n        tel\r\n        roles {\r\n          id\r\n          role\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IS_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\nmutation registerUser($username:String!, $password:String!,$firstname:String!,$lastname:String!,$email:String!,$role:String!,$tel:String!){\r\n  registerUser(newUser:{\r\n    username:$username\r\n    password:$password\r\n    firstName:$firstname\r\n    lastName:$lastname\r\n    email:$email\r\n    role:$role\r\n    tel:$tel\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const GET_ALL_USERS = gql `\r\nquery getUserWithPagination($page:Int,$limit:Int,$keyword:String){\r\n  getUserWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n  \tusers{\r\n      id\r\n      username\r\n      lastName\r\n      firstName\r\n      email\r\n    \troles{\r\n        id\r\n        role\r\n      }\r\n      tel\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_USER_DETAIL = gql`\r\nmutation updateUserDetail($userId:ID!,$firstName:String!,$lastName:String!,$email:String!,$tel:String!){\r\n  updateUserDetail(\r\n    userId:$userId,\r\n    tel:$tel,\r\n    firstName:$firstName,\r\n    lastName:$lastName,\r\n    email:$email\r\n    ){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\nmutation deleteUser($userId:ID!){\r\n  deleteUser(userId:$userId){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const ADD_USER_ROLE = gql`\r\nmutation addRole($userId:ID!,$role:String!){\r\n  addRole(userId:$userId,role:$role){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n\r\n","import React, {useReducer, createContext,useState} from 'react'\r\nimport { userReducer } from '../reducer/userReducer'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_ALL_USERS } from '../graphql/auth'\r\nimport { setUser } from '../function/set'\r\n\r\nexport const UserController = createContext()\r\n\r\nexport default function UserContext(props) {\r\n    // const [userData, userDataDispatch] = useReducer(userReducer, [\r\n    //     {\r\n    //         id: \"1\",\r\n    //         username: \"user@admin.com\",\r\n    //         role: \"ADMIN\",\r\n    //         tel: \"012457478\" ,\r\n    //         note: \"active\",\r\n           \r\n    //     },\r\n    //     {\r\n    //         id: \"2\",\r\n    //         username: \"user@eka.com\",\r\n    //         role: \"USER\",\r\n    //         tel: \"01548448\" ,\r\n    //         note: \"active\",\r\n    //     },\r\n    // ])\r\n\r\n    const [userData,setUserData] = useState([])\r\n\r\n    const {data, loading,error} = useQuery(GET_ALL_USERS,{variables:{\r\n        page:1,\r\n        limit:2,\r\n        keyword:\"\",\r\n    },onCompleted:({getUserWithPagination})=>{\r\n        // console.log(getUserWithPagination?.users)\r\n        setUserData(getUserWithPagination?.users)\r\n    }})\r\n\r\n\r\n\r\n    return (\r\n        <UserController.Provider\r\n            value={{\r\n                userData,\r\n                //subCaseData,\r\n\r\n                // userDataDispatch,\r\n                //subCaseDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </UserController.Provider>\r\n    )\r\n}\r\n","import { setQuarantine, setSubQuarantine } from '../function/set'\r\n\r\nexport function quarantineReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    switch (action.type) {\r\n        case 'ADD_QUARANTINE':\r\n            item.push(setQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_QUARANTINE':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_QUARANTINE':\r\n            item.splice(index, 1)\r\n            return item;\r\n        case 'ADD_SUB_QUARANTINE':\r\n            item.push(setSubQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_SUB_QUARANTINE':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_SUB_QUARANTINE':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { quarantineReducer } from '../reducer/quarantineReducer'\r\n\r\nexport const QuarantineController = createContext()\r\n\r\nexport default function QuarantineContext(props) {\r\n    const [quarantineData, quarantineDataDispatch] = useReducer(quarantineReducer, [\r\n        {\r\n            id: \"1\",\r\n            quarantineName: \"សាលាគ្រួស\",\r\n            place: \"សាលា\",\r\n            village: \"គ្រួស\" ,\r\n            commune: \"ស្វាយដង្គំ\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដឹម ដយ',\r\n            tel:'015487762',\r\n            note:'test',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            quarantineName: \"សាលាសម្ដេចឪ\",\r\n            place: \"សាលា\",\r\n            village: \"គោកដូង\" ,\r\n            commune: \"ទឹកវិល\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដា​ ធី',\r\n            tel:'087555999',\r\n            note:'098554477',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n    ])\r\n\r\n    const [subQuarantineData, subQuarantineDataDispatch] = useReducer(quarantineReducer, [\r\n        {\r\n            id: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo:'ផ្ទាល់',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo:'ប្រយោល',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <QuarantineController.Provider\r\n            value={{\r\n                quarantineData,\r\n                subQuarantineData,\r\n\r\n                quarantineDataDispatch,\r\n                subQuarantineDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </QuarantineController.Provider>\r\n    )\r\n}\r\n","import { setQuarantine, setSubQuarantine } from '../function/set'\r\n\r\nexport function hospitalReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    switch (action.type) {\r\n        case 'ADD_HOSPITAL':\r\n            item.push(setQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_HOSPITAL':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_HOSPITAL':\r\n            item.splice(index, 1)\r\n            return item;\r\n        case 'ADD_SUB_HOSPITAL':\r\n            item.push(setSubQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_SUB_HOSPITAL':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_SUB_HOSPITAL':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { hospitalReducer } from '../reducer/hospitalReducer'\r\n\r\nexport const HospitalController = createContext()\r\n\r\nexport default function HospitalContext(props) {\r\n    const [hospitalData, hospitalDataDispatch] = useReducer(hospitalReducer, [\r\n        {\r\n            id: \"1\",\r\n            hospitalName: \"ពេទ្យខេត្តសៀមរាប\",\r\n            place: \"សាលា\",\r\n            village: \"គ្រួស\" ,\r\n            commune: \"ស្វាយដង្គំ\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដឹម ដយ',\r\n            tel:'015487762',\r\n            note:'test',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            hospitalName: \"ពេទ្យនាគទេព\",\r\n            place: \"សាលា\",\r\n            village: \"គោកដូង\" ,\r\n            commune: \"ទឹកវិល\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដា​ ធី',\r\n            tel:'087555999',\r\n            note:'098554477',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n    ])\r\n\r\n    const [subHospitalData, subHospitalDataDispatch] = useReducer(hospitalReducer, [\r\n        {\r\n            id: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo:'ផ្ទាល់',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo:'ប្រយោល',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <HospitalController.Provider\r\n            value={{\r\n                hospitalData,\r\n                subHospitalData,\r\n\r\n                hospitalDataDispatch,\r\n                subHospitalDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HospitalController.Provider>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\"; // main style file\r\nimport \"react-date-range/dist/theme/default.css\";\r\nconst DatePickerTwo = ({ranges, setRange}) => {\r\n \r\n  const handleSelect = (ranges) => {\r\n    \r\n    setRange({\r\n      startDate: ranges.selection.startDate,\r\n      endDate: ranges.selection.endDate,\r\n    });\r\n  };\r\n\r\n  const selectionRange = {\r\n    startDate: ranges.startDate,\r\n    endDate: ranges.endDate,\r\n    key: \"selection\",\r\n  };\r\n\r\n  const ran = {\r\n    startDate: ranges.startDate,\r\n    endDate: ranges.endDate,\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      showSelectionPreview={true}\r\n      showDateDisplay={true}\r\n      ranges={[selectionRange]}\r\n      onChange={handleSelect}\r\n      showMonthAndYearPickers={true}\r\n      showSelectionPreview={true}\r\n      showPreview={true}\r\n      editableDateInputs={true}\r\n      // color=\"#721f9c\"\r\n      // rangeColors={[\" #0f0c29\"]}\r\n      preview={ran}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePickerTwo;\r\n\r\n// items.save({\r\n//   name: \"example\",\r\n//   created_at: ISODate(\"2010-04-30T00:00:00.000Z\")\r\n// })\r\n// items.find({\r\n//   created_at: {\r\n//       $gte: ISODate(\"2010-04-29T00:00:00.000Z\"),\r\n//       $lt: ISODate(\"2010-05-01T00:00:00.000Z\")\r\n//   }\r\n// })\r\n// => { \"_id\" : ObjectId(\"4c0791e2b9ec877893f3363b\"), \"name\" : \"example\", \"created_at\" : \"Sun May 30 2010 00:00:00 GMT+0300 (EEST)\" }\r\n","import React, { useState, useContext } from 'react'\r\nimport { Row, Col, Typography, DatePicker, Select, List,Button } from 'antd'\r\nimport { DashboardController } from '../context/dashboardContext'\r\nimport DatePickerTwo from '../component/datepickertwo/datePickerTwo'\r\n\r\nconst { Title } = Typography\r\nconst { RangePicker } = DatePicker\r\nconst { Option } = Select;\r\n\r\nexport default function Dashboard() {\r\n    const { dashBoardData, dashboardList } = useContext(DashboardController)\r\n\r\n    const [dataTop, setDataTop] = useState(dashBoardData)\r\n    const [dataTopRight, setDataTopRight] = useState(dashboardList)\r\n    const [displayDate, setDisplayDate] = useState(\"none\")\r\n\r\n    const dataTitle = [\"ចាប់ពី\", \"រហូតដល់\"]\r\n\r\n    const [ranges,setRange] =useState({\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 12, offset: 12 }}\r\n            // style={{display:'flex',justifyContent:'flex-end'}}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        md={12}\r\n                        className=\"inCol\"\r\n                    >\r\n                        {/* <RangePicker placeholder={dataTitle} style={{width:\"100%\"}} /> */}\r\n                        <Button style={{color:'#CCC', width: \"100%\"}} onClick={()=> setDisplayDate(displayDate===\"block\" ? \"none\":\"block\")}>ជ្រើសរើសកាលបរិច្ឆេទ</Button>\r\n                        <div style={{position:'absolute',zIndex:99,display:displayDate}}>\r\n                        <DatePickerTwo ranges={ranges} setRange={setRange} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                        md={12}\r\n                        className=\"inCol\"\r\n                    >\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder=\"ស្វែងរក...\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            <Option value=\"jack\">Jack</Option>\r\n                            <Option value=\"lucy\">Lucy</Option>\r\n                            <Option value=\"tom\">Tom</Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={18}\r\n            >\r\n                <Row>\r\n                    {dataTop.map(load => {\r\n                        return (\r\n                            <Col\r\n                                md={8}\r\n                                xs={12}\r\n                            >\r\n                                <div className=\"dashboard-card\">\r\n                                    <Title level={4}>{load.title}</Title>\r\n                                    <span\r\n                                        className=\"dashboard-card-mid-text\"\r\n                                    >\r\n                                        ថ្ងៃនេះ៖ {load.today}នាក់\r\n                                    </span><br />\r\n                                    <span\r\n                                        className=\"dashboard-card-footer-text\"\r\n                                    >\r\n                                        សរុប៖ {load.total}នាក់\r\n                                    </span>\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <p>Map</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={6}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div className=\"inCol\">\r\n                            <List\r\n                                header={\r\n                                    <div>ករណីឆ្លងតាមស្រុក</div>\r\n                                }\r\n                                bordered\r\n                                dataSource={dataTopRight}\r\n                                renderItem={item => (\r\n                                    <List.Item style={{backgroundColor:'#FFF'}}>\r\n                                        <span>{item.title}</span>\r\n                                        <span>{item.case}នាក់</span>\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <p>Statistic</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const caseCol = ({ handleDelete, limit, page }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះករណី',\r\n            dataIndex: 'caseName',\r\n            key: 'caseName',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* {record.date} */}\r\n                    {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'ចំនួនអ្នកពាក់ព័ន្ធ',\r\n            dataIndex: 'related',\r\n            key: 'related',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                    {record.province && record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport function ListSelect({ type, data, title, value, setValue, id, disabled }) {\r\n    return (\r\n        type === 0 ? (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                onChange={e => setValue(e)}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                    option.children.indexOf(input) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.localeCompare(optionB.children)\r\n                }\r\n            >\r\n                {data.map(load => {\r\n                    return <Option value={load.title} key={load.id}>{load.title}</Option>\r\n                })}\r\n            </Select>\r\n        ) : (\r\n\r\n            type === 1 ? (\r\n                <Select\r\n                    showSearch\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder={title}\r\n                    value={value}\r\n                    onChange={e => setValue(e)}\r\n                    disabled={disabled}\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                        option.children.indexOf(input) >= 0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                        optionA.children.localeCompare(optionB.children)\r\n                    }\r\n                >\r\n                    {data.map(load => {\r\n                        return <Option value={load.title} key={load.title}>{load.title}</Option>\r\n                    })}\r\n                </Select>\r\n            ) : (\r\n\r\n                type === 2 ? (\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder={title}\r\n                        value={value}\r\n                        onChange={e => setValue(e)}\r\n                        disabled={disabled}\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.indexOf(input) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.localeCompare(optionB.children)\r\n                        }\r\n                    >\r\n                        {data.map(load => {\r\n                            return <Option value={load.id} key={load.id}>{load.lastName} {load.firstName}</Option>\r\n                        })}\r\n                    </Select>\r\n                ) : (\r\n\r\n                    type === 3 ? (\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder={title}\r\n                            value={value}\r\n                            onChange={e => setValue(e)}\r\n                            disabled={disabled}\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.children.indexOf(input) >= 0\r\n                            }\r\n                            filterSort={(optionA, optionB) =>\r\n                                optionA.children.localeCompare(optionB.children)\r\n                            }\r\n                        >\r\n                            {data.map(load => {\r\n                                return <Option value={load.id} key={load.id}>{load.caseName}</Option>\r\n                            })}\r\n                        </Select>\r\n                    ) :\r\n                        type === 4 ? (\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder={title}\r\n                                value={value}\r\n                                onChange={e => setValue(e)}\r\n                                disabled={disabled}\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.indexOf(input) >= 0\r\n                                }\r\n                                filterSort={(optionA, optionB) =>\r\n                                    optionA.children.localeCompare(optionB.children)\r\n                                }\r\n                            >\r\n                                <Option value=\"new\" key=\"new\">បញ្ចូលថ្មី</Option>\r\n                                {data.map(load => {\r\n                                    return <Option value={load.id} key={load.id}>{load.caseName}</Option>\r\n                                })}\r\n                            </Select>\r\n                        ) :\r\n                            type === 5 ? (\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: \"100%\" }}\r\n                                    placeholder={title}\r\n                                    value={value}\r\n                                    onChange={e => setValue(e)}\r\n                                    disabled={disabled}\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.indexOf(input) >= 0\r\n                                    }\r\n                                    filterSort={(optionA, optionB) =>\r\n                                        optionA.children.localeCompare(optionB.children)\r\n                                    }\r\n                                >\r\n                                    <Option value=\"new\" key=\"new\">បញ្ចូលថ្មី</Option>\r\n                                    {data.map(load => {\r\n                                        return <Option value={load.id} key={load.id}>{load.affectedLocationName}</Option>\r\n                                    })}\r\n                                </Select>\r\n                            ) : (\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: \"100%\" }}\r\n                                    placeholder={title}\r\n                                    value={value}\r\n                                    onChange={e => setValue(e)}\r\n                                    disabled={disabled}\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.indexOf(input) >= 0\r\n                                    }\r\n                                    filterSort={(optionA, optionB) =>\r\n                                        optionA.children.localeCompare(optionB.children)\r\n                                    }\r\n                                >\r\n                                    <Option value=\"new\" key=\"new\">បញ្ចូលថ្មី</Option>\r\n                                    {data.map(load => {\r\n                                        return <Option value={load.id} key={load.id}>{load.title}</Option>\r\n                                    })}\r\n                                </Select>\r\n                            )\r\n                )\r\n            )\r\n\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport function ListUserSelect({ type, data, title, value, setValue, id, disabled }) {\r\n    return (\r\n        type === 0 ? (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                onChange={(e) => setValue(e)}\r\n                filterOption={(input, option) =>\r\n                    option.children.indexOf(input) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.localeCompare(optionB.children)\r\n                }\r\n            >\r\n                <Option key={0} value=\"New\">បញ្ចូលថ្មី</Option>\r\n                {data.map(load => {\r\n                    return (\r\n                        <Option value={load.id} key={load.id}>{load.idCard + \" \" + load.firstName + \" \" + load.lastName + \" (\" + load.gender + \") \" + load.tel}</Option>\r\n                    )\r\n                })}\r\n            </Select>\r\n        ) : (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                onChange={(e) => setValue(e)}\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                }\r\n            >\r\n                <Option key={0} value=\"New\">New</Option>\r\n                {data.map(load => {\r\n                    return (\r\n                        <Option value={load.id} key={load.id}>{load.id + \" \" + load.name + \" (\" + load.gender + \")\"}</Option>\r\n                    )\r\n                })}\r\n            </Select>\r\n        )\r\n    )\r\n}","import {gql} from '@apollo/client'\r\n\r\n\r\n\r\nexport const GET_ALL_CASES = gql`\r\nquery getCaseWithPagination($page:Int!, $limit:Int!, $keyword:String){\r\n    getCaseWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n      cases{\r\n        id\r\n        caseName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        date\r\n        createdAt\r\n        updatedAt\r\n        long\r\n        lat\r\n        other\r\n      },\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n\r\n`\r\n\r\nexport const CREATE_NEW_CASE = gql`\r\nmutation createCase($caseName:String,$village:String,$commune:String,$district:String,$province:String,$date:DateTime,$lat:Float,$long:Float,$other:String){\r\n    createCase(newCase:{\r\n      caseName:$caseName\r\n      village:$village\r\n      commune:$commune\r\n      district:$district\r\n      province:$province\r\n      date:$date\r\n        lat:$lat\r\n      long:$long\r\n      other:$other\r\n    }){\r\n      success\r\n      message\r\n      case{\r\n        id\r\n        caseName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_CASES_NO_LIMIT = gql`\r\nquery allCases{\r\n  allCases{\r\n    id\r\n    caseName\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_CASE = gql`\r\nquery getPersonalInfoByCaseWithPagination($page:Int!,$limit:Int!,$keyword:String,$caseId:ID!){\r\n  getPersonalInfoByCaseWithPagination(page:$page,limit:$limit,keyword:$keyword,caseId:$caseId){\r\n    personalInfos{\r\n      id\r\n      firstName\r\n      lastName\r\n      gender\r\n      village\r\n      district\r\n      commune\r\n      province\r\n      direct\r\n      currentState{\r\n        confirm\r\n        death\r\n        recovered\r\n      }\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_CASE_BY_ID = gql`\r\nquery getCaseById($id:ID!){\r\n\tgetCaseById(id:$id){\r\n    id\r\n    caseName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    other\r\n    date\r\n    long\r\n    lat\r\n    createdAt\r\n    updatedAt\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_CASE_BY_ID = gql`\r\nmutation updateCase(\r\n  $caseName:String,\r\n  $village:String,\r\n  $commune:String,\r\n  $district:String,\r\n  $province:String,\r\n  $date:DateTime,\r\n  $long:Float,\r\n  $lat:Float,\r\n  $other:String,\r\n  $id:ID!\r\n){\r\n  updateCase(updatedCase:{\r\n    caseName:$caseName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    date:$date\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_CASE_BY_ID = gql`\r\nmutation deleteCase($id:ID!){\r\n  deleteCase(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { CREATE_NEW_CASE } from '../../../graphql/case'\r\nimport { useMutation } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function AddCase({ open, setOpen, setRefetch, caseId, setCaseId }) {\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createCase, { loading }] = useMutation(CREATE_NEW_CASE, {\r\n        onCompleted: ({ createCase }) => {\r\n\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n            if (caseId === \"new\") {\r\n                setCaseId(createCase.case)\r\n            } else {\r\n                setRefetch()\r\n            }\r\n\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        },\r\n        // refetchQueries:\r\n    })\r\n\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n        createCase({\r\n            variables: {\r\n                caseName: values.caseName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"ក្រៅសៀមរាប\" : values.province,\r\n                date: moment(values.date).format(),\r\n                lat: parseFloat(values.lat),\r\n                long: parseFloat(values.long),\r\n                other: values.other,\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setPeopleCaseFn = () => {\r\n        setOpen(false)\r\n        setCaseId(\"\")\r\n        console.log(caseId)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលករណីថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => caseId === \"new\" ? setPeopleCaseFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={province !== \"សៀមរាប\" ? { span: 24 } : { span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { caseCol } from '../component/case/tableColumn/caseColumn'\r\nimport { CaseController } from '../context/caseContext'\r\nimport AddCase from '../component/case/modal/addCase';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_CASES, DELETE_CASE_BY_ID } from '../graphql/case'\r\n\r\nexport default function Case() {\r\n    //const {caseData, caseDataDispatch} = useContext(CaseController)\r\n    const [caseData, setCaseData] = useState([])\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(15)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, loading, error, refetch} = useQuery(GET_ALL_CASES, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        }, onCompleted: ({ getCaseWithPagination }) => {\r\n            // console.log(\"casePage\",getCaseWithPagination)\r\n            // setCaseData(getCaseWithPagination)\r\n        },\r\n        fetchPolicy:\"network-only\"\r\n    })\r\n\r\n    const [deleteCase, { loading: deleteLoading }] = useMutation(DELETE_CASE_BY_ID, {\r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setCaseData(data?.getCaseWithPagination)\r\n        }\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    const callRefetch = ()=>{\r\n        console.log(\"ref\")\r\n        refetch()\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        //caseDataDispatch({type: \"DELETE_CASE\", payload: e})\r\n        \r\n        deleteCase({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddCase open={openAdd} setRefetch={refetch} setOpen={setOpenAdd} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលករណី\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={caseCol({ handleDelete, limit, page })}\r\n                    dataSource={caseData?.cases}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: caseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        current: caseData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const subCaseCol = ({handleDelete, handleEditSubCase}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName+\" \"+record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 20,\r\n            // render: (text, record) => (\r\n            //     <Space size=\"middle\">\r\n            //         {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n            //     </Space>\r\n            // ),\r\n        },\r\n\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // console.log(record.currentState.confirm)\r\n                        record.currentState.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // console.log(record.currentState.confirm)\r\n                        record ? \"ផ្ទាល់\" : \"ប្រយោល\"\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 20,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <span className=\"link\" onClick={() => handleEditSubCase(record)}><EditOutlined /></span> */}\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { setEditCase } from '../../../function/set'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_CASE_BY_ID } from '../../../graphql/case'\r\n\r\nexport default function EditCase({ open, setOpen, data, caseId, setRetetch }) {\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateCase, { loading }] = useMutation(UPDATE_CASE_BY_ID, {\r\n        onCompleted: () => {\r\n\r\n            setRetetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n\r\n\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (data !== undefined) {\r\n            form.setFieldsValue(setEditCase(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n\r\n        updateCase({\r\n            variables: {\r\n                caseName: values.caseName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                date: values.date,\r\n                long: values.long,\r\n                lat: values.lat,\r\n                other: values.other,\r\n                id: caseId\r\n            }\r\n        })\r\n\r\n        // caseDataDispatch({type: 'EDIT_CASE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែករណី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false}\r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editCase\"\r\n                initialValues={setEditCase(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type={1} placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type={1} placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table, Input } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { subCaseCol } from './tableColumn/subCaseColumn'\r\nimport { EditOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport EditCase from './modal/editCase'\r\nimport { getRelated } from '../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case'\r\nimport { GET_CASE_BY_ID } from '../../graphql/case'\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubCase() {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    // const [openAddSub, setOpenAddSub] = useState(false)\r\n    // const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [caseData, setCaseData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n            setSubCaseData(getPersonalInfoByCaseWithPagination)\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setSubCaseData(data?.getPersonalInfoByCaseWithPagination)\r\n        }\r\n    },[data])\r\n\r\n    const { data: dataCase , refetch:refetchCase} = useQuery(GET_CASE_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getCaseById }) => {\r\n            setCaseData(getCaseById)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(dataCase){\r\n            setCaseData(dataCase?.getCaseById)\r\n        }\r\n    },[dataCase])\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        // subCaseDataDispatch({type: \"DELETE_SUB_CASE\", payload: e})\r\n    }\r\n\r\n    const handleEditSubCase = (e) => {\r\n        // setUpdateSubData(e)\r\n        // setOpenEditSub(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <EditCase open={openEdit} setOpen={setOpenEdit} data={caseData} caseId={id} setRetetch={refetchCase} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ width: 150 }}>\r\n                                <Title level={5}>ឈ្មោះករណី\r\n                                </Title>\r\n                            </td>\r\n                            <td style={{ width: '50%' }}>\r\n                                <Title level={5}>៖ {caseData?.caseName + \" \"}\r\n                                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} />\r\n                                </Title>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{ width: '50%' }}><p>កាលបរិច្ឆេទ</p></td>\r\n                            <td style={{ width: '50%' }}><p>៖ {moment(caseData?.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>អាសយដ្ឋាន</td>\r\n                            <td> <p>៖ {\" \"}\r\n                                {caseData?.village !== \"ក្រៅសៀមរាប\" && caseData?.village + \",\"}\r\n                                {caseData?.commune !== \"ក្រៅសៀមរាប\" && caseData?.commune + \",\"}\r\n                                {caseData?.district !== \"ក្រៅសៀមរាប\" && caseData?.district + \",\"}\r\n                                {caseData?.province}</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><p>ចំនួនអ្នកពាក់ព័ន្ធករណី</p></td>\r\n                            <td><p>៖ {subCaseData?.personalInfos?.length}</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><p>ផ្សេងៗ</p></td>\r\n                            <td><p>៖ {caseData?.other}</p></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ width: '50%' }}><p>ចំនួនអ្នកពាក់ព័ន្ធផ្ទាល់</p></td>\r\n                            <td style={{ width: '50%' }}><p>៖ {getRelated(subCaseData?.personalInfos, true)}នាក់</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><p>ចំនួនអ្នកពាក់ព័ន្ធប្រយោល</p></td>\r\n                            <td><p>៖ {getRelated(subCaseData?.personalInfos, false)}នាក់</p></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                {/* <p>ចំនួនអ្នកជាសះស្បើយ៖ {getRelated(subCaseData, \"សះស្បើយ\")}នាក់</p>\r\n                <p>ចំនួនអ្នកស្លាប់៖ {getRelated(subCaseData, \"ស្លាប់\")}នាក់</p> */}\r\n            </Col>\r\n\r\n\r\n            <Col\r\n                xs={18}\r\n                style={{ margin: \"30px 0 0 0\" }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ៖\r\n                    {/* <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/> */}\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={{span: 6, offset: 1}}\r\n                style={{ margin: \"20px 0 20px 0\" }}\r\n            >\r\n                <Input prefix={<SearchOutlined />} placeholder=\"ស្វែងរក...\" size=\"large\" onChange={e => setKeyword(e.target.value) }/>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subCaseCol({ handleDelete, handleEditSubCase })}\r\n                    dataSource={subCaseData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: subCaseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\nimport { getRoles } from '../../../function/fn';\r\n\r\nexport const userCol = ({ handleDelete, handleUserEdit,handleAccountEdit, comeBackUserRole, limit, page }) => {\r\n    // let l = limit >= 20 ? limit/page : limit\r\n    let no = ((page-1) * limit)\r\n\r\n    console.log(limit,page, no)\r\n\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no +=1 }\r\n                    {\r\n                        console.log(no)\r\n                    }\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'គោត្តនាម',\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'នាម',\r\n            dataIndex: 'lastName',\r\n            key: 'lastName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'តួនាទី',\r\n            dataIndex: 'roles',\r\n            key: 'roles',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span onClick={()=> comeBackUserRole(record)} className=\"link\" size=\"middle\">\r\n                    {\r\n                        // getRoles(record?.roles)\r\n                        record.roles.map(load => (\r\n                            load.role + \", \"\r\n                        ))\r\n                    }\r\n                    \r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'អ៊ីម៉ែល',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    \r\n                    <span className=\"link\" onClick={() => handleAccountEdit(record)}><SettingOutlined /></span>\r\n                    <span className=\"link\" onClick={() => handleUserEdit(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message} from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTER_USER } from '../../../graphql/auth';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddUser({ open, setOpen,setRefetch }) {\r\n\r\n    const [registerUser,{loading,error}] = useMutation(REGISTER_USER,{\r\n        onCompleted:({registerUser})=>{\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n            setOpen(false)\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n\r\n        registerUser({\r\n            variables:{\r\n\r\n                username:values.username,\r\n                password:values.password,\r\n                firstname:values.firstname,\r\n                lastname:values.lastname,\r\n                email:values.email,\r\n                role:values.role,\r\n                tel:values.tel\r\n\r\n            }\r\n        })\r\n\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្នកប្រើប្រាស់ថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"firstname\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastname\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"role\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"តួនាទី\" /> */}\r\n                            <Select placeholder=\"តួនាទី\" style={{ width: \"100%\" }}>\r\n                            <Option value=\"BASIC\">BASIC</Option>\r\n                                <Option value=\"ADMIN\">ADMIN</Option>\r\n                                <Option value=\"SUPPER\">SUPPER</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"email\" placeholder=\"អ៊ីម៉ែល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_USER_DETAIL } from '../../../graphql/auth';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function EditUser({ open, setOpen, data, setRefetch }) {\r\n    //const { userDataDispatch } = useContext(UserController)\r\n\r\n    const [updateUserDetail, { loading, error }] = useMutation(UPDATE_USER_DETAIL,{\r\n        onCompleted:({updateUserDetail})=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែបានជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            message.success(\"កែប្រែមានបញ្ហា!\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    \r\n\r\n    const onFinish = (values) => {\r\n        updateUserDetail({variables:{\r\n            userId:data.id,\r\n            firstName:values.firstName,\r\n            lastName:values.lastName,\r\n            email:values.email,\r\n            tel:values.tel,\r\n        }})\r\n\r\n        \r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រេអ្នកប្រើប្រាស់\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editUser\"\r\n                fields={[\r\n                    \r\n                    {\r\n                        name: ['firstName'],\r\n                        value: data.firstName,\r\n                    },\r\n                    {\r\n                        name: ['lastName'],\r\n                        value: data.lastName,\r\n                    },\r\n                    {\r\n                        name: ['tel'],\r\n                        value: data.tel,\r\n                    },\r\n                    {\r\n                        name: ['email'],\r\n                        value: data.email,\r\n                    },\r\n                    \r\n                ]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"email\" placeholder=\"អ៊ីម៉ែល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n","import { Space } from \"antd\"\r\nimport { Popconfirm } from \"antd\"\r\nimport { DeleteOutlined } from \"@ant-design/icons\"\r\n\r\nexport const roleColumn = [\r\n    {\r\n        title: 'តួនាទី',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: 20,\r\n    },\r\n    {\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: 20,\r\n        render:() => (\r\n            <Space size=\"middle\"\r\n            >\r\n                <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        // onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                </Popconfirm>\r\n            </Space>\r\n        )\r\n    }\r\n]","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message, Table } from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER_ROLE } from '../../../graphql/auth';\r\nimport { roleColumn } from '../tableColumn/roleColumn';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddRole({ open, setOpen,userID, dataRoles , setRefetch }) {\r\n   \r\n    const [addRole, { loading, error }] = useMutation(ADD_USER_ROLE, {\r\n        onCompleted: ({ addRole }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            message.error(\"បញ្ចូលបានជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n        addRole({\r\n            variables: {\r\n                userId:userID,\r\n                role:values.role\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអតួនាទី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Form.Item\r\n                            name=\"role\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"តួនាទី\" /> */}\r\n                            <Select placeholder=\"តួនាទី\" style={{ width: \"100%\" }}>\r\n\r\n                                <Option value=\"BASIC\">BASIC</Option>\r\n                                <Option value=\"ADMIN\">ADMIN</Option>\r\n                                <Option value=\"SUPPER\">SUPPER</Option>\r\n                                {/* <Option value=\"USER\">USER</Option> */}\r\n                                {/* 'BASIC','ADMIN','SUPPER','ACCOUNTANT','MARTMANAGER','CEO' */}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={{span: 11, offset:1}}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        // onClick={()=> }\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Table\r\n                            columns={roleColumn}\r\n                            dataSource={dataRoles}\r\n                            pagination={false}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message } from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_USER_DETAIL } from '../../../graphql/auth';\r\nimport { EyeTwoTone,EyeInvisibleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function EditAccount({ open, setOpen, data,setRefetch }) {\r\n    //const { userDataDispatch } = useContext(UserController)\r\n\r\n    const [updateUserDetail, { loading, error }] = useMutation(UPDATE_USER_DETAIL,{\r\n        onCompleted:({updateUserDetail})=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែបានជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            message.success(\"កែប្រែមានបញ្ហា!\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n\r\n        updateUserDetail({variables:{\r\n            userId:data.id,\r\n            firstName:values.firstName,\r\n            lastName:values.lastName,\r\n            email:values.email,\r\n            tel:values.tel,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែលេខសម្ងាត់\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editUser\"\r\n                fields={[\r\n                    {\r\n                        name: ['username'],\r\n                        value: data.username,\r\n                    },\r\n                    // {\r\n                    //     name: ['firstName'],\r\n                    //     value: data.firstName,\r\n                    // },\r\n                    // {\r\n                    //     name: ['lastName'],\r\n                    //     value: data.lastName,\r\n                    // },\r\n                    // {\r\n                    //     name: ['tel'],\r\n                    //     value: data.tel,\r\n                    // },\r\n                    // {\r\n                    //     name: ['email'],\r\n                    //     value: data.email,\r\n                    // },\r\n                    \r\n\r\n                ]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input.Password placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11}}>\r\n                        <Form.Item\r\n                            name=\"cfpassword\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input.Password placeholder=\"បញ្ជាក់លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    \r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userCol } from '../component/user/tableColumn/userColumn'\r\nimport AddUser from '../component/user/modal/addUser';\r\nimport EditUser from '../component/user/modal/editUser';\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_USERS } from '../graphql/auth'\r\nimport { DELETE_USER } from '../graphql/auth';\r\nimport AddRole from '../component/user/modal/addRole';\r\nimport EditAccount from '../component/user/modal/editAccount';\r\n\r\nexport default function User() {\r\n\r\n    const [userData, setUserData] = useState([])\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    \r\n    const [dataRoles, setDataRoles] = useState([])\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [userEdit, setUserEdit] = useState({});\r\n    const [openRole, setOpenRole] = useState(false)\r\n    const [roleUserID, setRoleUserID] = useState(\"\")\r\n    const [openEditAccount, setOpenEditAccount] = useState(false)\r\n\r\n    //query all user\r\n    const { data, loading, refetch } = useQuery(GET_ALL_USERS, {\r\n        variables: {\r\n            page:page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        }, onCompleted: ({ getUserWithPagination }) => {\r\n            //console.log(getUserWithPagination)\r\n            setUserData(getUserWithPagination)\r\n        },\r\n        fetchPolicy: 'network-only',\r\n    })\r\n\r\n    //delete user on ID\r\n    const [deleteUser, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_USER, {\r\n        onCompleted: ({ deleteUser }) => {\r\n            refetch()\r\n            message.success(\"លុបបានជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            console.log(data)\r\n            setUserData(data?.getUserWithPagination)\r\n        }\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        // refetch()\r\n    }, [page,limit,keyword])\r\n\r\n    const handleUserRole = (e) => {\r\n        setOpenRole(true)\r\n        setDataRoles(e)\r\n    }\r\n\r\n    const handleUserEdit = (e) => {\r\n        setUserEdit(e)\r\n        setOpenEdit(true)\r\n    }\r\n\r\n    const handleAccountEdit = (e) => {\r\n        setUserEdit(e)\r\n        setOpenEditAccount(true)\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        //userDataDispatch({ type: \"DELETE_USER\", payload: e })\r\n        // console.log(e)\r\n        deleteUser({variables:{\r\n            userId:e\r\n        }})\r\n    }\r\n\r\n    const comeBackUserRole  =(e)=>{\r\n        console.log(e)\r\n        handleUserRole(e.roles)\r\n        setRoleUserID(e.id)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddUser open={openAdd} setOpen={setOpenAdd} setRefetch={refetch} />\r\n            <EditUser open={openEdit} setOpen={setOpenEdit} data={userEdit} setRefetch={refetch} />\r\n            <AddRole open={openRole} setOpen={setOpenRole} userID={roleUserID} dataRoles={dataRoles} setRefetch={refetch} />\r\n            <EditAccount open={openEditAccount} setOpen={setOpenEditAccount} data={userEdit} setRefetch={refetch} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលអ្នកប្រើប្រាស់\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=> setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={userCol({ handleDelete, handleUserEdit,handleAccountEdit, comeBackUserRole ,limit, page })}\r\n                    dataSource={userData?.users}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: userData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current:userData?.paginator?.currentPage,\r\n                        onChange:((page, pageSize) => { setPage(page); setLimit(pageSize)} )\r\n                    }}\r\n                    \r\n                    scroll={{ x: 400 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n            {\r\n            console.log(page)\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { getFullNamePersonInCharge, getRoles } from '../../../function/fn';\r\nimport moment from 'moment';\r\n\r\nexport const quarantineCol = ({handleDelete,limit,page}) => {\r\n\r\n    let no = ((page-1) * limit)\r\n\r\n    console.log(limit)\r\n\r\n    let d = new Date().setHours(0,0,0,0)\r\n    let m = moment(d).format(\"DD-MM-yyyy hh:mm:ss\")\r\n\r\n   \r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះមណ្ឌល',\r\n            dataIndex: 'locationName',\r\n            key: 'locationName',\r\n            width: 100,\r\n        },\r\n       \r\n        {\r\n            title: 'អាសយដ្ឋាន  ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                // <Tooltip placement=\"top\" title={record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}>\r\n                    <Space size=\"middle\">\r\n                        {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                        {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                        {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                        {record.province && record.province}\r\n                        \r\n                    </Space>\r\n                // </Tooltip>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'អ្នកទទួលខុសត្រូវ',\r\n            dataIndex: 'personInCharge',\r\n            key: 'personInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.lastName+\" \"+record.personInCharge.firstName\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'personInCharge',\r\n            key: 'personInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.tel\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n    \r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subQuarantine/\"+record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import {gql} from \"@apollo/client\"\r\n\r\nexport const GET_ALL_QUARANTINEINFO = gql`\r\nquery getQuarantineInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n    getQuarantineInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n      quarantineInfos{\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        other\r\n        capacity\r\n        personInCharge{\r\n            firstName\r\n            lastName\r\n            position\r\n            tel\r\n            others\r\n        }\r\n        long\r\n        lat\r\n        createdAt\r\n        updatedAt\r\n       \r\n      },\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_QUARANTINEINFO = gql`\r\nmutation createQuarantineInfo(\r\n    $locationName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long: Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $position:String,\r\n    $tel:String,\r\n    $others:String,\r\n){\r\n    createQuarantineInfo(newQuarantineInfo:{\r\n      locationName:$locationName\r\n      village:$village\r\n      commune:$commune\r\n      district: $district\r\n      province:$province\r\n      long: $long\r\n      lat:$lat\r\n      other:$other\r\n      personInCharge:{\r\n        firstName:$firstName\r\n        lastName:$lastName\r\n        position:$position\r\n        tel:$tel\r\n        others:$others\r\n      }\r\n    }){\r\n      success\r\n      message\r\n      quarantineInfo{\r\n        capacity\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        long\r\n        lat\r\n        other\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_QUARANTINE_BY_ID = gql`\r\nmutation deleteQuarantineInfo($id:ID!){\r\n    deleteQuarantineInfo(id:$id){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_PERSON_QUARANTINE = gql`\r\nmutation createQuarantine(\r\n  $date_in:DateTime,\r\n  $date_out:DateTime,\r\n  $personalInfo:ID!,\r\n  $quarantineInfo:ID!,\r\n  $others:String,\r\n  $personalType:String\r\n){\r\n  createQuarantine(newQuarantine:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    quarantineInfo:$quarantineInfo\r\n    others:$others\r\n    personalType:$personalType\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_QUARANTINE = gql`\r\nquery getQuarantineByQurantineIdWithPagination(\r\n  $page:Int!,\r\n  $limit:Int!,\r\n  $keyword:String,\r\n  $quarantineInfoId:ID!\r\n){\r\n  getQuarantineByQurantineIdWithPagination(page:$page,limit:$limit,keyword:$keyword,quarantineInfoId:$quarantineInfoId){\r\n    quarantines{\r\n      id\r\n      date_in\r\n      date_out\r\n      personalInfo{\r\n      \tid\r\n        firstName\r\n        lastName\r\n        village\r\n        gender\r\n        district\r\n        commune\r\n        province\r\n        direct\r\n        currentState{\r\n          confirm\r\n          death\r\n          recovered\r\n        }\r\n    \t}\r\n      \r\n      personalType\r\n      others\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_QUARANTINE_BY_ID = gql`\r\nquery getQuarantineInfoById($id:ID!){\r\n  getQuarantineInfoById(id:$id){\r\n    capacity\r\n    id\r\n    locationName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long\r\n    lat\r\n    createdAt\r\n    updatedAt\r\n    personInCharge{\r\n      firstName\r\n      lastName\r\n      position\r\n      others\r\n      tel\r\n    }\r\n    other\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_QUARANTINE_BY_ID = gql`\r\nmutation updateQuarantineInfo(\r\n    $locationName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long:Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $capacity:Int,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $tel:String,\r\n    $position:String,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n  updateQuarantineInfo(updatedQuarantineInfo:{\r\n    locationName:$locationName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n    capacity:$capacity\r\n    personInCharge:{\r\n      firstName:$firstName\r\n      lastName:$lastName\r\n      tel:$tel\r\n      position:$position\r\n      others:$others\r\n    }\r\n  },id:$id){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_PERSON_BY_QUARANTINE = gql`\r\nmutation deleteQuarantine($id:ID!){\r\n  deleteQuarantine(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_PEOPLE_BY_QUARANTINE = gql`\r\nmutation updateQuarantine(\r\n    $date_in:DateTime,\r\n    $date_out:DateTime,\r\n    $personalType:String,\r\n    $personalInfo:ID!,\r\n    $quarantineInfo:ID!,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n  updateQuarantine(updatedQuarantine:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalType:$personalType\r\n    personalInfo:$personalInfo\r\n    quarantineInfo:$quarantineInfo\r\n    others:$others\r\n  },id:$id){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const ALL_QUARANTINEINFO = gql`\r\nquery allQuarantineInfos{\r\n  allQuarantineInfos{\r\n    capacity\r\n    locationName\r\n    id\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long \r\n    lat\r\n    personInCharge{\r\n      firstName \r\n      lastName \r\n      position\r\n      others\r\n      tel\r\n    }\r\n  }}\r\n\r\n\r\n`","import React, { useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, Divider, message} from 'antd';\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_QUARANTINEINFO } from '../../../graphql/quarantine';\r\nimport { setAddQuarantine } from '../../../function/set';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddQuarantine({ open, setOpen, quarantineId, setQuarantineId , setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createQuarantineInfo,{loading,error}]=useMutation(CREATE_QUARANTINEINFO,{\r\n        onCompleted:({createQuarantineInfo})=>{\r\n            \r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n            if (quarantineId === \"new\") {\r\n                setQuarantineId(createQuarantineInfo.quarantineInfo)\r\n            }else{\r\n                setRefetch()\r\n            }\r\n        },\r\n        \r\n    })\r\n\r\n    const onFinish = (values) => {\r\n\r\n        createQuarantineInfo({variables:setAddQuarantine(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setPeopleQuarantineFn = () => {\r\n        setOpen(false)\r\n        setQuarantineId(\"\")\r\n        // console.log(locationId)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមណ្ឌលចត្តាឡីស័កថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => quarantineId === \"new\" ? setPeopleQuarantineFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"locationName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    \r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { quarantineCol } from '../component/quarantine/tableColumn/quarantineColumn'\r\nimport AddQuarantine from '../component/quarantine/modal/addQuarantine';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_QUARANTINEINFO } from '../graphql/quarantine';\r\nimport { DELETE_QUARANTINE_BY_ID } from '../graphql/quarantine';\r\n\r\nexport default function Quarantine() {\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [quarantineData, setQuarantineData] = useState([])\r\n\r\n    const { data, loading, error, refetch } = useQuery(GET_ALL_QUARANTINEINFO, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted: ({ getQuarantineInfoWithPagination }) => {\r\n            // console.log(\"test\",getQuarantineInfoWithPagination?.quarantineInfos)\r\n            setQuarantineData(getQuarantineInfoWithPagination)\r\n            \r\n        },\r\n        fetchPolicy: 'network-only',\r\n        \r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            console.log(data)\r\n            setQuarantineData(data?.getQuarantineInfoWithPagination)\r\n        }\r\n    }, [data])\r\n    \r\n    const [deleteQuarantineInfo, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_QUARANTINE_BY_ID, {     \r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"ទិន្នន័យត្រូវបានលុប\")\r\n        },\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //quarantineDataDispatch({ type: \"DELETE_QUARANTINE\", payload: e })\r\n        deleteQuarantineInfo({\r\n            variables: {\r\n                id: e\r\n            },\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddQuarantine open={openAdd} setOpen={setOpenAdd} setRefetch={refetch} />\r\n            {/* <EditUser open={openEdit} setOpen={setOpenEdit} user={userEdit} /> */}\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលមណ្ឌលចត្តាឡីស័ក\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    // caseCol({handleDelete})\r\n                    className=\"table-go-list\"\r\n                    columns={quarantineCol({ handleDelete, limit, page })}\r\n                    dataSource={quarantineData?.quarantineInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: quarantineData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: quarantineData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n            {\r\n                console.log(quarantineData?.paginator?.currentPage,)\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const subQuarantineCol = ({handleDelete, handleEditSubQuarantine,limit,page}) => {\r\n    let no = (page-1) * limit\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no+=1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'quarantines',\r\n            key: 'quarantines',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.lastName} {record?.personalInfo?.firstName}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទចូល',\r\n            dataIndex: 'date_in',\r\n            key: 'date_in',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_in).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចេញ',\r\n            dataIndex: 'date_out',\r\n            key: 'date_out',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.date_out === null ? \"គ្មាន\":moment(record?.date_out).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 90,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record?.personalInfo?.village !== \"ក្រៅសៀមរាប\") && record?.personalInfo?.village}\r\n                    {record?.personalInfo?.commune !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.commune}\r\n                    {record?.personalInfo?.district !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.district}\r\n                    {record?.personalInfo?.province && record?.personalInfo?.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.currentState?.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.direct ? \"ផ្ទាល់\" : \"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record?.personalInfo?.id}><EyeOutlined /></Link>\r\n                    <span className=\"link\" onClick={() => handleEditSubQuarantine(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, Select, Divider, message } from 'antd'\r\nimport { setEditQuarantine } from '../../../function/set'\r\n\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_QUARANTINE_BY_ID } from '../../../graphql/quarantine'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditQuarantine({ open, setOpen, data, quarantineId, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [updateQuarantineInfo, { loading }] = useMutation(UPDATE_QUARANTINE_BY_ID, {\r\n        onCompleted: () => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if (data !== undefined) {\r\n            form.setFieldsValue(setEditQuarantine(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        updateQuarantineInfo({\r\n            variables: {\r\n                lat: values.lat,\r\n                capacity: parseInt(values.capacity),\r\n                createdAt: values.createdAt,\r\n                locationName: values.locationName,\r\n                long: values.long,\r\n                other: values.other,\r\n                tel: values.tel,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                position: values.position,\r\n                others: values.others,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                id:quarantineId\r\n            }\r\n        })\r\n\r\n        // quarantineDataDispatch({type: 'EDIT_QUARANTINE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែមណ្ឌលចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false}\r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editQuarantine\"\r\n                initialValues={setEditQuarantine(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"locationName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"capacity\"\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"អាចផ្ទុកបាន\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select,DatePicker, message } from 'antd'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_PERSON_QUARANTINE } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddSubQuarantine({ open, setOpen, quarantineId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [createQuarantine,{data}]=useMutation(CREATE_PERSON_QUARANTINE,{\r\n        onCompleted:({createQuarantine})=>{\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        createQuarantine({variables:{\r\n            in:values.in,\r\n            date_in:moment(values.date_in).format(),\r\n            date_out:moment(values.date_out).format(),\r\n            personalType:values.personalType,\r\n            personalInfo:values.personalInfo,\r\n            quarantineInfo:quarantineId,\r\n            others:values.others,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្ន​កចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ឈ្មោះ\" /> */}\r\n                            <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ចត្តាឡីស័ក\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { setEditSubQuarantine } from '../../../function/set'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_PEOPLE_BY_QUARANTINE } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\nconst { Option } = Select\r\n\r\nexport default function EditSubQuarantine({ open, setOpen, data, quarantineId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateQuarantine,{loading}]=useMutation(UPDATE_PEOPLE_BY_QUARANTINE,{\r\n        onCompleted:()=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        // setEditData(data)\r\n    }, [data, open])\r\n\r\n    const onFinish = (values) => {\r\n\r\n        updateQuarantine({\r\n            variables:{\r\n                in:values.in,\r\n                date_in:moment(values.date_in).format(),\r\n                date_out:moment(values.date_out).format(),\r\n                personalType:values.personalType,\r\n                // out_status: String,\r\n                personalInfo:values.personalInfo,\r\n                quarantineInfo:quarantineId,\r\n                others: values.others,\r\n                id:data.id\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubQuarantine\"\r\n                initialValues={setEditSubQuarantine(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ឈ្មោះ\" /> */}\r\n                            <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {peopleData.map((people) => (\r\n                                    <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_PERSONINFO = gql`\r\nquery getPersonalInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n    getPersonalInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n        personalInfos{\r\n          id\r\n          firstName\r\n          lastName\r\n          age\r\n          gender\r\n          tel\r\n          nationality\r\n          occupation\r\n          idCard\r\n          profileImg\r\n          village\r\n          commune\r\n          district\r\n          interviewed\r\n          province\r\n          englishName\r\n          patientId\r\n          illness\r\n          relation\r\n          case{\r\n            id\r\n          }\r\n          direct\r\n          other\r\n          relapse\r\n          relapseAt\r\n          vaccinated\r\n          createdAt\r\n          updatedAt\r\n          currentState{\r\n            confirm\r\n            confirmedAt\r\n            death\r\n            deathAt\r\n            recovered\r\n            recoveredAt\r\n          }\r\n        }\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_PERSON = gql`\r\nmutation createPersonalInfo(\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $age:Int,\r\n    $gender:String,\r\n    $tel:String,\r\n    $nationality:String,\r\n    $occupation:String,\r\n    $idCard:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $vaccinated:Int,\r\n    $district:String,\r\n    $province:String,\r\n    $case:ID!,\r\n    $direct:Boolean,\r\n    $other:String,\r\n    $interviewed:Boolean\r\n    $englishName:String\r\n    $patientId:String\r\n    $illness:String\r\n    $relation:String\r\n){\r\n    createPersonalInfo(newInfo:{\r\n            firstName:$firstName\r\n            lastName:$lastName\r\n            age:$age\r\n            gender:$gender\r\n            tel:$tel\r\n            nationality:$nationality\r\n            occupation:$occupation\r\n            idCard:$idCard\r\n            village:$village\r\n            commune:$commune\r\n            vaccinated:$vaccinated\r\n            district:$district\r\n            province:$province\r\n            case: $case\r\n            direct:$direct\r\n            other: $other\r\n            interviewed:$interviewed\r\n            englishName:$englishName\r\n            patientId:$patientId\r\n            illness:$illness\r\n            relation:$relation\r\n    }){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_PERSONINFO_NO_LIMIT = gql`\r\nquery allPersonalInfos{\r\n  allPersonalInfos{\r\n    id\r\n    firstName\r\n    lastName\r\n    gender\r\n    nationality\r\n    occupation\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    direct\r\n    currentState{\r\n      confirm\r\n      confirmedAt\r\n      recovered\r\n      recoveredAt\r\n      death\r\n      deathAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const RECORD_SAMPLETEST = gql`\r\nmutation recordSampleTest(\r\n  $date:DateTime,\r\n  $times:Int,\r\n  $location:String,\r\n  $result:Boolean,\r\n  $symptom:String,\r\n  $other:String,\r\n  $reasonForTesting:String,\r\n  $symptomStart:DateTime,\r\n  $labFormCompletedBy:String,\r\n  $specimentType:String,\r\n  $laboratory:String,\r\n  $personalInfoId:ID!,\r\n){\r\n  recordSampleTest(sampleTest:{\r\n    date:$date\r\n    times:$times\r\n    location:$location\r\n    result:$result\r\n    symptom:$symptom\r\n    other:$other\r\n    reasonForTesting:$reasonForTesting\r\n    symptomStart:$symptomStart\r\n    labFormCompletedBy:$labFormCompletedBy\r\n    specimentType:$specimentType\r\n    laboratory:$laboratory\r\n  },personalInfoId:$personalInfoId){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSONALINFO_BY_ID = gql`\r\nquery getPersonalInfoById($id:ID!){\r\n  getPersonalInfoById(id:$id){\r\n    id\r\n\t\tfirstName\r\n    lastName\r\n    age\r\n    gender\r\n    tel\r\n    nationality\r\n    occupation\r\n    idCard\r\n    profileImg\r\n    village\r\n    commune\r\n    district\r\n    interviewed\r\n    province\r\n    englishName\r\n    patientId\r\n    illness\r\n    createdAt\r\n    relation\r\n    case{\r\n      id\r\n      caseName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      date\r\n      long\r\n      lat\r\n    }\r\n    direct\r\n    other\r\n    relapse\r\n    relapseAt\r\n    vaccinated\r\n    currentState{\r\n      confirm\r\n      confirmedAt\r\n      death\r\n      deathAt\r\n      recovered\r\n      recoveredAt\r\n    }\r\n    sampleTest{\r\n      id\r\n      date\r\n      times\r\n      location\r\n      result\r\n      symptom\r\n      other\r\n      reasonForTesting\r\n      symptomStart\r\n      labFormCompletedBy\r\n      specimentType\r\n      laboratory\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const DELETE_PERSONALINFO_BY_ID = gql`\r\nmutation deletePersonalInfo($id:ID!){\r\n  deletePersonalInfo(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_HOSPITAL_QUARANTINE_BY_PERSON = gql`\r\nquery getHospitalizationByPersonalInfo($personalId:ID!){\r\n  getHospitalizationByPersonalInfo(personalId:$personalId){\r\n    hospitalInfo{\r\n      id\r\n      date_in\r\n      date_out\r\n      others\r\n      hospitalInfo{\r\n        id\r\n        hospitalName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n      }\r\n    }\r\n    quarantineInfo{\r\n      id\r\n      date_in\r\n      date_out\r\n      quarantineInfo{\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n      }\r\n      personalType\r\n      others\r\n\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const UPDATE_PERSON_BY_ID = gql`\r\nmutation updatePersonalInfo(\r\n    $firstName:String,\r\n    $interviewed:Boolean,\r\n    $lastName:String,\r\n    $age:Int,\r\n    $gender:String,\r\n    $other:String,\r\n    $tel:String,\r\n    $case:ID!,\r\n    $nationality:String,\r\n    $occupation:String,\r\n    $idCard:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $vaccinated:Int,\r\n    $id:ID!\r\n    $englishName:String,\r\n    $patientId:String,\r\n    $relation:String\r\n    $illness:String\r\n){\r\n  updatePersonalInfo(updatedInfo:{\r\n    firstName:$firstName\r\n    interviewed:$interviewed\r\n    lastName:$lastName\r\n    age:$age\r\n    gender:$gender\r\n    other:$other\r\n    tel:$tel\r\n    case:$case\r\n    nationality:$nationality\r\n    occupation:$occupation\r\n    idCard:$idCard\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    vaccinated:$vaccinated\r\n    englishName:$englishName\r\n    patientId:$patientId\r\n    relation:$relation\r\n    illness:$illness\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_SAMPLETEST = gql`\r\nmutation deleteSampleTest($sampleTestId:ID!,$personalInfoId:ID!){\r\n  deleteSampleTest(sampleTestId:$sampleTestId,personalInfoId:$personalInfoId){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`\r\n\r\nexport const UPDATE_CURRENTSTATE_BY_ID = gql`\r\nmutation updateCurrentState(\r\n  $personalInfoId:ID!,\r\n  $confirm: Boolean,\r\n  $confirmedAt: DateTime,\r\n  $recovered: Boolean,\r\n  $recoveredAt: DateTime,\r\n  $death: Boolean,\r\n  $deathAt: DateTime\r\n){\r\n  updateCurrentState(personalInfoId:$personalInfoId,updateValue:{\r\n    confirm:$confirm\r\n    confirmedAt:$confirmedAt\r\n    recovered:$recovered\r\n    recoveredAt:$recoveredAt\r\n    death:$death\r\n    deathAt:$deathAt\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`\r\n\r\n\r\nexport const GET_INTERVIEW = gql`\r\nquery getConfirmedPersonalInfoByInterviewWithPagination($interview: Boolean,$page:Int!,$limit:Int!,$keyword:String){\r\n  getConfirmedPersonalInfoByInterviewWithPagination(interview:$interview, page:$page,limit:$limit,keyword:$keyword){\r\n        personalInfos{\r\n          id\r\n          idCard\r\n          patientId\r\n          firstName\r\n          lastName\r\n          gender\r\n          age\r\n          nationality\r\n          village\r\n          commune\r\n          district\r\n          province\r\n          tel\r\n          other\r\n          interviewed\r\n          currentState{ \r\n            confirm\r\n          }\r\n        }\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","import { Col, Row, Typography, Table, message, Input } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { subQuarantineCol } from './tableColumn/subQuarantineColumn'\r\nimport { PlusCircleOutlined, EditOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport EditQuarantine from './modal/editQuarantine'\r\nimport AddSubQuarantine from './modal/addSubQuarantine'\r\nimport EditSubQuarantine from './modal/editSubQuarantine'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT} from '../../graphql/people'\r\nimport { GET_PERSON_BY_QUARANTINE } from '../../graphql/quarantine'\r\nimport { GET_QUARANTINE_BY_ID } from '../../graphql/quarantine'\r\nimport { DELETE_PERSON_BY_QUARANTINE } from '../../graphql/quarantine'\r\n\r\nconst {Title} = Typography\r\n\r\nexport default function SubQuarantine() {\r\n\r\n    const districtLatLong = [\r\n        {\r\n            district:\"ស្រុកក្រឡាញ់\",\r\n            lat:13.60472222544493,\r\n            long:103.45245485053685,\r\n        },\r\n        {\r\n            district:\"ស្រុកវ៉ារិន\",\r\n            lat:13.867238663711532,\r\n            long:103.87715707241854,\r\n        },\r\n        {\r\n            district:\"ស្រុកស្រិស្នំ\",\r\n            lat:13.852238272312373,\r\n            long: 103.53639730433542,\r\n        },\r\n        {\r\n            district:\"ស្រុកអង្គរជុំ\",\r\n            lat:13.713723851088394,\r\n            long:103.67219336284299,\r\n        },\r\n        {\r\n            district:\"ស្រុកបន្ទាយស្រី\",\r\n            lat:13.605041870228655,\r\n            long:103.97859822744759,\r\n        },\r\n        {\r\n            district:\"ស្រុកសូទ្រនិគម\",\r\n            lat:13.414442053292065,\r\n            long:104.10460200711728,\r\n        },\r\n        {\r\n            district:\"ស្រុកបាគង\",\r\n            lat:13.303005227138778,\r\n            long:103.9796463766434,\r\n        },\r\n        {\r\n            district:\"ស្រុកពួក\",\r\n            lat:13.440442720250852,\r\n            long:103.71973510206098,\r\n        },\r\n        {\r\n            district:\"ស្រុកជីក្រែង\",\r\n            lat:13.232399982258997,\r\n            long:104.33684532302983,\r\n        },\r\n        {\r\n            district:\"ស្រុកស្វាយលើ\",\r\n            lat:13.698615549661712,\r\n            long:104.21744370698126,\r\n        },\r\n        {\r\n            district:\"ស្រុកអង្គរធំ\",\r\n            lat:13.483410469370508,\r\n            long:103.87412317588966,\r\n        },\r\n        {\r\n            district:\"ស្រុកសៀមរាប\",\r\n            lat:13.332155324410378,\r\n            long:103.81891026025993,\r\n        },\r\n        \r\n    ]\r\n\r\n    let { id } = useParams();\r\n\r\n    const [peopleData, setPeopleData] = useState([])\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [subQuarantineData, setSubQuarantineData] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [quarantineData,setQuarantineData] = useState({})\r\n\r\n    const {data, refetch:refetchPerson} = useQuery(GET_ALL_PERSONINFO_NO_LIMIT,{\r\n        onCompleted:({allPersonalInfos})=>{\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    const {data:quarantine,loading, refetch:refetchQuarantine} = useQuery(GET_QUARANTINE_BY_ID,{\r\n        variables:{\r\n            id:id\r\n        },\r\n        onCompleted:({getQuarantineInfoById})=>{\r\n            // console.log(getQuarantineInfoById)\r\n            setQuarantineData(getQuarantineInfoById)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(quarantine){\r\n            setQuarantineData(quarantine?.getQuarantineInfoById)\r\n        }\r\n    },[quarantine])\r\n\r\n    const {data:subQuarantine,refetch:refetchSub} = useQuery(GET_PERSON_BY_QUARANTINE,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n            quarantineInfoId:id\r\n        },\r\n        onCompleted:({getQuarantineByQurantineIdWithPagination})=>{\r\n            // console.log(getQuarantineByQurantineIdWithPagination)\r\n            setSubQuarantineData(getQuarantineByQurantineIdWithPagination)\r\n        },\r\n        onError:({error})=>{\r\n            console.log(error)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(subQuarantine){\r\n            setSubQuarantineData(subQuarantine?.getQuarantineByQurantineIdWithPagination)\r\n        }\r\n    }, [subQuarantine])\r\n\r\n    const [deleteQuarantine,{loading:deleteLoading}] = useMutation(DELETE_PERSON_BY_QUARANTINE,{\r\n        onCompleted:()=>{\r\n            refetchSub()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        //subQuarantineDataDispatch({type: \"DELETE_SUB_QUARANTINE\", payload: e})\r\n        deleteQuarantine({\r\n            variables:{\r\n                id:e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEditSubQuarantine = (e) => {\r\n        \r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n\r\n    const key = 'updatable';\r\n    const openMessage = () => {\r\n        message.loading({ content: 'Loading...', key });\r\n        setTimeout(() => {\r\n          message.success({ content: 'Loaded!', key, duration: 2 });\r\n        }, 1000);\r\n      };\r\n\r\n    return (\r\n        <>\r\n        {/* { loading ? message.loading(\"test\"): */}\r\n        <Row>\r\n            <EditQuarantine open={openEdit} setOpen={setOpenEdit} data={quarantineData} quarantineId={id} setRefetch={refetchQuarantine}/>\r\n            <AddSubQuarantine open={openAddSub} setOpen={setOpenAddSub} quarantineId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n            <EditSubQuarantine open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} quarantineId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n                {/* <Title level={5}>ឈ្មោះករណី៖ \r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                </Title> */}\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ឈ្មោះមណ្ឌល៖ {quarantineData?.locationName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/></p>\r\n                {/* <p>ទីតាំង៖ {quarantineData?.place}</p> */}\r\n                <p>អាចផ្ទុក៖ {quarantineData?.capacity}</p>\r\n                <p>អាសយដ្ឋាន៖ \r\n                    {quarantineData?.village !== \"ក្រៅសៀមរាប\" && quarantineData?.village + \",\"}\r\n                    {quarantineData?.commune !== \"ក្រៅសៀមរាប\" && quarantineData?.commune + \",\"}\r\n                    {quarantineData?.district !== \"ក្រៅសៀមរាប\" && quarantineData?.district + \",\"}\r\n                    {quarantineData?.province}\r\n                </p>\r\n                <p>អ្នកទទួលខុសត្រូវ៖ {quarantineData?.personInCharge?.lastName} {quarantineData?.personInCharge?.firstName}</p>\r\n                <p>លេខទូរស័ព្ទ៖ {quarantineData?.personInCharge?.tel}</p>\r\n                <p>ចំណាំ៖ {quarantineData?.other}</p>\r\n            </Col>\r\n            {/* <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>មណ្ឌលព្យាបាល៖ </p>\r\n                <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                <p>ឈ្មោះមណ្ឌល៖​ </p>\r\n                <p>ទីតាំង៖ </p>\r\n                <p>កាលបរិច្ឆេទ​ចូល៖ </p>\r\n                <p>កាលបរិច្ឆេទចេញ៖ </p>\r\n            </Col> */}\r\n\r\n            <Col\r\n                xs={18}\r\n                style={{ margin: \"30px 0 0 0\" }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកធ្វើចត្តាឡីស័ក៖ \r\n\r\n                    <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/>\r\n                </Title>\r\n            </Col>\r\n            <Col\r\n                xs={{span: 6, offset: 1}}\r\n                style={{ margin: \"20px 0 20px 0\" }}\r\n            >\r\n                <Input prefix={<SearchOutlined />} placeholder=\"ស្វែងរក...\" size=\"large\" onChange={e => setKeyword(e.target.value) }/>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subQuarantineCol({handleDelete, handleEditSubQuarantine,limit,page})}\r\n                    dataSource={subQuarantineData?.quarantines}\r\n                    rowKey={(record) => record.id}\r\n                    pagination={{\r\n                        total: subQuarantineData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n        {/* } */}\r\n        </>\r\n    )\r\n}\r\n","import { setPeople } from '../function/set'\r\n\r\nexport function peopleReducer(state, action) {\r\n    \r\n    let item = [...state]\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n\r\n    switch (action.type) {\r\n        case 'ADD_PEOPLE':\r\n            item.push(setPeople(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_PEOPLE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_PEOPLE':\r\n            item.splice(index, 1)\r\n\r\n            return item;\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { peopleReducer } from '../reducer/peopleReducer'\r\n\r\nexport const PeopleController = createContext()\r\n\r\nexport default function PeopleContext(props) {\r\n    const [peopleData, peopleDataDispatch] = useReducer(peopleReducer, [\r\n        {\r\n            id: \"1\",\r\n            idCard: \"123123123\",\r\n            name: \"ដាយ ឌឿន\",\r\n            gender: \"ប្រុស\",\r\n            age: 25,\r\n            nationality: \"ខ្មែរ\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            job: \"លក់ដូរ\",\r\n            tel: 10503375,\r\n            remark: \"មុខប្រជ្រុយ៣\",\r\n        },\r\n        {\r\n            id: \"2\",\r\n            idCard: \"123123123\",\r\n            name: \"ដាយ ឌឿន1\",\r\n            gender: \"ប្រុស\",\r\n            age: 25,\r\n            nationality: \"ខ្មែរ\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            job: \"លក់ដូរ\",\r\n            tel: 10503375,\r\n            remark: \"មុខប្រជ្រុយ៣\",\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <PeopleController.Provider\r\n            value={{\r\n                peopleData,\r\n\r\n                peopleDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PeopleController.Provider>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const peopleCol = ({handleDelete,limit,page}) => {\r\n    let no = ((page-1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 60,\r\n            render: (text, record, i) => (\r\n                <span>\r\n                    {no+= 1}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'អត្តសញ្ញាណប័ណ្ណ',\r\n            dataIndex: 'idCard',\r\n            key: 'idCard',\r\n            width: 130,\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 130,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName+\" \"+record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'អាយុ',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'សញ្ជាតិ',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            width: 120,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 250,\r\n            render: (text, record) => (\r\n                <span>\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village+\", \"}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune+\", \"}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district+\", \"}\r\n                    {record.province && record.province}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'មុខរបរ',\r\n            dataIndex: 'occupation',\r\n            key: 'occupation',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ការសម្ភាស',\r\n            dataIndex: 'interview',\r\n            key: 'interview',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span>{record?.interviewed ? \"រួចរាល់\" : \"មិនទាន់រួចរាល់\"}</span>\r\n                )\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData, nationalityData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\nimport AddCase from '../../case/modal/addCase'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeople({ open, setOpen,setRefetch }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [caseId, setCaseId] = useState(\"\")\r\n    const [caseData, setCaseData] = useState({})\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', { ...setAddPeople(values), case: caseData.id, englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness });\r\n\r\n        if (caseId === 'new') {\r\n            createPersonalInfo({ variables: { ...setAddPeople(values), case: caseData.id } })\r\n        } else {\r\n            \r\n            createPersonalInfo({ variables: {...setAddPeople(values),englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness }})\r\n        }\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToNationalityFn = (e) => {\r\n        form.setFieldsValue({\r\n            nationality: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setCaseId(e)\r\n    };\r\n\r\n    const callbackCase = (e) => {\r\n        if (e === \"\") {\r\n            setCaseId(e)\r\n            form.setFieldsValue({\r\n                case: null\r\n            })\r\n        } else {\r\n            setCaseData(e)\r\n            form.setFieldsValue({\r\n                caseName: e.caseName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលប្រជាជនថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddCase open={openModal} setOpen={setOpenModal} caseId={caseId} setCaseId={callbackCase} />\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តលេខអ្នកជំងឺ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"englishName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះជាភាសាឡាតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={0} data={nationalityData} title=\"សញ្ជាតិ\" setValue={setToNationalityFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"relation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ត្រូវជា\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"illness\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ជំងឺប្រចាំកាយ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n\r\n                            <ListSelect type={4} data={allCases} title=\"ករណី\" setValue={setToCaseFn} disabled={caseId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        caseId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"caseName\"\r\n                                >\r\n                                    <Input disabled={true} style={{ backgroundColor: \"white\", color: \"black\" }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n\r\n                    <Col xs={24} md={caseId === \"new\" ? { span: 24 } : { span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"interviewed\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>សម្ភាសរួចរាល់</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_HOSPITAL = gql`\r\n# Write your query or mutation here\r\nquery getHospitalInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n  getHospitalInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n    hospitalInfos{\r\n      id\r\n      hospitalName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      long\r\n      lat\r\n      createdAt\r\n      updatedAt\r\n      other\r\n      personInCharge{\r\n        firstName\r\n        lastName\r\n        position\r\n        others\r\n        tel\r\n      }\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n    \r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_HOSPITALINFO = gql`\r\nmutation createHospitalInfo(\r\n    $hospitalName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long:Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $position:String,\r\n    $others:String,\r\n    $tel:String,\r\n){\r\n    createHospitalInfo(newHospitalInfo:{\r\n      hospitalName:$hospitalName\r\n      village:$village\r\n      commune:$commune\r\n      district:$district\r\n      province:$province\r\n      long:$long\r\n      lat:$lat\r\n      other:$other\r\n      personInCharge:{\r\n        firstName:$firstName\r\n        lastName:$lastName\r\n        position:$position\r\n        others:$others\r\n        tel:$tel\r\n      }\r\n    }){\r\n      success\r\n      message\r\n      hospitalInfos{\r\n        id\r\n        hospitalName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        long\r\n        lat\r\n        other\r\n      \r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_HOSPITALINFO_BY_ID = gql`\r\nmutation deleteHospitalInfo($id:ID!){\r\n    deleteHospitalInfo(id:$id){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_HOSPITALIZATION = gql`\r\nmutation createHospitalization(\r\n    $date_in:DateTime\r\n    $date_out:DateTime\r\n    $personalInfo:ID!\r\n    $hospitalInfo:ID!\r\n    $others:String\r\n    \r\n){\r\n  createHospitalization(newHospitalization:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    hospitalInfo:$hospitalInfo\r\n    others:$others\r\n    \r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\nexport const GET_PERSON_BY_HOSPITALINFO = gql`\r\nquery getQuarantineByHospitalIdIdWithPagination($page:Int!,$limit:Int!,$keyword:String,$hospitalId:ID!){\r\n  getQuarantineByHospitalIdIdWithPagination(page:$page,limit:$limit,keyword:$keyword,hospitalId:$hospitalId){\r\n    hospitalizations{\r\n      id\r\n      date_in\r\n      date_out\r\n      personalInfo{\r\n        id\r\n        firstName\r\n        lastName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        direct\r\n        currentState{\r\n          confirm\r\n          death\r\n          recovered\r\n        }\r\n      }\r\n      others\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_HOSPITALINFO_BY_ID = gql`\r\nquery getHospitalInfoById($id:ID!){\r\n\tgetHospitalInfoById(id:$id){\r\n   \tid\r\n    hospitalName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long\r\n    lat\r\n    other\r\n    personInCharge{\r\n      firstName\r\n      lastName\r\n      position\r\n      others\r\n      tel\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_HOSPITALINFO_BY_ID = gql`\r\nmutation updateHospitalInfo(\r\n    $hospitalName:String\r\n    $village:String\r\n    $commune:String\r\n    $district:String\r\n    $province:String\r\n    $long:Float\r\n    $lat:Float\r\n    $other:String\r\n    $firstName:String\r\n    $lastName:String\r\n    $position:String\r\n    $others:String\r\n    $tel:String\r\n    $id:ID!\r\n){\r\n  updateHospitalInfo(updatedHospitalInfo:{\r\n    hospitalName:$hospitalName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n    personInCharge:{\r\n      firstName:$firstName\r\n      lastName:$lastName\r\n      position:$position\r\n      others:$others\r\n      tel:$tel\r\n    }\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_PERSON_BY_HOSPITALINFO = gql`\r\nmutation updateHospitalization(\r\n    $date_in:DateTime,\r\n    $date_out:DateTime,\r\n    $personalInfo:ID!,\r\n    $hospitalInfo:ID!,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n\tupdateHospitalization(updatedHospitalization:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    hospitalInfo:$hospitalInfo\r\n    others:$others\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_PERSON_BY_HOSPITAL = gql`\r\nmutation deleteHospitalization($id:ID!){\r\n  deleteHospitalization(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const ALL_HOSPIAL_INFO = gql`\r\n  query  allHospitalInfos{\r\n    allHospitalInfos{\r\n      id\r\n      hospitalName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      long\r\n      lat\r\n      other\r\n      createdAt\r\n      updatedAt\r\n      personInCharge{\r\n        firstName\r\n        lastName\r\n        position\r\n        tel\r\n      }\r\n    }\r\n  }\r\n`","import React, {useContext, useState} from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../context/peopleContext';\r\nimport { peopleCol } from '../component/people/tableColumn/peopleColumn';\r\nimport AddPeople from '../component/people/modal/addPeople';\r\nimport { useQuery,useMutation } from '@apollo/client';\r\nimport { DELETE_PERSONALINFO_BY_ID, GET_ALL_PERSONINFO } from '../graphql/people';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\n\r\nexport default function People() {\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    // const [peopleData, setPeopleData] = useState([])\r\n\r\n    const {data,loading,error,refetch} = useQuery(GET_ALL_PERSONINFO,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n        },\r\n        onCompleted:({getPersonalInfoWithPagination})=>{\r\n            // console.log(getPersonalInfoWithPagination)\r\n            // setPeopleData(getPersonalInfoWithPagination)\r\n        },\r\n        fetchPolicy:'network-only',\r\n    })\r\n\r\n    const getPersonalInfoWithPagination = data?.getPersonalInfoWithPagination\r\n\r\n    const [deletePersonalInfo,{loading:deleteLoading}] = useMutation(DELETE_PERSONALINFO_BY_ID,{\r\n        onCompleted:()=>{\r\n            refetch()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleDelete = (e) => {\r\n        deletePersonalInfo({\r\n            variables:{\r\n                id:e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddPeople open={openAdd} setOpen={setOpenAdd} setRefetch={refetch} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលប្រជាជន\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=>setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={peopleCol({handleDelete,limit,page})}\r\n                    dataSource={getPersonalInfoWithPagination?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: getPersonalInfoWithPagination?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: getPersonalInfoWithPagination?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1000 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const testCol = ({handleSampleTestDelete}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 30,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លើកទី',\r\n            dataIndex: 'times',\r\n            key: 'times',\r\n            width: 40,\r\n        },\r\n        {\r\n            title: 'ទីតាំង',\r\n            dataIndex: 'location',\r\n            key: 'location',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'លទ្ធផល',\r\n            dataIndex: 'sampleTest',\r\n            key: 'sampleTest',\r\n            width: 60,\r\n            render:(text,record)=>(\r\n                <Space size=\"middle\">\r\n                    { record?.result ? \"វិជ្ជមាន\":\"អវិជ្ជមាន\" }\r\n                    {/* {console.log(record?.result )} */}\r\n                </Space>\r\n            )\r\n        },\r\n        {\r\n            title: 'អាការ',\r\n            dataIndex: 'symptom',\r\n            key: 'symptom',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'ផ្សេងៗ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleSampleTestDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return array\r\n}","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const relatedCol = ({handleRelatedDelete}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <span size=\"middle\">\r\n                    {i += 1}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {record?.lastName+\" \" +record?.firstName}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 30,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឆាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width:100,\r\n            render: (text, record) => (\r\n            <span>\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village+\", \"}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune+\", \"}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district+\", \"}\r\n                    {record.province && record.province}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.currentState.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width:50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.direct? \"ផ្ទាល់\" : \"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 20,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleRelatedDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return array\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeopleRelated({ open, setOpen, caseId, setRefetch }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n            \r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({ variables: { ...setAddPeople(values), case: caseId,englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness  } })\r\n\r\n        setOpen(false)\r\n        // form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្នកពាក់ព័ន្ធថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span:11 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តលេខអ្នកជំងឺ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"relation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ត្រូវជា\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"illness\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ជំងឺប្រចាំកាយ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e)=> console.log(e)}>\r\n                                {\r\n                                    allCases.map((c)=>(\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>សម្ភាសរួចរាល់</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker,message } from 'antd'\r\n\r\nimport { useMutation,useQuery } from '@apollo/client';\r\nimport { RECORD_SAMPLETEST } from '../../../graphql/people';\r\nimport moment from 'moment'\r\n\r\nconst {Option} = Select\r\n\r\nexport default function AddPeopleTest({ open, setOpen, peopleID, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [recordSampleTest,{loading}] = useMutation(RECORD_SAMPLETEST,{\r\n        onCompleted:()=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        recordSampleTest({\r\n            variables:{\r\n                date:moment(values.date).format(),\r\n                times: parseInt(values.times),\r\n                location:values.location,\r\n                result:values.result,\r\n                symptom:values.symptom,\r\n                other:values.other,\r\n                personalInfoId:peopleID,\r\n                labFormCompletedBy: values.labFormCompletedBy,\r\n                laboratory:values.laboratory,\r\n                reasonForTesting:values.reasonForTesting,\r\n                symptomStart:moment(values.symptomStart).format(),\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលការធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleTest\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបវិច្ឆេទការធ្វើតេស្ត\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"location\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"reasonForTesting\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"បំណងធ្វើតេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សង្ស័យ\">សង្ស័យ</Option>\r\n                                <Option value=\"រលាកសួត\">រលាកសួត</Option>\r\n                                <Option value=\"បុគ្គលិកពេទ្យ\">បុគ្គលិកពេទ្យ</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"symptomStart\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទរោគសញ្ញា\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"specimentType\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"វត្ថុវិភាគ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"ច្រមុះ\">ច្រមុះ</Option>\r\n                                <Option value=\"បំពង់ក\">បំពង់ក</Option>\r\n                                <Option value=\"ផ្សេងទៀត\">ផ្សេងទៀត</Option>\r\n                                \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"laboratory\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                             <Select placeholder=\"មន្ទីពិសោធន៍\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"IPC\">IPC</Option>\r\n                                <Option value=\"NIPH\">NIPH</Option>\r\n                                <Option value=\"PKML\">PKML</Option>\r\n                                <Option value=\"MKB\">MKB</Option>\r\n                                <Option value=\"BTB\">BTB</Option>\r\n                                <Option value=\"TKV\">TKV</Option>\r\n                                <Option value=\"SRH\">SRH</Option>\r\n                                <Option value=\"NBTC\">NBTC</Option>\r\n                                <Option value=\"SHV\">SHV</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"result\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>វិជ្ជមាន</Option>\r\n                                <Option value={false}>អវិជ្ជមាន</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"times\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"លើក\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"symptom\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាការ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"labFormCompletedBy\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"បំពេញទំរង់ដោយ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, message, Divider } from 'antd';\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_HOSPITALINFO } from '../../../graphql/hospital';\r\nimport { setAddHospital } from '../../../function/set';\r\n\r\nexport default function AddHospital({ open, setOpen, hospitalId, setHospitalId, setRefetch }) {\r\n    //const { hospitalDataDispatch } = useContext(HospitalController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createHospitalInfo, { loading}] = useMutation(CREATE_HOSPITALINFO, {\r\n        onCompleted: ({ createHospitalInfo }) => {\r\n                message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n                if (hospitalId === \"new\") {\r\n                    setHospitalId(createHospitalInfo.hospitalInfos)\r\n                } else {\r\n                    setRefetch()\r\n                }\r\n            \r\n\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     // form.setFieldsValue(\r\n    //     //     setEditSubCase(data)\r\n    //     // )\r\n    //     setProvince(data?.province)\r\n    //     setDistrict(data?.district)\r\n    //     setCommune(data?.commune)\r\n    // }, [data])\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        //hospitalDataDispatch({ type: 'ADD_HOSPITAL', payload: values })\r\n        createHospitalInfo({ variables: setAddHospital(values) })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setPeopleHospitalFn = () => {\r\n        setOpen(false)\r\n        setHospitalId(\"\")\r\n        // console.log(locationId)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមន្ទីរពេទ្យថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => hospitalId === \"new\" ? setPeopleHospitalFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, message, DatePicker } from 'antd'\r\nimport { HospitalController } from '../../../context/hospitalContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage, convertHospitalToSelect } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_NEW_HOSPITALIZATION } from '../../../graphql/hospital'\r\nimport { ALL_HOSPIAL_INFO } from '../../../graphql/hospital'\r\nimport AddHospital from '../../hospital/modal/addHospital'\r\nimport moment from 'moment'\r\nimport {setPeopleHospital} from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeopleHospital({ open, setOpen, peopleId }) {\r\n\r\n    let [form] = Form.useForm()\r\n    \r\n    const [hospitalId, setHospitalId] = useState(\"\")\r\n    const [hospital, setHospital] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [createHospitalization, { loading }] = useMutation(CREATE_NEW_HOSPITALIZATION, {\r\n        onCompleted: () => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const { data, loading: loadingHospital, error } = useQuery(ALL_HOSPIAL_INFO, {\r\n        onCompleted: ({ allHospitalInfos }) => {\r\n\r\n        }\r\n    })\r\n\r\n    const allHospitalInfos = data?.allHospitalInfos\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(hospital)\r\n        console.log(hospitalId)\r\n\r\n        if(hospitalId === 'new'){\r\n            createHospitalization({\r\n                variables:{...setPeopleHospital(values), personalInfo: peopleId, hospitalInfo: hospital.id}\r\n            })\r\n        }else {\r\n            createHospitalization({\r\n                variables:{...setPeopleHospital(values), personalInfo: peopleId}\r\n            })\r\n        }\r\n\r\n        // //subHospitalDataDispatch({ type: 'ADD_SUB_HOSPITAL', payload: {...values, hospitalId: hospitalId} })\r\n        // createHospitalization({\r\n        //     variables: {\r\n        //         in: values.in,\r\n        //         date_in: moment(values.date_in).format(),\r\n        //         date_out: moment(values.date_out).format(),\r\n        //         personalInfo: values.personalInfo,\r\n        //         hospitalInfo: hospitalId,\r\n        //         others: values.others,\r\n        //         // date:moment(values.date).format(),\r\n        //         // times:values.times,\r\n        //         // location:values.location,\r\n        //         // result:values.result,\r\n        //         // symptom:values.symptom,\r\n        //         // other:values.other\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleHospitalFn = (e) => {\r\n        console.log(e)\r\n        form.setFieldsValue({\r\n            hospitalInfo: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setHospitalId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if(e === \"\"){\r\n            setHospitalId(e)\r\n            form.setFieldsValue({\r\n                hospitalName: null\r\n            })\r\n        }else {\r\n            setHospital(e)\r\n            form.setFieldsValue({\r\n                hospitalName: e.hospitalName\r\n            })\r\n        }\r\n    }\r\n\r\n    console.log(allHospitalInfos)\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddHospital open={openModal} setOpen={setOpenModal} hospitalId={hospitalId} setHospitalId={callbackLocation} />\r\n            <Form\r\n                form={form}\r\n                name=\"addSubHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={6} data={convertHospitalToSelect(allHospitalInfos)} title=\"មណ្ឌលព្យាបាល\" setValue={setToPeopleHospitalFn} disabled={hospitalId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    {\r\n                        hospitalId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"hospitalName\"\r\n                                >\r\n                                    <Input disabled={true} style={{ backgroundColor: \"white\", color: \"black\" }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>  \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    {/* <Col xs={24} md={{ span: 11,offset:2}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"តេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={hospitalId === \"new\" ? { span: 11, offset: 0 } : {span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={hospitalId === \"new\" ? { span: 11, offset: 2 } : {span: 24}}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker } from 'antd'\r\n\r\nexport default function AddPeopleStatus({ open, setOpen }) {\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលស្ថានភាពបច្ចុប្បន្ន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleStatus\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបវិច្ឆេទ\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ស្ថានភាព\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage, convertQurantineToSelect } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_PERSON_QUARANTINE } from '../../../graphql/quarantine'\r\nimport { setAddSubQuarantine } from '../../../function/set'\r\nimport { ALL_QUARANTINEINFO } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\nimport AddQuarantine from '../../quarantine/modal/addQuarantine'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeopleQuarantine({ open, setOpen, peopleId }) {\r\n    const { subQuarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [quarantineId, setQuarantineId] = useState(\"\")\r\n    const [quarantine, setQuarantine] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [createQuarantine, { data }] = useMutation(CREATE_PERSON_QUARANTINE, {\r\n        onCompleted: ({ createQuarantine }) => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const { data: quarantineInfo, loading: loadingQuarantine, error } = useQuery(ALL_QUARANTINEINFO, {\r\n        onCompleted: ({ allQuarantineInfos }) => {\r\n\r\n        }\r\n    })\r\n\r\n    const allQuarantineInfos = quarantineInfo?.allQuarantineInfos\r\n    console.log(allQuarantineInfos)\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddSubQuarantine(values));\r\n        console.log(quarantine)\r\n        console.log(quarantineId)\r\n\r\n        if (quarantineId === 'new') {\r\n            createQuarantine({\r\n                variables: { ...setAddSubQuarantine(values), personalInfo: peopleId, quarantineInfo: quarantine.id }\r\n            })\r\n        } else {\r\n            createQuarantine({\r\n                variables: { ...setAddSubQuarantine(values), personalInfo: peopleId }\r\n            })\r\n        }\r\n\r\n        // createQuarantine({\r\n        //     variables: {\r\n        //         in: values.in,\r\n        //         date_in: moment(values.date_in).format(),\r\n        //         date_out: moment(values.date_out).format(),\r\n        //         personalType: values.personalType,\r\n        //         personalInfo: values.personalInfo,\r\n        //         quarantineInfo: quarantineId,\r\n        //         others: values.others,\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToQuarantineFn = (e) => {\r\n        console.log(e)\r\n        form.setFieldsValue({\r\n            quarantineInfo: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setQuarantineId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if (e === \"\") {\r\n            setQuarantineId(e)\r\n            form.setFieldsValue({\r\n                quarantineInfo: null\r\n            })\r\n        } else {\r\n            setQuarantine(e)\r\n            form.setFieldsValue({\r\n                quarantineName: e.locationName\r\n            })\r\n        }\r\n\r\n        console.log(e)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្ន​កចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddQuarantine open={openModal} setOpen={setOpenModal} quarantineId={quarantineId} setQuarantineId={callbackLocation} />\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"quarantineInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={6} data={convertQurantineToSelect(allQuarantineInfos)} title=\"មណ្ឌលព្យាបាល\" setValue={setToQuarantineFn} disabled={quarantineId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        quarantineId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"quarantineName\"\r\n                                >\r\n                                    <Input disabled={true} style={{ backgroundColor: \"white\", color: \"black\" }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n\r\n                    <Col xs={24} md={quarantineId === \"new\" ? { span: 24 } : { span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ចត្តាឡីស័ក\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nexport default function AddPeopleHistory({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const DateHolder = [\"កាលបរិច្ឆេទចូល\", \"កាលបរិច្ឆេទចេញ\"]\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលប្រវត្តិដំណើរករណី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleHistory\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"place\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"ទំនាក់ទំនង\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទំនាក់ទំនង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_LOCATION = gql`\r\nquery{\r\n    allAffectedLocations{\r\n      id\r\n      affectedLocationName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      open\r\n      openAt\r\n      closeAt\r\n      long\r\n      lat\r\n      coorporate\r\n      infected\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_LOCATION = gql`\r\nmutation createAffectedLocation(\r\n  $affectedLocationName:String,\r\n  $village:String,\r\n  $commune:String,\r\n  $district:String,\r\n  $province:String,\r\n  $other:String,\r\n  $long:Float,\r\n  $lat:Float,\r\n){\r\n  createAffectedLocation(newAffectedLocation:{\r\n\t\taffectedLocationName:$affectedLocationName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    other:$other\r\n    long:$long\r\n    lat:$lat\r\n  }){\r\n    message\r\n    success\r\n    affectedLocation{\r\n      id\r\n      affectedLocationName\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_AFFECTED_LOCATION_PAGINATION = gql`\r\nquery getAffectedLocationWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n  getAffectedLocationWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n    affectedLocations{\r\n      id\r\n      affectedLocationName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      open\r\n      openAt\r\n      closeAt\r\n      long\r\n      lat\r\n      coorporate\r\n      infected\r\n\r\n    }\r\n    paginator{\r\n      slNo\r\n\t\t\tprev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const DELETE_AFFECTEDLOCATION_BY_ID = gql`\r\nmutation deleteAffectedLocation($id:ID!){\r\n  deleteAffectedLocation(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`\r\n\r\nexport const UPDATE_AFFECTEDLOCATION_BY_ID = gql`\r\nmutation updateAffectedLocation(\r\n  $id:ID!,\r\n  $affectedLocationName: String,\r\n  $village: String,\r\n  $commune: String,\r\n  $district: String,\r\n  $province: String,\r\n  $other: String,\r\n  $openAt: DateTime,\r\n  $closeAt: DateTime,\r\n  $long: Float,\r\n  $lat: Float,\r\n  ){\r\n  updateAffectedLocation(id:$id, updatedAffectedLocation:{\r\naffectedLocationName: $affectedLocationName\r\nvillage: $village\r\ncommune: $commune\r\ndistrict: $district\r\nprovince: $province\r\nother: $other\r\nopenAt: $openAt\r\ncloseAt: $closeAt\r\nlong: $long\r\nlat: $lat\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}`\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, message } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { CREATE_NEW_LOCATION } from '../../../graphql/location'\r\n// import { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\n// import { GET_ALL_PERSONINFO_NO_LIMIT } from '../../../graphql/people'\r\nimport { useMutation } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function AddLocation({ open, setOpen, setRefetch, locationId, setLocationId }) {\r\n\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    // const [allCases, setAllCases] = useState([])\r\n    // const [peopleData, setPeopleData] = useState([])\r\n\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createAffectedLocation, { loading: createLoading }] = useMutation(CREATE_NEW_LOCATION, {\r\n        onCompleted: ({ createAffectedLocation }) => {\r\n\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n\r\n            if (locationId === \"new\") {\r\n                setLocationId(createAffectedLocation.affectedLocation)\r\n            } else {\r\n                setRefetch()\r\n            }\r\n\r\n\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    // const { data} = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n    //     onCompleted: ({ allCases }) => {\r\n    //         setAllCases(allCases)\r\n    //     }\r\n    // })\r\n\r\n    // const { data: people } = useQuery(GET_ALL_PERSONINFO_NO_LIMIT, {\r\n    //     onCompleted: ({ allPersonalInfos }) => {\r\n    //         // console.log(allPersonalInfos)\r\n    //         setPeopleData(allPersonalInfos)\r\n    //     }\r\n    // })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        createAffectedLocation({\r\n            variables: {\r\n                affectedLocationName: values.affectedLocationName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                other: values.other,\r\n                long: parseFloat(values.long),\r\n                lat: parseFloat(values.lat),\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    // const setToCaseFn = (e) => {\r\n    //     form.setFieldsValue({\r\n    //         case: e\r\n    //     });\r\n    // };\r\n\r\n    // const setToPeopleFn = (e) => {\r\n    //     form.setFieldsValue({\r\n    //         personalInfo: e\r\n    //     });\r\n    // };\r\n\r\n    const setPeopleLocationFn = () => {\r\n        setOpen(false)\r\n        setLocationId(\"\")\r\n        console.log(locationId)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលទីតាំង\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => locationId === \"new\" ? setPeopleLocationFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"affectedLocationName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {/* <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                        <Option value={true}>វិជ្ជមាន</Option>\r\n                        <Option value={false}>អវិជ្ជមាន</Option>\r\n                    </Select> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import {gql} from '@apollo/client'\r\n\r\nexport const CREATE_NEW_HISTORYLOCATION = gql`\r\nmutation createHistoryLocation(\r\n    $case:ID!\r\n    $personalInfo:ID!\r\n    $date:DateTime\r\n    $affectedLocationId:ID!\r\n    $type:String\r\n    $other:String\r\n){\r\n    createHistoryLocation(newHistoryLocation:{\r\n      case:$case\r\n      personalInfo:$personalInfo\r\n      date:$date\r\n      affectedLocationId:$affectedLocationId\r\n      type:$type\r\n      other:$other\r\n    }){\r\n      message\r\n      success\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_HISTORYLOCATION_BY_PERSON = gql`\r\nquery getHistoryLocationByPersonalInfoId($personalId:ID!){\r\n\tgetHistoryLocationByPersonalInfoId(personalId:$personalId){\r\n    affectedLocationId{\r\n      id\r\n      affectedLocationName\r\n    }\r\n    case{\r\n      id\r\n    }\r\n    personalInfo{\r\n      id\r\n    }\r\n    date\r\n    type\r\n  }\r\n}\r\n`","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { setPeopleLocation } from '../../../function/set'\r\nimport { CREATE_NEW_LOCATION} from '../../../graphql/location'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { GET_ALL_LOCATION} from '../../../graphql/location'\r\nimport { useMutation,useQuery } from '@apollo/client'\r\nimport AddLocation from '../../location/modal/addLocation'\r\nimport { CREATE_NEW_HISTORYLOCATION } from '../../../graphql/historylocation'\r\nimport moment from 'moment'\r\n\r\nexport default function AddPeopleLocation({ open, setOpen, setRefetch, caseId, peopleId }) {\r\n\r\n    \r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [locationData, setLocationData] = useState([])\r\n    const [locationId, setLocationId] = useState(\"\")\r\n    const [location, setLocation] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createHistoryLocation, { loading:createLoading}] = useMutation(CREATE_NEW_HISTORYLOCATION, {\r\n        onCompleted: ({ createCase }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const {data, loading,error} = useQuery(GET_ALL_LOCATION,{\r\n        onCompleted:({allAffectedLocations})=>{\r\n        console.log(allAffectedLocations)\r\n        setLocationData(allAffectedLocations)\r\n    }})\r\n\r\n    // console.log(locationData)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', {...values, case: caseId, personalInfo: peopleId});\r\n        // console.log(location)\r\n\r\n        if(locationId === 'new'){\r\n            createHistoryLocation({\r\n                variables:{...setPeopleLocation(values), case: caseId, personalInfo: peopleId, affectedLocationId: location.id}\r\n            })\r\n        }else {\r\n            createHistoryLocation({\r\n                variables:{...setPeopleLocation(values), case: caseId, personalInfo: peopleId, affectedLocationId:values.affectedLocationId}\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        // createCase({\r\n        //     variables: {\r\n        //         caseName: values.caseName,\r\n        //         village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        //         commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        //         district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        //         province: values.province === undefined ? \"ក្រៅសៀមរាប\" : values.province,\r\n        //         date: moment(values.date).format(),\r\n        //         lat: parseFloat(values.lat),\r\n        //         long: parseFloat(values.long),\r\n        //         other: values.other,\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    const setLocationTypeFn = (e) => {\r\n        form.setFieldsValue({\r\n            type: e\r\n        });\r\n    };\r\n\r\n    const setToLocationFn = (e) => {\r\n        form.setFieldsValue({\r\n            affectedLocationId: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setLocationId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if(e === \"\"){\r\n            setLocationId(e)\r\n            form.setFieldsValue({\r\n                affectedLocationId: null\r\n            })\r\n        }else {\r\n            setLocation(e)\r\n            form.setFieldsValue({\r\n                affectedLocationName: e.affectedLocationName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលទីតាំង\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddLocation open={openModal} setOpen={setOpenModal} locationId={locationId} setLocationId={callbackLocation} />\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{span: 11, offset: 0}}>\r\n                        <Form.Item\r\n                            name=\"affectedLocationId\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ទីតាំង\" /> */}\r\n                            <ListSelect type={5} data={locationData} title=\"ទីតាំង\" setValue={setToLocationFn} disabled={locationId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        locationId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"affectedLocationName\"\r\n                                >\r\n                                    <Input disabled={true} style={{backgroundColor: \"white\", color: \"black\"}} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    <Col xs={24} md={locationId === \"new\" ? {span: 11, offset: 0} : {span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"type\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ទីតាំង\" /> */}\r\n                            <ListSelect type={1} data={[\r\n                                {title: \"ផ្ទាល់\"},\r\n                                {title: \"ឆ្លងកាត់\"}\r\n                            ]} title=\"ប្រភេទ\" setValue={setLocationTypeFn}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={locationId === \"new\" ? {span: 11, offset: 2} : {span: 24}}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    \r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData, nationalityData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { UPDATE_PERSON_BY_ID } from '../../../graphql/people'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditPeople({ open, setOpen, personId, personalData, setRefetch }) {\r\n\r\n    // console.log(personalData)\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [caseId, setCaseId] = useState(\"\")\r\n    const [caseData, setCaseData] = useState({})\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [updatePersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(UPDATE_PERSON_BY_ID, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        if (personalData !== undefined) {\r\n\r\n            // form.setFieldsValue(setEditCase(personalData))\r\n            setProvince(personalData?.province)\r\n            setDistrict(personalData?.district)\r\n            setCommune(personalData?.commune)\r\n        }\r\n\r\n    }, [personalData, open])\r\n\r\n    const onFinish = (values) => {\r\n        //console.log('Success:', { ...setEditPeople(values), case: caseData.id,englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness});\r\n        // illness: values.illness\r\n        updatePersonalInfo({\r\n            variables: {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                age: parseInt(values.age),\r\n                gender: values.gender,\r\n                tel: values.tel,\r\n                nationality: values.nationality,\r\n                occupation: values.occupation,\r\n                idCard: values.idCard,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                case: personalData?.case?.id,\r\n                other: values.other,\r\n                vaccinated: parseInt(values.vaccinated),\r\n                interviewed: values.interviewed,\r\n                id: personId,\r\n                englishName: values.englishName,\r\n                patientId: values.patientId,\r\n                relation: values.relation,\r\n                illness: values.illness\r\n            }\r\n        })\r\n\r\n        // if(caseId === 'new'){\r\n        //     createPersonalInfo({ variables: {...setAddPeople(values), case: caseData.id} })\r\n        // }else {\r\n\r\n        // createPersonalInfo({ variables: setAddPeople(values) })\r\n        // }\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToNationalityFn = (e) => {\r\n        form.setFieldsValue({\r\n            nationality: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setCaseId(e)\r\n    };\r\n\r\n    const callbackCase = (e) => {\r\n        if (e === \"\") {\r\n            setCaseId(e)\r\n            form.setFieldsValue({\r\n                case: null\r\n            })\r\n        } else {\r\n            setCaseData(e)\r\n            form.setFieldsValue({\r\n                caseName: e.caseName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែប្រជាជន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n\r\n        >\r\n            {/* <AddCase open={openModal} setOpen={setOpenModal} caseId={caseId}  /> */}\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                initialValues={personalData}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តលេខអ្នកជំងឺ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"englishName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះជាភាសាឡាតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={0} data={nationalityData} title=\"សញ្ជាតិ\" setValue={setToNationalityFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"relation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ត្រូវជា\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"illness\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ជំងឺបច្ចុប្បន្ន\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"interviewed\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>សម្ភាសរួចរាល់</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Row, Col, Button, Upload, message } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nexport default function UploadPic({ open, setOpen }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(fileList)\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n        console.log(newFileList)\r\n      };\r\n\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលរូបភាព\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"uploadPic\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <ImgCrop rotate>\r\n                            <Upload\r\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                listType=\"picture-card\"\r\n                                fileList={fileList}\r\n                                onChange={onChange}\r\n                                onPreview={onPreview}\r\n                                maxCount={1}\r\n                            >\r\n                                {fileList.length < 5 && '+ Upload'}\r\n                            </Upload>\r\n                        </ImgCrop>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { ALL_QUARANTINEINFO } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\nimport { UPDATE_CURRENTSTATE_BY_ID } from '../../../graphql/people'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditCurrentState({ open, setOpen, peopleId, setRefetch, currentStateData}) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateCurrentState, { data }] = useMutation(UPDATE_CURRENTSTATE_BY_ID, {\r\n        onCompleted: ({ updateCurrentState }) => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n\r\n        let newObj = {...currentStateData,personalInfoId: peopleId}\r\n        switch(values.currentState){\r\n            case 'វិជ្ជមាន':\r\n                newObj = {...newObj,confirm: true, confirmedAt:moment(values.date)}\r\n                break;\r\n            case 'ជាសះស្បើយ':\r\n                newObj = {...newObj,recovered: true, recoveredAt: moment(values.date)}\r\n                break;\r\n            case 'ស្លាប់':\r\n                newObj = {...newObj,death: true, deathAt:moment(values.date)}\r\n                break;\r\n            default:\r\n                newObj = {...newObj,confirm: false, confirmedAt:moment(values.date)}\r\n                break;\r\n        }\r\n\r\n\r\n        updateCurrentState({\r\n            variables:newObj\r\n        })\r\n\r\n        // if (quarantineId === 'new') {\r\n        //     createQuarantine({\r\n        //         variables: { ...setAddSubQuarantine(values), personalInfo: peopleId, quarantineInfo: quarantine.id }\r\n        //     })\r\n        // } else {\r\n        //     createQuarantine({\r\n        //         variables: { ...setAddSubQuarantine(values), personalInfo: peopleId }\r\n        //     })\r\n        // }\r\n\r\n        // createQuarantine({\r\n        //     variables: {\r\n        //         in: values.in,\r\n        //         date_in: moment(values.date_in).format(),\r\n        //         date_out: moment(values.date_out).format(),\r\n        //         personalType: values.personalType,\r\n        //         personalInfo: values.personalInfo,\r\n        //         quarantineInfo: quarantineId,\r\n        //         others: values.others,\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រស្ថានភាពបច្ចុប្បន្ន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            {/* <AddQuarantine open={openModal} setOpen={setOpenModal} quarantineId={quarantineId} setQuarantineId={callbackLocation} /> */}\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"currentState\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                            \r\n                        >\r\n                           <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                {/* <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option> */}\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n                                <Option value=\"ជាសះស្បើយ\">ជាសះស្បើយ</Option>\r\n                                <Option value=\"ស្លាប់\">ស្លាប់</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                    >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Image, message, Row, Table, Typography, Timeline } from 'antd'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CameraOutlined, PlusCircleOutlined, CheckOutlined, CloseOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../../context/peopleContext'\r\nimport { statusCol } from './tableColumn/statusColumn'\r\nimport { testCol } from './tableColumn/testColumn'\r\nimport { relatedCol } from './tableColumn/relatedColumn'\r\nimport AddPeopleRelated from './modal/addPeopleRelated'\r\nimport AddPeopleTest from './modal/addPeopleTest'\r\nimport AddPeopleHospital from './modal/addPeopleHospital'\r\nimport AddPeopleStatus from './modal/addPeopleStatus'\r\nimport AddPeopleQuarantine from './modal/addPeopleQuarantine'\r\nimport AddPeopleHistory from './modal/addPeopleHistory'\r\nimport AddPeopleLocation from './modal/addPeopleLocation'\r\nimport EditPeople from './modal/editPeople'\r\nimport UploadPic from './modal/uploadPic'\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { GET_PERSONALINFO_BY_ID } from '../../graphql/people';\r\nimport { GET_HOSPITAL_QUARANTINE_BY_PERSON } from '../../graphql/people';\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case';\r\nimport { GET_HISTORYLOCATION_BY_PERSON } from '../../graphql/historylocation';\r\nimport { DELETE_SAMPLETEST } from '../../graphql/people';\r\nimport { DELETE_PERSONALINFO_BY_ID } from '../../graphql/people';\r\nimport moment from 'moment';\r\nimport EditCurrentState from './modal/editCurrentState';\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubPeople() {\r\n    //const { peopleData } = useContext(PeopleController)\r\n    const { id } = useParams()\r\n\r\n    const [personalData, setPersonalData] = useState({})\r\n    const [openAddPeopleRelated, setOpenAddPeopleRelated] = useState(false)\r\n    const [openAddPeopleTest, setOpenAddPeopleTest] = useState(false)\r\n    const [openAddPeopleHospital, setOpenAddPeopleHospital] = useState(false)\r\n    const [openAddPeopleStatus, setOpenAddPeopleStatus] = useState(false)\r\n    const [openAddPeopleQuarantine, setOpenAddPeopleQuarantine] = useState(false)\r\n    const [openAddPeopleHistory, setOpenAddPeopleHistory] = useState(false)\r\n    const [openAddPeopleLocation, setOpenAddPeopleLocation] = useState(false)\r\n    const [openUploadPic, setOpenUploadPic] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [subCasePagination, setSubCasePagination] = useState({})\r\n    const [openEditCurrentState,setOpenEditCurrentState] = useState(false)\r\n\r\n    const [quarantineData, setQuarantineData] = useState({})\r\n    const [hospitalData, setHospitalData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(100)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch: refetchPerson } = useQuery(GET_PERSONALINFO_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoById }) => {\r\n            // console.log(getPersonalInfoById)\r\n            // setPersonalData(getPersonalInfoById)\r\n        }\r\n    })\r\n\r\n    const getPersonalInfoById = data?.getPersonalInfoById\r\n\r\n    const { data: hospital_quarantine, refetch: refetchHospital } = useQuery(GET_HOSPITAL_QUARANTINE_BY_PERSON, {\r\n        variables: {\r\n            personalId: id\r\n        },\r\n        onCompleted: ({ getHospitalizationByPersonalInfo }) => {\r\n            console.log(getHospitalizationByPersonalInfo)\r\n            setQuarantineData(getHospitalizationByPersonalInfo?.quarantineInfo)\r\n            setHospitalData(getHospitalizationByPersonalInfo?.hospitalInfo)\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    const getHospitalizationByPersonalInfo = hospital_quarantine?.getHospitalizationByPersonalInfo\r\n\r\n    const { data: caseData, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: getPersonalInfoById?.case?.id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n\r\n            // console.log(getPersonalInfoByCaseWithPagination, \"dataCase\")\r\n\r\n\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    const getPersonalInfoByCaseWithPagination = caseData?.getPersonalInfoByCaseWithPagination\r\n\r\n    useEffect(() => {\r\n\r\n        if (caseData) {\r\n            let item = [...getPersonalInfoByCaseWithPagination?.personalInfos]\r\n            let index = item.findIndex(e => e.id === id)\r\n            item.splice(index, 1)\r\n            setSubCaseData(item)\r\n            setSubCasePagination(getPersonalInfoByCaseWithPagination?.paginator)\r\n        }\r\n\r\n    }, [caseData])\r\n\r\n\r\n    const { data: historylocation, refetch: refetchHistoryLocation } = useQuery(GET_HISTORYLOCATION_BY_PERSON, {\r\n        variables: {\r\n            personalId: id\r\n        },\r\n        onCompleted: ({ getHistoryLocationByPersonalInfoId }) => {\r\n            console.log(getHistoryLocationByPersonalInfoId)\r\n            // setQuarantineData(getHospitalizationByPersonalInfo?.quarantineInfo)\r\n            // setHospitalData(getHospitalizationByPersonalInfo?.hospitalInfo)\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    const getHistoryLocationByPersonalInfoId = historylocation?.getHistoryLocationByPersonalInfoId\r\n\r\n    const [deleteSampleTest, { loading: deleteLoading }] = useMutation(DELETE_SAMPLETEST, {\r\n        onCompleted: () => {\r\n            refetchPerson()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const [deletePersonalInfo, { loading: deleteRelated }] = useMutation(DELETE_PERSONALINFO_BY_ID, {\r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleRelatedDelete = (e) => {\r\n\r\n        deletePersonalInfo({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSampleTestDelete = (e) => {\r\n\r\n        deleteSampleTest({\r\n            variables: {\r\n                sampleTestId: e,\r\n                personalInfoId: id\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddPeopleRelated open={openAddPeopleRelated} setOpen={setOpenAddPeopleRelated} caseId={getPersonalInfoById?.case?.id} setRefetch={refetch} />\r\n            <AddPeopleTest open={openAddPeopleTest} setOpen={setOpenAddPeopleTest} peopleID={id} />\r\n            <AddPeopleHospital open={openAddPeopleHospital} setOpen={setOpenAddPeopleHospital} peopleId={id} />\r\n            <AddPeopleStatus open={openAddPeopleStatus} setOpen={setOpenAddPeopleStatus} />\r\n            <AddPeopleQuarantine open={openAddPeopleQuarantine} setOpen={setOpenAddPeopleQuarantine} peopleId={id} />\r\n            <AddPeopleHistory open={openAddPeopleHistory} setOpen={setOpenAddPeopleHistory} />\r\n            <AddPeopleLocation open={openAddPeopleLocation} setOpen={setOpenAddPeopleLocation} setRefetch={refetchHistoryLocation} caseId={getPersonalInfoById?.case?.id} peopleId={id} />\r\n            <UploadPic open={openUploadPic} setOpen={setOpenUploadPic} />\r\n            <EditPeople open={openEdit} setOpen={setOpenEdit} personId={id} setRefetch={refetchPerson} personalData={getPersonalInfoById} />\r\n            <EditCurrentState open={openEditCurrentState} setOpen={setOpenEditCurrentState} peopleId={id} setRefetch={refetchPerson} currentStateData={getPersonalInfoById?.currentState} />\r\n            <Col\r\n                xs={24} md={24}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Row\r\n                    style={{\r\n                        border: \"1px solid #d9d9d9\",\r\n                        padding: \"20px 20px 20px 20px\",\r\n\r\n                    }}\r\n                >\r\n                    <Col\r\n                        xs={24} md={4}\r\n                        style={{\r\n                            position: \"relative\",\r\n                            // padding: 20,\r\n                        }}\r\n\r\n                    >\r\n                        <Image\r\n                            width={\"100%\"}\r\n                            src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                        />\r\n                        <span className=\"btnCamera\" onClick={() => setOpenUploadPic(true)}>\r\n                            <CameraOutlined style={{ color: '#FFFF' }} />\r\n                        </span>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} md={10}\r\n                    >\r\n\r\n                        <table style={{ marginLeft: 30 }} className=\"tbl-subPeople\">\r\n                            <tr>\r\n                                <td width=\"150\"><Title level={5}>ឈ្មោះ</Title></td>\r\n                                <td><Title level={5}>៖&emsp;</Title></td>\r\n                                <td><Title level={5}>{getPersonalInfoById?.lastName} {getPersonalInfoById?.firstName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} /></Title></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ឈ្មោះជាភាសាឡាតាំង</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.englishName}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>អត្តលេខអ្នកជំងឺ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.patientId}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ភេទ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.gender}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>សញ្ជាតិ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.nationality}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>លេខអត្តសញ្ញាណប័ណ្ឌ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.idCard}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>លេខទូរស័ព្ទ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.tel}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>មុខរបរ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.occupation}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>អាស័យដ្ឋាន</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td> {getPersonalInfoById?.village !== \"ក្រៅសៀមរាប\" && \"ភូមិ\" + getPersonalInfoById?.village + \",\"}\r\n                                    {getPersonalInfoById?.commune !== \"ក្រៅសៀមរាប\" && \"ឃុំ\" + getPersonalInfoById?.commune + \",\"}\r\n                                    {getPersonalInfoById?.district !== \"ក្រៅសៀមរាប\" && \"ស្រុក\" + getPersonalInfoById?.district + \",\"}\r\n                                    {\"ខេត្ត\" + getPersonalInfoById?.province}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ចំនួនចាក់វ៉ាក់សាំង</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.vaccinated} លើក</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ការសម្ភាស</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.interviewed ? \"រួចរាល់\" : \"មិនទាន់រូចរាល់\"}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ត្រូវជា</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.relation}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ជំងឺប្រចាំកាយ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.illness}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ស្ថានភាពបច្ចុប្បន្ន</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ចំណាំ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.other}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} md={{ span: 6 }}\r\n\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24}\r\n                                style={{ paddingBottom: 20 }}\r\n                            >\r\n\r\n                                <table style={{ marginLeft: 30 }} className=\"tbl-subPeople\">\r\n                                    <tr>\r\n                                        <td width=\"150\"><Title level={5}>\r\n                                            ការធ្វើចត្តាឡីស័ក\r\n                                            <span className=\"link\" onClick={() => setOpenAddPeopleQuarantine(true)}> <PlusCircleOutlined /></span>\r\n                                        </Title></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>កាលបរិច្ឆេទចាប់ផ្ដើម</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>{(hospitalData?.date_in === undefined || hospitalData?.date_in === null) ? \"\": moment(hospitalData?.date_in).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>កាលបរិច្ឆេទចេញ</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>{(hospitalData?.date_out === null || hospitalData?.date_out === undefined) ? \"\": moment(hospitalData?.date_out).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\") }</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>ទីតាំង</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>{quarantineData?.quarantineInfo?.locationName}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>អាស័យដ្ឋាន</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>\r\n                                            {(quarantineData?.quarantineInfo?.village !== \"ក្រៅសៀមរាប\" && quarantineData?.quarantineInfo?.village !== undefined) && \"ភូមិ\" + quarantineData?.quarantineInfo?.village + \",\"}\r\n                                            {(quarantineData?.quarantineInfo?.commune !== \"ក្រៅសៀមរាប\" && quarantineData?.quarantineInfo?.commune !== undefined) && \"ឃុំ\" + quarantineData?.quarantineInfo?.commune + \",\"}\r\n                                            {(quarantineData?.quarantineInfo?.district !== \"ក្រៅសៀមរាប\" && quarantineData?.quarantineInfo?.district !== undefined) && \"ស្រុក\" + quarantineData?.quarantineInfo?.district + \",\"}\r\n                                            {quarantineData?.quarantineInfo?.province !== undefined && quarantineData?.quarantineInfo?.province}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </Col>\r\n                            <Col xs={24}>\r\n\r\n                                <table style={{ marginLeft: 30 }} className=\"tbl-subPeople\">\r\n                                    <tr>\r\n                                        <td width=\"150\"><Title level={5}>\r\n                                            ស្ថានភាពបច្ចុប្បន្ន\r\n                                            <span className=\"link\" onClick={() => setOpenEditCurrentState(true)}> <PlusCircleOutlined /></span>\r\n                                        </Title></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>អវិជ្ជមាន</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> &emsp;</td>\r\n                                        <td>{getPersonalInfoById?.createdAt === null || getPersonalInfoById?.createdAt === undefined ? \"\" : moment(getPersonalInfoById?.createdAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>វិជ្ជមាន</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> {getPersonalInfoById?.currentState?.confirm ? \"វិជ្ជមាន\":\"\"}&emsp;</td>\r\n                                        <td>{getPersonalInfoById?.currentState?.confirmedAt !== null && moment(getPersonalInfoById?.currentState?.confirmedAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>ជាសះស្បើយ</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> {getPersonalInfoById?.currentState?.recovered ? \"ជាសះស្បើយ\":\"\"}&emsp;</td>\r\n                                        <td>{getPersonalInfoById?.currentState?.recoveredAt !== null && moment(getPersonalInfoById?.currentState?.recoveredAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>ស្លាប់</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> {getPersonalInfoById?.currentState?.death ? \"ស្លាប់\":\"\"}&emsp;</td>\r\n                                        <td>{getPersonalInfoById?.currentState?.deathAt !== null && moment(getPersonalInfoById?.currentState?.deathAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            {/* <Col\r\n                xs={24} md={{ span: 7 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 60px 20px 60px\",\r\n                    marginTop: 20\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        style={{ paddingBottom: 20 }}\r\n                    >\r\n                        <table className=\"tbl-subPeople1\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={2}><Title level={5}>ស្ថានភាពបច្ចុប្បន្ន <span className=\"link\" onClick={() => setOpenAddPeopleStatus(true)}><PlusCircleOutlined /></span></Title></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td >{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    <td>អវិជ្ជមាន</td>\r\n                                    <td>\r\n                                        <span style={{ border: \"1px solid green\", padding: \"\"}}>\r\n                                        {personalData?.currentState?.confirm ? <CloseOutlined style={{ color: \"red\" }} /> : <CheckOutlined style={{ color: \"green\" }} />}\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td > {personalData?.currentState?.confirm ? <CheckOutlined style={{ color: \"green\" }} /> : <CloseOutlined style={{ color: \"red\" }} />} វិជ្ជមាន</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td> {personalData?.currentState?.recovered ? <CheckOutlined style={{ color: \"green\" }} /> : <CloseOutlined style={{ color: \"red\" }} />} ជាសះស្បើយ</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td> {personalData?.currentState?.death ? <CheckOutlined style={{ color: \"green\" }} /> : <CloseOutlined style={{ color: \"red\" }} />} ស្លាប់</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </Col> */}\r\n            <Col\r\n                xs={24} md={{ span: 11, offset: 0 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 60px 20px 60px\",\r\n                    marginTop: 20,\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        style={{ paddingBottom: 20 }}\r\n                    >\r\n                        <table className=\"tbl-subPeople\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={3}><Title level={5}>ប្រវត្តិដំណើរករណី</Title></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width=\"150\">ឈ្មោះករណី</td>\r\n                                    <td> ៖&emsp;</td>\r\n                                    <td>{getPersonalInfoById?.case?.caseName !== undefined && getPersonalInfoById?.case?.caseName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">ទីតាំងករណី</td>\r\n                                    <td> ៖&emsp;</td>\r\n                                    <td>\r\n                                        {(getPersonalInfoById?.case?.village !== \"ក្រៅសៀមរាប\" && getPersonalInfoById?.case?.village !== undefined) && \"ភូមិ\" + getPersonalInfoById?.case?.village + \",\"}\r\n                                        {(getPersonalInfoById?.case?.commune !== \"ក្រៅសៀមរាប\" && getPersonalInfoById?.case?.commune !== undefined) && \"ឃុំ\" + getPersonalInfoById?.case?.commune + \",\"}\r\n                                        {(getPersonalInfoById?.case?.district !== \"ក្រៅសៀមរាប\" && getPersonalInfoById?.case?.district !== undefined) && \"ស្រុក\" + getPersonalInfoById?.case?.district + \",\"}\r\n                                        {getPersonalInfoById?.case?.province !== undefined && \"ខេត្ត\" + getPersonalInfoById?.case?.province}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">ទំនាក់ទំនង</td>\r\n                                    <td> ៖&emsp;</td>\r\n                                    <td>{getPersonalInfoById?.direct ? \"ផ្ទាល់\" : \"ប្រយោល\"}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <table className=\"tbl-subPeople\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={2}>\r\n                                        <Title level={5}>\r\n                                            មណ្ឌលព្យាបាល\r\n                                            <span className=\"link\" onClick={() => setOpenAddPeopleHospital(true)}> <PlusCircleOutlined /></span>\r\n                                        </Title>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width=\"150\">ឈ្មោះមណ្ឌល</td>\r\n                                    <td> ៖&emsp;{getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.hospitalName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">អាស័យដ្ឋាន</td>\r\n                                    <td> ៖&emsp;\r\n                                        {(getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.village !== \"ក្រៅសៀមរាប\" && getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.village !== undefined) && \"ភូមិ\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.village + \",\"}\r\n                                        {(getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.commune !== \"ក្រៅសៀមរាប\" && getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.commune !== undefined) && \"ឃុំ\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.commune + \",\"}\r\n                                        {(getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.district !== \"ក្រៅសៀមរាប\" && getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.district !== undefined) && \"ស្រុក\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.district + \",\"}\r\n                                        {getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.province !== undefined && \"ខេត្ត\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.province}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">កាលបរិច្ឆេទចូល</td>\r\n                                    <td> ៖&emsp;{getHospitalizationByPersonalInfo?.hospitalInfo?.date_in === null || getHospitalizationByPersonalInfo?.hospitalInfo?.date_in === undefined ? \"\": moment(hospitalData?.date_in).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">កាលបរិចេ្ឆទចេញ</td>\r\n                                    <td> ៖&emsp;{getHospitalizationByPersonalInfo?.hospitalInfo?.date_out === null || getHospitalizationByPersonalInfo?.hospitalInfo?.date_out === undefined ? \"\": moment(hospitalData?.date_out).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 12, offset: 1 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 60px 20px 60px\",\r\n                    marginTop: 20,\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Title level={5} style={{ marginBottom: 20 }}>\r\n                    ទីតាំង <span className=\"link\" onClick={() => setOpenAddPeopleLocation(true)}><PlusCircleOutlined /></span>\r\n                </Title>\r\n                <Timeline mode=\"right\">\r\n                    {getHistoryLocationByPersonalInfoId?.map(location => (\r\n                        <Timeline.Item label={moment(location?.date).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")} color={location?.type === \"ផ្ទាល់\" ? \"red\" : \"green\"}>{location?.affectedLocationId?.affectedLocationName}</Timeline.Item>\r\n                    ))}\r\n\r\n                    {/* <Timeline.Item label=\"2015-09-01 09:12:11\" color=\"green\">Solve initial network problems</Timeline.Item>\r\n                    <Timeline.Item color=\"green\">Technical testing</Timeline.Item>\r\n                    <Timeline.Item label=\"2015-09-01 09:12:11\" color=\"green\">Network problems being solved</Timeline.Item> */}\r\n                </Timeline>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 11 }}\r\n                style={{ paddingTop: 14, marginTop: 20 }}\r\n            >\r\n                <Title level={5}>ការធ្វើតេស្ត <span className=\"link\" onClick={() => setOpenAddPeopleTest(true)} ><PlusCircleOutlined /></span></Title>\r\n                <Table\r\n                    className=\"table-personal\"\r\n                    columns={testCol({ handleSampleTestDelete })}\r\n                    dataSource={getPersonalInfoById?.sampleTest}\r\n                    rowKey={record => record.id}\r\n                    pagination={false}\r\n                    scroll={{ x: 800, y: 300 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 12, offset: 1 }}\r\n                style={{ paddingTop: 14, marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ <span className=\"link\" onClick={() => setOpenAddPeopleRelated(true)}><PlusCircleOutlined /></span>\r\n                </Title>\r\n                <Table\r\n                    className=\"table-personal\"\r\n                    columns={relatedCol({ handleRelatedDelete })}\r\n                    dataSource={subCaseData}\r\n                    rowKey={record => record.id}\r\n                    pagination={false}\r\n                    // pagination={{\r\n                    //     total: subCasePagination?.totalDocs,\r\n                    //     // showSizeChanger: true,\r\n                    //     onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    // }}\r\n                    scroll={{ x: 1000, y: 300 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const hospitalCol = ({handleDelete,limit,page}) => {\r\n    let no = ((page-1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះមណ្ឌល',\r\n            dataIndex: 'hospitalName',\r\n            key: 'hospitalName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាសយដ្ឋាន  ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 120,\r\n            render: (text, record) => (\r\n                // <Tooltip placement=\"top\" title={record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}>\r\n                    <Space size=\"middle\">\r\n                        {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                        {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                        {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                        {record.province && record.province}\r\n                    </Space>\r\n                // </Tooltip>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'អ្នកទទួលខុសត្រូវ',\r\n            dataIndex: 'PersonInCharge',\r\n            key: 'PersonInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.lastName+\" \"+record.personInCharge.firstName\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.tel\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n    \r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subHospital/\"+record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, {useContext, useState, useEffect} from 'react'\r\nimport { Row, Col, Button, Input, Table,message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { hospitalCol } from '../component/hospital/tableColumn/hospitalColumn'\r\nimport AddHospital from '../component/hospital/modal/addHospital';\r\nimport { useQuery,useMutation } from '@apollo/client';\r\nimport { GET_ALL_HOSPITAL } from '../graphql/hospital';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\n\r\nexport default function Hospital() {\r\n\r\n    const [hospitalData, setHospitalData] = useState([])\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const {data,loading,error,refetch} = useQuery(GET_ALL_HOSPITAL,{\r\n        variables:{\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted:({getHospitalInfoWithPagination})=>{\r\n            \r\n            setHospitalData(getHospitalInfoWithPagination)\r\n        },\r\n        fetchPolicy:'network-only',\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setHospitalData(data?.getHospitalInfoWithPagination)\r\n        }\r\n    }, [data])\r\n\r\n    const [deleteHospitalInfo, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_HOSPITALINFO_BY_ID, {     \r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"ទិន្នន័យត្រូវបានលុប\")\r\n        },\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //hospitalDataDispatch({type: \"DELETE_HOSPITAL\", payload: e})\r\n        deleteHospitalInfo({variables:{\r\n            id:e\r\n        }})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddHospital open={openAdd} setOpen={setOpenAdd} setRefetch={refetch}/>\r\n            {/* <EditUser open={openEdit} setOpen={setOpenEdit} user={userEdit} /> */}\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលមន្ទីរពេទ្យ\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=>setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                // caseCol({handleDelete})\r\n                    className=\"table-go-list\"\r\n                    columns={hospitalCol({handleDelete,limit,page})}\r\n                    dataSource={hospitalData?.hospitalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: hospitalData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: hospitalData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const subHospitalCol = ({handleDelete, handleEditSubHospital}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 40,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.lastName} {record?.personalInfo?.firstName}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចូល',\r\n            dataIndex: 'date_in',\r\n            key: 'date_in',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_in).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចេញ',\r\n            dataIndex: 'date_out',\r\n            key: 'date_out',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.date_out === null || record?.date_out === undefined ? \"គ្មាន\": moment(record?.date_out).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n      \r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 70,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record?.personalInfo?.village !== \"ក្រៅសៀមរាប\") && record?.personalInfo?.village}\r\n                    {record?.personalInfo?.commune !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.commune}\r\n                    {record?.personalInfo?.district !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.district}\r\n                    {record?.personalInfo?.province && record?.personalInfo?.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.currentState?.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'relatedInfo',\r\n            key: 'relatedInfo',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.direct ? \"ផ្ទាល់\":\"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record?.personalInfo?.id}><EyeOutlined /></Link>\r\n                    <span className=\"link\" onClick={() => handleEditSubHospital(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Divider, message } from 'antd'\r\nimport { setEditHospital } from '../../../function/set'\r\n\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_HOSPITALINFO_BY_ID } from '../../../graphql/hospital'\r\n\r\nexport default function EditHospital({ open, setOpen, data, hospitalId, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [updateHospitalInfo, { loading }] = useMutation(UPDATE_HOSPITALINFO_BY_ID, {\r\n        onCompleted: () => {\r\n                setRefetch()\r\n                message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if (data !== undefined) {\r\n            form.setFieldsValue(setEditHospital(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        updateHospitalInfo({\r\n            variables: {\r\n                lat: values.lat,\r\n                hospitalName: values.hospitalName,\r\n                long: values.long,\r\n                other: values.other,\r\n                tel: values.tel,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                position: values.position,\r\n                others: values.others,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                id: hospitalId\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែមន្ទីរពេទ្យ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false}\r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editHospital\"\r\n                initialValues={setEditHospital(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"capacity\"\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"អាចផ្ទុកបាន\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, message, DatePicker } from 'antd'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CREATE_NEW_HOSPITALIZATION } from '../../../graphql/hospital'\r\nimport moment from 'moment'\r\n\r\nexport default function AddSubHospital({ open, setOpen, hospitalId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [createHospitalization, { loading }] = useMutation(CREATE_NEW_HOSPITALIZATION, {\r\n        onCompleted: () => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n\r\n        createHospitalization({\r\n            variables: {\r\n                // in: values.in,\r\n                date_in: moment(values.date_in).format(),\r\n                date_out: values.date_out === undefined || values.date_out === null ? null : moment(values.date_out).format(),\r\n                personalInfo: values.personalInfo,\r\n                hospitalInfo: hospitalId,\r\n                others: values.others,\r\n                // date:moment(values.date).format(),\r\n                // times:values.times,\r\n                // location:values.location,\r\n                // result:values.result,\r\n                // symptom:values.symptom,\r\n                // other:values.other\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={2} data={peopleData} title=\"អ្នកធ្វើតេស្ត\" setValue={setToPeopleFn} />\r\n                            {/* <Select placeholder=\"អ្នកធ្វើតេស្ត\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select> */}\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    {/* <Col xs={24} md={{ span: 11,offset:2}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"តេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, DatePicker, message } from 'antd'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { setEditSubHospital } from '../../../function/set'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_PERSON_BY_HOSPITALINFO } from '../../../graphql/hospital'\r\nimport moment from 'moment'\r\n\r\nexport default function EditSubHospital({ open, setOpen, data, hospitalId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateHospitalization, { loading }] = useMutation(UPDATE_PERSON_BY_HOSPITALINFO, {\r\n        onCompleted: () => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue(setEditSubHospital(data))\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values,data.id);\r\n        updateHospitalization({\r\n            variables: {\r\n                in: values.in,\r\n                date_in: moment(values.date_in).format(),\r\n                date_out: values.date_out === undefined || values.date_out === null ? null : moment(values.date_out).format(),\r\n                // out_status:String,\r\n                personalInfo: values.personalInfo,\r\n                hospitalInfo: hospitalId,\r\n                others: values.others,\r\n                id: data.id\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកជំងឺ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubHospital\"\r\n                // initialValues={setEditSubHospital(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={2} data={peopleData} title=\"អ្នកធ្វើតេស្ត\" setValue={setToPeopleFn} />\r\n                            {/* <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {peopleData.map((people) => (\r\n                                    <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n\r\n                            </Select> */}\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table, message, Input } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { subHospitalCol } from './tableColumn/subHospitalColumn'\r\nimport { PlusCircleOutlined, EditOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport EditHospital from './modal/editHospital'\r\nimport AddSubHospital from './modal/addSubHospital'\r\nimport EditSubHospital from './modal/editSubHospital'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT } from '../../graphql/people'\r\nimport { GET_PERSON_BY_HOSPITALINFO } from '../../graphql/hospital'\r\nimport { GET_HOSPITALINFO_BY_ID } from '../../graphql/hospital'\r\nimport { DELETE_PERSON_BY_HOSPITAL } from '../../graphql/hospital'\r\n\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubHospital() {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n    const [peopleData, setPeopleData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [subHospitalData, setSubHospitalData] = useState([])\r\n    const [hospitalData, setHospitalData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data: hospital, refetch: refetchHospital } = useQuery(GET_HOSPITALINFO_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getHospitalInfoById }) => {\r\n            // console.log(getHospitalInfoById)\r\n            setHospitalData(getHospitalInfoById)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (hospital) {\r\n            setHospitalData(hospital?.getHospitalInfoById)\r\n        }\r\n    }, [hospital])\r\n\r\n    const { data } = useQuery(GET_ALL_PERSONINFO_NO_LIMIT, {\r\n        onCompleted: ({ allPersonalInfos }) => {\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    const { data: hospitalSub, refetch: refetchSub } = useQuery(GET_PERSON_BY_HOSPITALINFO, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            hospitalId: id\r\n        },\r\n        onCompleted: ({ getQuarantineByHospitalIdIdWithPagination }) => {\r\n\r\n            setSubHospitalData(getQuarantineByHospitalIdIdWithPagination)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (hospitalSub) {\r\n            setSubHospitalData(hospitalSub?.getQuarantineByHospitalIdIdWithPagination)\r\n        }\r\n    }, [hospitalSub])\r\n\r\n    useEffect(() => {\r\n        refetchSub()\r\n    }, [page, limit, keyword])\r\n\r\n    const [deleteHospitalization, { loading }] = useMutation(DELETE_PERSON_BY_HOSPITAL, {\r\n        onCompleted: () => {\r\n            if (loading) {\r\n                message.loading(\"កំពុងលុបទិន្នន័យ...\")\r\n            } else {\r\n                refetchSub()\r\n                message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n            }\r\n\r\n        }\r\n    })\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        //subHospitalDataDispatch({type: \"DELETE_SUB_HOSPITAL\", payload: e})\r\n        deleteHospitalization({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEditSubHospital = (e) => {\r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <EditHospital open={openEdit} setOpen={setOpenEdit} data={hospitalData} hospitalId={id} setRefetch={refetchHospital} />\r\n                <AddSubHospital open={openAddSub} setOpen={setOpenAddSub} hospitalId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n                <EditSubHospital open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} hospitalId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n                <Col\r\n                    xs={24}\r\n                >\r\n                    {/* <Title level={5}>ឈ្មោះករណី៖ \r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                </Title> */}\r\n                </Col>\r\n                <Col\r\n                    xs={24}\r\n                    md={11}\r\n                    className=\"subCase-card\"\r\n                >\r\n                    {/* <p>ឈ្មោះមណ្ឌល៖ {hospitalData?.hospitalName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} /></p>\r\n                <p>អាសយដ្ឋាន៖ {\" \"}\r\n                    {hospitalData?.village !== \"ក្រៅសៀមរាប\" && hospitalData?.village + \",\"}\r\n                    {hospitalData?.commune !== \"ក្រៅសៀមរាប\" && hospitalData?.commune + \",\"}\r\n                    {hospitalData?.district !== \"ក្រៅសៀមរាប\" && hospitalData?.district + \",\"}\r\n                    {hospitalData?.province}\r\n                </p>\r\n                <p>អ្នកទទួលខុសត្រូវ៖ {hospitalData?.personInCharge?.lastName} {hospitalData?.personInCharge?.firstName}</p>\r\n                <p>លេខទូរស័ព្ទ៖ {hospitalData?.personInCharge?.tel}</p>\r\n                <p>ចំណាំ៖ {hospitalData?.other}</p> */}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr >\r\n                                <td style={{ width: '40%' }}><p>ឈ្មោះមណ្ឌល</p></td>\r\n                                <td style={{ width: '60%' }}><p>៖ {hospitalData?.hospitalName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} /></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>អាសយដ្ឋាន</p></td>\r\n                                <td><p>៖ {hospitalData?.village !== \"ក្រៅសៀមរាប\" && hospitalData?.village + \",\"}\r\n                                    {hospitalData?.commune !== \"ក្រៅសៀមរាប\" && hospitalData?.commune + \",\"}\r\n                                    {hospitalData?.district !== \"ក្រៅសៀមរាប\" && hospitalData?.district + \",\"}\r\n                                    {hospitalData?.province}</p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>អ្នកទទួលខុសត្រូវ</p></td>\r\n                                <td><p>៖ {hospitalData?.personInCharge?.lastName} {hospitalData?.personInCharge?.firstName}</p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>លេខទូរស័ព្ទ</p></td>\r\n                                <td><p>៖ {hospitalData?.personInCharge?.tel}</p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>ចំណាំ</p></td>\r\n                                <td><p>៖ {hospitalData?.other}</p></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n\r\n                {/* <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>មណ្ឌលព្យាបាល៖ </p>\r\n\r\n                <p>ឈ្មោះមណ្ឌល៖​ </p>\r\n                <p>ទីតាំង៖ </p>\r\n                <p>កាលបរិច្ឆេទ​ចូល៖ </p>\r\n                <p>កាលបរិច្ឆេទចេញ៖ </p>\r\n            </Col> */}\r\n\r\n\r\n                {/* <Col\r\n                    xs={24}\r\n                    style={{ marginTop: 20 }}\r\n                >\r\n                    <Title level={5}>\r\n                        អ្នកជំងឺ៖ {\" \"}\r\n\r\n                        <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)} />\r\n                    </Title>\r\n\r\n                </Col> */}\r\n\r\n                <Col\r\n                    xs={18}\r\n                    style={{ margin: \"30px 0 0 0\" }}\r\n                >\r\n                    \r\n                    <Title level={5}>\r\n                            អ្នកជំងឺ៖ {\" \"}\r\n\r\n                            <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)} />\r\n                        </Title>\r\n\r\n                </Col>\r\n                <Col\r\n                    xs={{span: 6, offset: 1}}\r\n                    style={{ margin: \"20px 0 20px 0\" }}\r\n                >\r\n                    <Input prefix={<SearchOutlined />} placeholder=\"ស្វែងរក...\" size=\"large\" onChange={e => setKeyword(e.target.value) }/>\r\n                </Col>\r\n                <Col\r\n                    xs={24}\r\n                    md={24}\r\n                >\r\n                    <Table\r\n                        columns={subHospitalCol({ handleDelete, handleEditSubHospital, limit, page })}\r\n                        dataSource={subHospitalData?.hospitalizations}\r\n                        rowKey={record => record.id}\r\n                        pagination={{\r\n                            total: subHospitalData?.paginator?.totalDocs,\r\n                            // showSizeChanger: true,\r\n                            onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                        }}\r\n                        scroll={{ x: 240 }}\r\n                        sticky\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col,Image } from \"antd\";\r\nimport { LOGIN_USER, IS_LOGGED_IN } from \"../graphql/auth\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { isLoggedInVar } from \"../cache\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logo from '../asset/srLogo.png'\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n  const { data: isLogin } = useQuery(IS_LOGGED_IN);\r\n  const [loginUser, { error, loading }] = useMutation(LOGIN_USER, {\r\n    onCompleted: ({ loginUser }) => {\r\n      localStorage.setItem(\"user\", JSON.stringify(loginUser));\r\n      isLoggedInVar(true);\r\n    },\r\n    onError: (e) => {\r\n      console.log(e.message);\r\n    },\r\n  });\r\n  const onFinish = (values) => {\r\n      console.log(values)\r\n    loginUser({\r\n      variables: {\r\n        username: values.username,\r\n        password: values.password,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n <Row>\r\n<Col\r\n    xs={{ span: 24}}\r\n    md={{span: 16, offset: 4}}\r\n    lg={{span: 12, offset: 6}}\r\n    xl={{span: 8, offset: 8}}\r\n\r\n>\r\n    <div className=\"login-form\">\r\n\r\n        <div className=\"login-logo\">\r\n            <Image width={\"100%\"} src={Logo} preview={false} />\r\n        </div>\r\n        <h2 style={{ color: '#707070' }}>ការចូលគណនី</h2>\r\n        <div className=\"line-shape\"></div>\r\n        <Form autoComplete=\"off\"\r\n            name=\"basic\"\r\n            // style={{margin:'20%'}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input  placeholder=\"ឈ្មោះសម្គាល់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type=\"password\" placeholder=\"លេខសម្ងាត់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", height: 'auto', fontSize: 20 }}>\r\n       ចូល\r\n      </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n</Col>\r\n</Row> \r\n  );\r\n}\r\n\r\n{/* <Row>\r\n<Col\r\n    xs={{ span: 24}}\r\n    md={{span: 16, offset: 4}}\r\n    lg={{span: 12, offset: 6}}\r\n    xl={{span: 8, offset: 8}}\r\n\r\n>\r\n    <div className=\"login-form\">\r\n\r\n        <div className=\"login-logo\">\r\n            <Image width={\"100%\"} src={Logo} preview={false} />\r\n        </div>\r\n        <h2 style={{ color: '#707070' }}>ការចូលគណនី</h2>\r\n        <div className=\"line-shape\"></div>\r\n        <Form\r\n            name=\"basic\"\r\n            // style={{margin:'20%'}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"ឈ្មោះសម្គាល់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type=\"password\" placeholder=\"លេខសម្ងាត់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", height: 'auto', fontSize: 20 }}>\r\n                    ចូល\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n</Col>\r\n</Row> */}\r\n\r\n\r\n\r\n// <Row>\r\n// <Col\r\n//   xs={{ span: 6, offset: 9 }}\r\n//   style={{\r\n//     padding: 20,\r\n//   }}\r\n// >\r\n//   <Form name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n//     <Form.Item\r\n//       label=\"Username\"\r\n//       name=\"username\"\r\n//       rules={[\r\n//         {\r\n//           required: true,\r\n//           message: \"Please input your username!\",\r\n//         },\r\n//       ]}\r\n//     >\r\n//       <Input />\r\n//     </Form.Item>\r\n//     <Form.Item\r\n//       label=\"Password\"\r\n//       name=\"password\"\r\n//       rules={[\r\n//         {\r\n//           required: true,\r\n//           message: \"Please input your password!\",\r\n//         },\r\n//       ]}\r\n//     >\r\n//       <Input.Password />\r\n//     </Form.Item>\r\n\r\n//     <Form.Item>\r\n//       <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n//         Submit\r\n//       </Button>\r\n//     </Form.Item>\r\n//   </Form>\r\n// </Col>\r\n// </Row>\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ImageShow, ...props }) {\r\n  let r = -80;\r\n  if(title===\"អ្នកវិជ្ជមាន\"){\r\n    r = -120;\r\n  }else if(title ===\"អ្នកកំពុងសម្រាកព្យាបាល\"){\r\n    r = -130;\r\n  }\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${isRed && \"infoBox--red\"\r\n        } `}\r\n      style={{ position: 'relative' }}\r\n    >\r\n      <CardContent>\r\n        {/* <Typography  variant=\"h5\" color=\"textSecondary\" gutterBottom >\r\n          \r\n          {title}\r\n        </Typography> */}\r\n        <h4 className=\"infoBox_font\">{title}</h4>\r\n        <h3 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          ថ្ងៃនេះ {cases}\r\n        </h3>\r\n\r\n        <Typography as=\"\" className=\" infoBox_font\" color=\"textSecondary\">\r\n          សរុប {total}\r\n        </Typography>\r\n\r\n        <img src={ImageShow} style={{\r\n          position: \"absolute\", top: -30,right:r\r\n        }} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ district }) {\r\n  return (\r\n    <div className=\"covid_tables\">\r\n      {district?.map((dis) => (\r\n        <tr className=\"tr\">\r\n          <td className=\"td\">{dis.district}</td>\r\n          <td className=\"td\">\r\n            <strong>{numeral(dis.confirmedCase).format(\"0,0\")}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup,Marker,CircleMarker,Polygon} from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#a70b99\",\r\n    rgb: \"rgb(167, 11, 153)\",\r\n    half_op: \"rgba(167, 11, 153, 0.5)\",\r\n    multiplier: 100,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 100,\r\n  },\r\n  deaths: {\r\n    hex: \"#de0d2d\",\r\n    rgb: \"rgb(222, 13, 45)\",\r\n    half_op: \"rgba(222, 13, 45, 0.5)\",\r\n    multiplier: 400,\r\n  },\r\n\r\n};\r\n\r\nexport const joinArray = (arr1, arr2) => {\r\n  let arr = []\r\n  arr1.map(load => {\r\n      arr2.map(load1 => {\r\n          if(load1.district === load._id){\r\n              arr.push({...load, ...load1})\r\n          }\r\n      })\r\n  })\r\nreturn arr;\r\n}\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.confirmedCase > b.confirmedCase) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data?.map((quarantineInfo) => (\r\n    <Circle\r\n      center={[quarantineInfo.lat, quarantineInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hex,\r\n        fillColor: casesTypeColors[casesType].hex,\r\n      }}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        5000\r\n        // Math.sqrt(quarantineInfo[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${quarantineInfo.quarantineInfoInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{quarantineInfo.district}</div>\r\n          <div className=\"info-confirmed\">\r\n            អ្នកឆ្លង៖ {numeral(quarantineInfo.confirmedCase).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            អ្នកជាសះស្បើយ: {numeral(quarantineInfo.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            អ្នកស្លាប់: {numeral(quarantineInfo.death).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n \r\n\r\n  export const showQuarantineInfoOnMap = (data) =>\r\n  data?.map((quarantineInfo) => (\r\n    <Circle\r\n      center={[quarantineInfo?.lat, quarantineInfo?.long]}\r\n      color=\"yellow\"\r\n      pathOptions={{\r\n        color: \"gray\",\r\n        fillColor: \"white\",\r\n      }}\r\n      fillOpacity={0.8}\r\n      radius={\r\n        1000\r\n        // Math.sqrt(quarantineInfo[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${quarantineInfo.quarantineInfoInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{quarantineInfo.locationName}</div>\r\n          \r\n          <div className=\"info-confirmed\">\r\n            សមត្តភាពផ្ទុក: {numeral(quarantineInfo.capacity).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            អាស័យដ្ធាន: {quarantineInfo.village } {quarantineInfo.commune } {quarantineInfo.district } {quarantineInfo.province }\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            អ្នកទទួលខុសត្រូវ: {quarantineInfo.personInCharge.firstName}  {quarantineInfo.personInCharge.lastName}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            តួនាទី: {quarantineInfo.personInCharge.position}  \r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            ទូរស័ព្ទ: {quarantineInfo.personInCharge.tel}  \r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\n  //\r\n  export const  showHospitalInfoOnMap = (data) =>\r\n  data?.map((hospitalInfo) => (\r\n    <Circle\r\n      center={[hospitalInfo?.lat, hospitalInfo?.long]}\r\n      color=\"yellow\"\r\n      pathOptions={{\r\n        color: \"red\",\r\n        fillColor: \"white\",\r\n      }}\r\n      fillOpacity={0.8}\r\n      radius={\r\n        500\r\n        // Math.sqrt(hospitalInfo[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${hospitalInfo.hospitalInfoInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{hospitalInfo.hospitalName}</div>\r\n          \r\n          <div className=\"info-recovered\">\r\n            អាស័យដ្ធាន: {hospitalInfo.village } {hospitalInfo.commune } {hospitalInfo.district } {hospitalInfo.province }\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            អ្នកទទួលខុសត្រូវ: {hospitalInfo.personInCharge.firstName}  {hospitalInfo.personInCharge.lastName}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            តួនាទី: {hospitalInfo.personInCharge.position}  \r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            ទូរស័ព្ទ: {hospitalInfo.personInCharge.tel}  \r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer,LayersControl } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport ReactLeafletGoogleLayer from 'react-leaflet-google-layer';\r\nimport { showDataOnMap,showQuarantineInfoOnMap ,showHospitalInfoOnMap} from \"./util\";\r\nimport { FaMapMarkedAlt } from 'react-icons/fa';\r\nimport {useQuery} from '@apollo/client'\r\nimport {ALL_QUARANTINEINFO} from '../../graphql/quarantine'\r\nimport {ALL_HOSPIAL_INFO} from '../../graphql/hospital'\r\n\r\n\r\n// allHospitalInfos\r\nfunction Map({ district, casesType, center, zoom }) {\r\n  const [satellite, setSatellite] = React.useState(false);\r\n  const [quantineData, setQuarantineData] = React.useState([]);\r\n  const [hospitalData, setHospitalData] = React.useState([]);\r\n  \r\n\r\n  \r\n  const { data: dd } = useQuery(ALL_QUARANTINEINFO, {\r\n    onCompleted: ({ allQuarantineInfos }) => {\r\n      setQuarantineData(allQuarantineInfos)\r\n    },\r\n  });\r\n\r\n  const { data: dat } = useQuery(ALL_HOSPIAL_INFO, {\r\n    onCompleted: ({ allHospitalInfos }) => {\r\n      setHospitalData(allHospitalInfos)\r\n    },\r\n  });\r\n\r\n  \r\n  return (\r\n    <div className=\"map \">\r\n        <button className=\"layerSwitcher\"\r\n      onClick={() => setSatellite(!satellite)}\r\n     >\r\n      <FaMapMarkedAlt />\r\n\r\n     </button>\r\n      <LeafletMap center={center} zoom={zoom}>\r\n      \r\n \r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n         {showDataOnMap(district, casesType)}\r\n         {/* {showQuarantineInfoOnMap(quantineData)}\r\n         {showHospitalInfoOnMap( hospitalData)} */}\r\n        \r\n         {satellite ? (\r\n       <ReactLeafletGoogleLayer\r\n        googleMapsLoaderConf={{\r\n         KEY: 'AIzaSyCLpho9FZOn3PUIt7Pm8R6GPTIQQrJ1_1M',\r\n        }}\r\n        type={'satellite'}\r\n       />\r\n      ) : null}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import { gql } from \"@apollo/client\";\r\n\r\n\r\nexport const GET_ALL_PROVINCE = gql`\r\n  query getAllProvince($district: String) {\r\n    getAllProvince(district: $district) {\r\n      death\r\n      recovered\r\n      confirmedCase\r\n      deathToday\r\n      recoveredToday\r\n      confirmedCaseToday\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DATA_FOR_MAP = gql`\r\n  query getAllDistrictForMap {\r\n    getAllDistrictForMap {\r\n      death\r\n      confirmedCase\r\n      confirmedCaseToday\r\n      deathToday\r\n      recovered\r\n      recoveredToday\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DATA_FOR_GRAP = gql`\r\n     query getDataForGrap{\r\n        getDataForGrap{\r\n            cases{\r\n              x \r\n              y\r\n            }\r\n            deaths{\r\n              x \r\n              y\r\n            }\r\n            recovered{\r\n              x \r\n              y\r\n            }\r\n        }\r\n  }\r\n`;\r\n\r\nexport const FOR_BAR_GRAP = gql`\r\n  query getDataForBarGraphTotal{\r\n    getDataForBarGraphTotal{\r\n      confirm \r\n      recovered\r\n      deaths\r\n     \r\n    }\r\n  }\r\n` ","\r\nimport {GET_DATA_FOR_GRAP} from '../../graphql/dashboardAndReport'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\n\r\nfunction BarChart({ casesType }) {\r\n  const [data, setData] = useState({});\r\n  const {dat,refetch} = useQuery(GET_DATA_FOR_GRAP,{onCompleted:({getDataForGrap})=>{\r\n    setData(getDataForGrap);\r\n  }})\r\n\r\n\r\n\r\n\r\nconst dd= [\"dfds\",\"dfd\",\"hels\",\"dgd\"]\r\nconst va= [10,20,30,40];\r\n\r\nconst datas = {\r\n \r\n  labels: dd,\r\n  datasets: [\r\n    {\r\n      label: \"Data\",\r\n      data: va,\r\n      fill: false,\r\n      backgroundColor: \"yellow\",\r\n      borderColor: \"red\"\r\n    },\r\n  ]\r\n};\r\n  return (\r\n    <div style={{height:\"400px\"}}>\r\n        <Line\r\n        data={datas}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n        }}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;","export default __webpack_public_path__ + \"static/media/covid19.2861979f.png\";","export default __webpack_public_path__ + \"static/media/recover.5d6bc409.png\";","export default __webpack_public_path__ + \"static/media/death.e0bbc2c9.png\";","export default __webpack_public_path__ + \"static/media/curring.b38d166b.png\";","export default __webpack_public_path__ + \"static/media/direct.216dfd63.png\";","export default __webpack_public_path__ + \"static/media/close-area.6b62123e.png\";","export default __webpack_public_path__ + \"static/media/notdirect.a2fd079a.png\";","export default __webpack_public_path__ + \"static/media/open-area.70f8fc85.png\";","\r\nimport {GET_DATA_FOR_GRAP} from '../../graphql/dashboardAndReport'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n  const {dat,refetch} = useQuery(GET_DATA_FOR_GRAP,{onCompleted:({getDataForGrap})=>{\r\n    setData(getDataForGrap);\r\n  }})\r\n\r\nlet color = \"rgb(167, 11, 153)\";\r\nlet caseData=data.cases;\r\nswitch(casesType){\r\n  case \"deaths\": \r\n    color = \"rgb(222, 13, 45)\"\r\n    caseData = data.deaths\r\n    break;\r\n      case \"recovered\":\r\n        color = \"rgb(125, 215, 29)\"\r\n        caseData = data.recovered\r\n    break;\r\n  default:\r\n    color = \"rgb(167, 11, 153)\"\r\n    caseData = data.cases\r\n    break;\r\n}\r\n\r\n\r\nconst dd= caseData?.map(d=>d.x);\r\nconst va= caseData?.map(d=>d.y);\r\n\r\nconst datas = {\r\n  labels: dd,\r\n  datasets: [\r\n    {\r\n      label: casesType,\r\n      data: va,\r\n      fill: false,\r\n      backgroundColor: color,\r\n      borderColor: color\r\n    },\r\n  ]\r\n};\r\n  return (\r\n    <div>\r\n        <Line\r\n        data={datas}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import {FOR_BAR_GRAP} from '../../graphql/dashboardAndReport'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\n\r\nfunction BarGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  const {loading,refetch} = useQuery(FOR_BAR_GRAP,{onCompleted:({getDataForBarGraphTotal})=>{\r\n    console.log(getDataForBarGraphTotal,\"dgd\")\r\n    setData(getDataForBarGraphTotal);\r\n  }})\r\nlet color = \"rgb(167, 11, 153)\";\r\n\r\nconst a = [data?.confirm,data?.recovered,data?.deaths,data?.confirm - data?.recovered];\r\nconst b =[\"ករណីឆ្លង\",\"ករណីជាសះស្បើយ\",\"ករណីស្លាប់\",\"កំពុងសំរាកព្យាបាល\"];\r\n\r\n\r\nconst datas = {\r\n  labels: b,\r\n  datasets: [\r\n    {\r\n      label: \"សរុបទិន្នន័យ\",\r\n      data: a,\r\n      fill: false,\r\n      backgroundColor:[\"purple\",\"green\",\"red\",\"yellow\"],\r\n      borderColor: color\r\n    },\r\n  ]\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Bar\r\n        data={datas}\r\n        options= {\r\n          {\r\n          scales: {\r\n              yAxes: [{\r\n                  ticks: {\r\n                      beginAtZero: true\r\n                  }\r\n              }]\r\n          }\r\n        }\r\n      }\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarGraph;","import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nfunction LineChartTesting() {\r\n    // <block:setup:1>\r\nconst labels = [\"Janurary\",\"February\",\"mar\"]\r\nconst data = {\r\n  labels: labels,\r\n  datasets: [{\r\n    label: 'My First Dataset',\r\n    data: [65, 59, 80],\r\n    fill: false,\r\n    borderColor: 'rgb(75, 192, 192)',\r\n    tension: 0.3\r\n  }]\r\n};\r\n\r\nconst options={\r\n    maintainAspectRatio: false,\r\n    tooltips:{\r\n      mode:'index',\r\n      callbacks:{\r\n        label:function(toolTipItem){\r\n          return (\"Revenue: $\"+toolTipItem.value)\r\n        }\r\n      }\r\n    },\r\n    scales:{\r\n        height:200,\r\n      xAxes:[\r\n        {\r\n          gridLines:{\r\n          display: false\r\n        },\r\n        //   scaleLabel:{\r\n        //     labelString:'Months',\r\n        //     display:true,\r\n        //     fontColor:'blue',\r\n        //     fontSize:20\r\n        //   },\r\n          ticks:{\r\n            fontColor:'green'\r\n          }\r\n        }\r\n      ],\r\n      yAxes:[\r\n      {\r\n        grid:{\r\n          display: false\r\n         \r\n        },\r\n        scaleLabel:{\r\n            labelString:'Revenue',\r\n            display:true,\r\n            fontColor:'blue',\r\n            fontSize:20,\r\n          },\r\n        ticks:{\r\n          beginAtZero:true,\r\n          fontColor:'green',\r\n          \r\n        }\r\n      }\r\n      ]\r\n    }\r\n  \r\n}\r\nreturn <div>\r\n<Line data={data} options={options} />\r\n</div>\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default LineChartTesting\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./CovidScreen.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  districForMap\r\n} from \"../context/headerContext\";\r\nimport { ListSelect } from \"../static/own-comp\";\r\nimport {\r\n  convertToCommune,\r\n  convertToDistrict,\r\n  convertToVillage,\r\n} from \"../function/fn\";\r\nimport InfoBox from \"../component/covideComponents/InfoBox\";\r\n\r\nimport Table from \"../component/covideComponents/Table\";\r\nimport { sortData, prettyPrintStat } from \"../component/covideComponents/util\";\r\nimport numeral from \"numeral\";\r\nimport Map from \"../component/covideComponents/Map\";\r\nimport { joinArray } from \"../component/covideComponents/util\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Form, Divider } from \"antd\";\r\nimport {\r\n  GET_ALL_PROVINCE,\r\n  GET_DATA_FOR_MAP,\r\n} from \"../graphql/dashboardAndReport\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport BarChart from \"../component/covideComponents/BarChart\";\r\nimport ImageCovid from '../asset/covid19.png'\r\nimport ImageRecover from '../asset/recover.png'\r\nimport ImageDeath from '../asset/death.png'\r\nimport ImageCure from '../asset/curring.png'\r\nimport ImageDirect from '../asset/direct.png'\r\nimport ImageClose from '../asset/close-area.png'\r\nimport ImageNotDirect from '../asset/notdirect.png'\r\nimport ImageOpen from '../asset/open-area.png'\r\nimport LineGraph from \"../component/covideComponents/LineGraph\";\r\nimport BarGraph from '../component/covideComponents/BarGraph'\r\nimport LineChartTesting from \"../component/covideComponents/LineChartTesting\";\r\n\r\nconst MapScreen = () => {\r\n  const districtLatLong = [\r\n    {\r\n      district: \"ក្រឡាញ់\",\r\n      lat: 13.60472222544493,\r\n      long: 103.45245485053685,\r\n    },\r\n    {\r\n      district: \"វ៉ារិន\",\r\n      lat: 13.867238663711532,\r\n      long: 103.87715707241854,\r\n    },\r\n    {\r\n      district: \"ស្រិស្នំ\",\r\n      lat: 13.852238272312373,\r\n      long: 103.53639730433542,\r\n    },\r\n    {\r\n      district: \"អង្គរជុំ\",\r\n      lat: 13.713723851088394,\r\n      long: 103.67219336284299,\r\n    },\r\n    {\r\n      district: \"បន្ទាយស្រី\",\r\n      lat: 13.605041870228655,\r\n      long: 103.97859822744759,\r\n    },\r\n    {\r\n      district: \"សូទ្រនិគម\",\r\n      lat: 13.414442053292065,\r\n      long: 104.10460200711728,\r\n    },\r\n    {\r\n      district: \"បាគង\",\r\n      lat: 13.303005227138778,\r\n      long: 103.9796463766434,\r\n    },\r\n    {\r\n      district: \"ពួក\",\r\n      lat: 13.440442720250852,\r\n      long: 103.71973510206098,\r\n    },\r\n    {\r\n      district: \"ជីក្រែង\",\r\n      lat: 13.232399982258997,\r\n      long: 104.33684532302983,\r\n    },\r\n    {\r\n      district: \"ស្វាយលើ\",\r\n      lat: 13.698615549661712,\r\n      long: 104.21744370698126,\r\n    },\r\n    {\r\n      district: \"អង្គរធំ\",\r\n      lat: 13.483410469370508,\r\n      long: 103.87412317588966,\r\n    },\r\n    {\r\n      district: \"សៀមរាប\",\r\n      lat: 13.364307627357189,\r\n      long: 103.85798154316932,\r\n    },\r\n    {\r\n      district: \"ក្រៅសៀមរាប\",\r\n      lat: 12.67868906722332,\r\n      long: 105.08204096969567,\r\n    },\r\n  ];\r\n\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 13.3633, lng: 103.8564 });\r\n  const [mapZoom, setMapZoom] = useState(9);\r\n  const [districtInfo, setDistrictInfo] = useState([]);\r\n\r\n  //update the data\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [districtDatas, setDistrictDatas] = useState({});\r\n  let [form] = Form.useForm();\r\n\r\n  const { loading, error, refetch } = useQuery(GET_ALL_PROVINCE, {\r\n    variables: {\r\n      district: district,\r\n    },\r\n    onCompleted: ({ getAllProvince }) => {\r\n      setDistrictDatas(getAllProvince);\r\n    },\r\n  });\r\n\r\n  const { data: dd } = useQuery(GET_DATA_FOR_MAP, {\r\n    onCompleted: ({ getAllDistrictForMap }) => {\r\n      const mapDatas = joinArray(getAllDistrictForMap, districtLatLong);\r\n      setDistrictInfo(mapDatas);\r\n      let sortedData = sortData(mapDatas);\r\n      setTableData(sortedData);\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [district]);\r\n\r\n  const setToDistrictFn = (e) => {\r\n    form.setFieldsValue({\r\n      district: e,\r\n      commune: null,\r\n      village: null,\r\n    });\r\n    setDistrict(e);\r\n    // setCommune(\"\")\r\n  };\r\n\r\n\r\n  function lower(obj) {\r\n    for (var prop in obj) {\r\n      if (typeof obj[prop] === \"string\") {\r\n        obj[prop] = obj[prop].toLowerCase();\r\n      }\r\n      if (typeof obj[prop] === \"object\") {\r\n        lower(obj[prop]);\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  countries.forEach((c) => {\r\n    lower(c);\r\n  });\r\n\r\n  return <>\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <FormControl className=\"app__dropdown\">\r\n            <Form.Item\r\n              style={{marginBottom:0}}\r\n              name=\"district\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <ListSelect\r\n                type={0}\r\n                data={convertToDistrict(districForMap)}\r\n                title=\"ស្រុក/ខណ្ឌ\"\r\n                setValue={setToDistrictFn}\r\n              />\r\n            </Form.Item>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"app__stats\">\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"អ្នកវិជ្ជមាន\"\r\n            isRed\r\n            active={casesType === \"cases\"}\r\n            cases={districtDatas.confirmedCaseToday}\r\n            total={numeral(districtDatas.confirmedCase).format(\"0\")}\r\n            ImageShow={ImageCovid}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"អ្នកជាសះស្បើយ\"\r\n            active={casesType === \"recovered\"}\r\n            cases={districtDatas.recoveredToday}\r\n            total={numeral(districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageRecover}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"អ្នកស្លាប់\"\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={districtDatas.deathToday}\r\n            total={numeral(districtDatas.death).format(\"0\")}\r\n            ImageShow={ImageDeath}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"active\")}\r\n            title=\"អ្នកកំពុងសម្រាកព្យាបាល\"\r\n            isRed\r\n            // active={casesType === \"deaths\"}\r\n            cases={districtDatas.confirmedCaseToday - districtDatas.recoveredToday}\r\n            // total={numeral(districtDatas.death).format(\"0\")}\r\n            total={numeral(districtDatas.confirmedCase - districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageCure}\r\n          />\r\n\r\n\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"អ្នកប៉ះពាល់ផ្ទាល់\"\r\n            isRed\r\n            // active={casesType === \"cases\"}\r\n            cases={districtDatas.confirmedCaseToday}\r\n            total={numeral(districtDatas.confirmedCase).format(\"0\")}\r\n            ImageShow={ImageDirect}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"អ្នកប៉ះពាល់ប្រយោល\"\r\n            // active={casesType === \"recovered\"}\r\n            cases={districtDatas.recoveredToday}\r\n            total={numeral(districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageNotDirect}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"ទីតាំងបិទ\"\r\n            isRed\r\n            // active={casesType === \"deaths\"}\r\n            cases={districtDatas.deathToday}\r\n            total={numeral(districtDatas.death).format(\"0\")}\r\n            ImageShow={ImageClose}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"active\")}\r\n            title=\"ទីតាំងបើក\"\r\n            isRed\r\n            // active={casesType === \"deaths\"}\r\n            cases={districtDatas.confirmedCaseToday - districtDatas.recoveredToday}\r\n            // total={numeral(districtDatas.death).format(\"0\")}\r\n            total={numeral(districtDatas.confirmedCase - districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageOpen}\r\n          />\r\n        </div>\r\n        <Map\r\n          district={districtInfo}\r\n          casesType={casesType}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n        />\r\n      </div>\r\n      <div className=\"app__right\">\r\n        <Card className=\"first-card\" style={{ marginTop: \"55px\" }}>\r\n          <CardContent >\r\n            <div className=\"app__information\">\r\n              <h3 className=\"covid_table\">អ្នកវិជ្ជមានតាមក្រុង/ស្រុក</h3>\r\n              <Divider />\r\n              <Table district={tableData} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"sec-card\" style={{ marginTop: \"10px\" }}>\r\n          <CardContent>\r\n              <h3>ទិន្នន័យសរុប</h3>\r\n            <BarGraph />\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"third-card\" style={{ marginTop: \"10px\" }}>\r\n          <CardContent>\r\n            {casesType === \"recovered\" ? (\r\n              <h3>អ្នកជាសះស្បើយ ទូទាំងខេត្ត</h3>\r\n            ) : null}\r\n            {casesType === \"deaths\" ? <h3>អ្នកស្លាប ទូទាំងខេត្ត</h3> : null}\r\n            {casesType === \"cases\" ? <h3>អ្នកវិជ្ជមាន ទូទាំងខេត្ត</h3> : null}\r\n            <LineGraph casesType={casesType} />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n    {/* graph three datasets  */}\r\n\r\n    <Divider />\r\n    <div className=\"graph \">\r\n      <h2 className=\"covid_table\">ក្រាបបង្ហាញស្ថិតិប្រចាំថ្ងៃ</h2>\r\n      <BarChart casesType={casesType} />\r\n      {/* <BarGraph/> */}\r\n      {/* <LineChartTesting/> */}\r\n\r\n    </div>\r\n  </>;\r\n};\r\n\r\nexport default MapScreen;\r\n","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                paddingTop: 20\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                <span className=\"HeaderFont\">គណៈកម្មការអន្តរក្រសួង<br />\r\n                                    ដើម្បីប្រយុទ្ធនឹងជំងឺកូវីដ១៩ (COVID-19)</span><br /><br />\r\n\r\n                                អនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គល<br />\r\n                                សង្ស័យថាមានផ្ទុកជំងឺកូវីដ១៩ (COVID-19)<br />\r\n\r\n                                ក្រុមការងារស្រាវជ្រាវតាមដានបុគ្គលសង្ស័យ<br />\r\n                                ថាមានផ្ទុកជំងឺកូវីដ១៩ ខេត្ត ...................<br />\r\n                                <span className=\"HeaderFont1\"\r\n                                    style={{\r\n                                        fontSize: \"300pt !important\"\r\n                                    }}\r\n                                >3</span><br />\r\n\r\n                                លេខ៖ ......................<br />\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                float: 'right'\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                <span className=\"HeaderFont\">ព្រះរាជាណាចក្រកម្ពុជា<br />\r\n                                    ជាតិ សាសនា ព្រះមហាក្សត្រ\r\n\r\n                                </span><br />\r\n\r\n                                <span className=\"HeaderFont1\"\r\n                                    style={{\r\n                                        fontSize: \"300pt !important\"\r\n                                    }}\r\n                                >3</span>\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\"\r\n                            }}\r\n                        >\r\n                            <p className=\"HeaderFont\">\r\n                                គោរពជូន<br />\r\n                                ឯកឧត្តម ឧត្តមសេនីយ៍ឯក ឌី វិជ្ជា អគ្គស្នងការរង<br />\r\n                                និងជាប្រធានអនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គលសង្ស័យ<br />\r\n                                ថាមានផ្ទុកជំងឺកូវីដ១៩ (Covid-19)\r\n\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                paddingTop: 10\r\n                            }}\r\n                        >\r\n                            <table>\r\n                                <tr>\r\n                                    <td width=\"80\" style={{ verticalAlign: \"top\" }}>\r\n                                        <span className=\"HeaderFont\">\r\n                                            កម្មវត្ថុ៖\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p>\r\n                                            របាយការណ៍ស្ដីពី លទ្ធផលការងារប្រចាំថ្ងៃទី០១ ខែមេសា ឆ្នាំ២០២១ (គិតចាប់ពី ម៉ោង០៧:០០នាទីព្រឹក  ថ្ងៃទី០១ មេសា ឆ្នាំ២០២១ ដល់ ម៉ោង០៧:០០នាទីព្រឹក ថ្ងៃទី០២ មេសា ឆ្នាំ២០២១)។\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                paddingTop: 10\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                &emsp;តមតាមកម្មវត្ថុខាងលើ ខ្ញុំបាទសូមគោរពរាយការណ៍ជូន <b>ឯកឧត្តម ឧត្តមសេនីយ៍ឯក ឌី វិជ្ជា\r\n                                    អគ្គស្នងការរង និងជា ប្រធានអនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គលសង្ស័យថាមានផ្ទុក\r\n                                    ជំងឺកូវីដ១៩ (Covid-19)</b> មេត្តាជ្រាប អំពីលទ្ធផលការងារប្រចាំថ្ងៃមានដូចខាងក្រោម៖\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                        // style={{\r\n                        //     paddingTop: 10\r\n                        // }}\r\n                        >\r\n                            <ul>\r\n                                <li>\r\n                                    <span className=\"HeaderFont\">I. សភាពការណ៍ប្រចាំថ្ងៃ</span>\r\n                                </li>\r\n                                <ul>\r\n                                    <li>\r\n                                        <b>ក.ចំនួនអ្នកវិជ្ជមាន៖</b> អ្នកដែលមានផ្ទុកជំងឺកូវីដ១៩ ពាក់ព័ន្ធនឹងព្រឹត្តិការណ៍ ២០កុម្ភៈ សរុប ៦៣នាក់(ស្រី២៨នាក់) កើនថ្មី ០២នាក់ (ស្រី០១នាក់)\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            ស្រុក............\t៖........នាក់ \tស្រី........នាក់\t(ថ្មី.........នាក់ ស្រី.......នាក់)\r\n                                        </li>\r\n                                        <li>\r\n                                            ស្រុក............\t៖........នាក់ \tស្រី........នាក់\t(ថ្មី.........នាក់ ស្រី.......នាក់)\r\n                                        </li>\r\n                                        <li>\r\n                                            ស្រុក............\t៖........នាក់ \tស្រី........នាក់\t(ថ្មី.........នាក់ ស្រី.......នាក់)\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>\r\n                                        <b>ខ.អ្នកជាសះស្បើយ៖</b> ..........នាក់ (ស្រី.........នាក់) ថ្មី.........នាក់ (ស្រី........នាក់)\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>គ. អ្នកស្លាប់ចំនួន៖</b> ..........នាក់ (ស្រី.........នាក់) ថ្មី.........នាក់ (ស្រី........នាក់)\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>ឃ. អ្នកដែលផ្ទុកជំងឺកូវីដ១៩ មិនសហការ៖ </b> ..........នាក់ (ស្រី.........នាក់) ថ្មី.........នាក់ (ស្រី........នាក់)\r\n                                    </li>\r\n                                </ul>\r\n                                <li>\r\n                                    <span className=\"HeaderFont\">II. ទីតាំងពាក់ព័ន្ធ</span>\r\n                                </li>\r\n                                <ul style={{ listStyleType: \"disc\" }}>\r\n                                    <li>\r\n                                        ទីតាំងដែលរកឃើញមានអ្នកពាក់ព័ន្ធសរុប\t៖..............ទីតាំង\t(ថ្មី ..........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងមិនបានបិទការចេញចូល\t៖..............ទីតាំង\t(ថ្មី ..........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងបិទការចេញចូលចំនួន\t៖..............ទីតាំង\t(ថ្មី...........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងបើកការចេញចូលឡើងវិញចំនួន\t៖..............ទីតាំង\t(ថ្មី...........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងមិនសហការ\t៖..............ទីតាំង \t(ថ្មី...........ទីតាំង)\r\n                                    </li>\r\n                                </ul>\r\n                                <li>\r\n                                    <span className=\"HeaderFont\">III. ការសម្ភាសន៍</span>\r\n                                </li>\r\n                                <ul>\r\n                                    <li>\r\n                                        <b>ក. លទ្ធផលសម្ភាសន៍អ្នកជំងឺសរុបចំនួន .....ករណី</b>\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            ទំនាក់ទំនងអ្នកជំងឺបានចំនួន ........ករណី\r\n                                        </li>\r\n                                        <li>\r\n                                            ជនជាតិខ្មែរចំនួន ......នាក់ ស្រី.....នាក់ (ករណីថ្មី .....នាក់)\r\n                                        </li>\r\n                                        <li>\r\n                                            ជនជាតិចិនចំនួន ......នាក់ ស្រី ....នាក់ (ករណីថ្មី .....នាក់)\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>\r\n                                        <b>ខ.\tលទ្ធផលសម្ភាសន៍អ្នកប៉ះពាល់</b>\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            ធ្វើការសម្ភាសន៍ និងណែនាំអ្នកប៉ះពាល់ចំនួន ......នាក់ ស្រី.......នាក់\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>\r\n                                        <b>គ.\tទីតាំងប៉ះពាល់</b>\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            រកឃើញទីតាំងប៉ះពាល់សរុប ......តាំង\r\n                                        </li>\r\n                                        <li>\r\n                                            អាសយដ្ឋានច្បាស់លាស់ចំនួន .......ទីតាំង\r\n                                        </li>\r\n                                    </ul>\r\n                                </ul>\r\n\r\n                                <li style={{ marginTop: 100 }}>\r\n                                    <span className=\"HeaderFont\">IV. ក្រុមគ្រូពេទ្យ MOH និង RRT</span>\r\n                                </li>\r\n                                <ul style={{ listStyleType: \"disc\" }}>\r\n                                    <li>\r\n                                        ចុះយកសំណាក តាមទីតាំងចំនួន ..........ទីតាំង\r\n                                    </li>\r\n                                    <li>\r\n                                        យកសំណាកសរុបចំនួន.........នាក់ ស្រី..........នាក់\r\n                                    </li>\r\n                                </ul>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                paddingTop: 10\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                &emsp;អាស្រ័យដូចបានគោរពរាយការណ៍ជូនខាងលើ សូម <b>ឯកឧត្តម ឧត្តមសេនីយ៍ឯក ឌី វិជ្ជា\r\n                                    អគ្គស្នងការរង និងជាប្រធានអនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គលសង្ស័យថាមានផ្ទុកជំងឺកូវីដ១៩\r\n                                    (Covid-19)</b> មេត្តាជ្រាបជារបាយការណ៍ដ៏ខ្ពង់ខ្ពស់។\r\n                            </p>\r\n                            <p>\r\n                                &emsp;សូម <b>ឯកឧត្តម ឧត្តមសេនីយ៍ឯក</b> មេត្តាទទួលនូវការគោរពដ៏ខ្ពង់ខ្ពស់អំពីខ្ញុំ ។\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                float: 'right'\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            ថ្ងៃ... ខែ...... ឆ្នាំជូត ទោស័ក ព.ស.២៥៦៤<br/>\r\n                            រាជធានីភ្នំពេញ, ថ្ងៃទី... ខែ..... ឆ្នាំ២០២១<br/>\r\n                            <b>អ្នកធ្វើរបាយការណ៍</b>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport1 extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <table border=\"1\" className=\"tbl-Report1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th rowSpan={2}></th>\r\n                            <th colSpan={2}>\r\n                                ការយកសំណាក\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ការសម្ភាសន៍\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                រកឃើញការប៉ះពាល់\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ការបញ្ចូលអ្នកជំងឺ\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                លើកទិសដៅយកសំណាក\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ចំនួនសំណាក់ម្សិលមិញ</th>\r\n                            <th>លទ្ធផលវិជ្ជមាន (Lab Form ទទួលបាន)</th>\r\n                            <th>សម្ភាសន៍បាន</th>\r\n                            <th>ទំនាក់ទំនងមិនបាន/ផ្សេងៗ</th>\r\n                            <th>អ្នកប៉ះពាល់</th>\r\n                            <th>ទីតាំងប៉ះពាល់</th>\r\n                            <th>ទៅមណ្ឌលព្យាបាល</th>\r\n                            <th>អនុញ្ញាតនៅផ្ទះ</th>\r\n                            <th>គោលដៅយកសំណាក</th>\r\n                            <th>សម្រេចបាន(ស្មើចំនួន%)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>ភ្នំពេញ</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខេត្ត</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        </tbody>\r\n                </table><br/>\r\n\r\n                <table border=\"1\" className=\"tbl-Report1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th rowSpan={2}></th>\r\n                            <th colSpan={2}>\r\n                                ស៊ើបបញ្ជាក់ទីតាំង\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                វាយតម្លៃទីតាំង\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ការងារ ១១៥\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ទាញទិន្នន័យលេខទូរស័ព្ទ\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ស្រាវជ្រាវ-អនុវត្តនីតិវិធី\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>គោលដៅបញ្ជាក់</th>\r\n                            <th>រកឃើញ</th>\r\n                            <th>បិទខ្ទប់</th>\r\n                            <th>បញ្ចប់ការបិទខ្ទប់</th>\r\n                            <th>ទទួលការហៅចូល</th>\r\n                            <th>ហៅចេញ(តាមដានអ្នកប៉ះពាល់)</th>\r\n                            <th>Lat-Long</th>\r\n                            <th>Scan QR</th>\r\n                            <th>បាត់ទំនាក់ទំនង</th>\r\n                            <th>ល្មើសវិធានកាលសុខាភិបាល</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>ភ្នំពេញ</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខេត្ត</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport2 extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <table border=\"1\" className=\"tbl-Report2\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th colSpan={2}></th>\r\n                        <th>២០កុម្ភៈ ៖ ១៧៧៨ (ស្រី ៩៧៩)</th>\r\n                        <th>នាំចូល៖ ១១៤ (ស្រី ៥៦)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">សញ្ជាតិ</td>\r\n                            <td>ខ្មែរ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខ្មែរ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">រាជធានី</td>\r\n                            <td>ភ្នំពេញ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខ្មែរ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                paddingTop: 20\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                <span className=\"HeaderFont\">អនុគណៈកម្មការឆ្លើយតបបន្ទាន់ និងស្រាវជ្រាវ<br />\r\n                                រកបុគ្គលផ្ទុកមេរោគកូវីដ-១៩</span><br />\r\n                                \r\n                                <span className=\"HeaderFont1\"\r\n                                    style={{\r\n                                        fontSize: \"300pt !important\"\r\n                                    }}\r\n                                >3</span><br />\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                float: 'right'\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                <span className=\"HeaderFont\">ព្រះរាជាណាចក្រកម្ពុជា<br />\r\n                                    ជាតិ សាសនា ព្រះមហាក្សត្រ\r\n\r\n                                </span><br />\r\n\r\n                                <span className=\"HeaderFont1\"\r\n                                    style={{\r\n                                        fontSize: \"300pt !important\"\r\n                                    }}\r\n                                >3</span>\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                        style={{\r\n                            textAlign:\"center\",\r\n                            marginBottom: 50,\r\n                        }}\r\n                    >\r\n                        <p className=\"HeaderFont\">\r\n                            ប្រវត្តិធ្វើដំណើរអ្នកជំងឺ<br />\r\n                            លេខកូដអ្នកជំងឺ៖\r\n                        </p>\r\n                        <div>\r\n                            <img \r\n                                src=\"https://cdn.psychologytoday.com/sites/default/files/styles/article-inline-half-caption/public/field_blog_entry_images/2018-09/shutterstock_648907024.jpg?itok=0hb44OrI\"\r\n                                width=\"200\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <ul>\r\n                            <li>ថ្ងៃខែឆ្នាំម៉ោងទទួលទម្រង់មន្ទីរពិសោធន៍៖</li>\r\n                            <li>លេខកូដមន្រ្តីកាន់ករណី៖</li>\r\n                            <li>កាលបរិច្ឆេទសម្ភាសន៍៖</li>\r\n                            <li>ធ្វើបច្ចុប្បន្នភាព៖</li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <p>លេខកូដលើទម្រង់៖</p>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <ul>\r\n                            <li className=\"HeaderFont\">១.ព័ត៌មានផ្ទាល់ខ្លួនអ្នកជំងឺ</li>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>-\tឈ្មោះ</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tភេទ</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tជនជាតិ</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tថ្ងៃខែឆ្នាំកំណើត</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tមុខរបរ</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tអាសយដ្ឋានអចិន្រ្តៃយ៍</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tបណ្តាញសង្គម</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tអត្តសញ្ញាណប័ណ្ណ/លិខិតឆ្លងដែន</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tលេខទូរសព្ទ(អាចលើសពី១ខ្សែ)</td>\r\n                                    <td>៖</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>-\tចាក់វ៉ាក់សាំង</td>\r\n                                    <td>៖</td>\r\n                                    <td>\r\n                                        មិនទាន់បានចាក់<br />\r\n                                        បានចាក់ ☐ (ទី១ ថ្ងៃទី       ខែ       ឆ្នាំ២០២១, ទី២ថ្ងៃទី     ខែ     ឆ្នាំ២០២១)\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </ul>    \r\n                            \r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <table border=\"1\" className=\"tbl-Report1\">\r\n                            <tr>\r\n                                <th>ល.រ</th>\r\n                                <th>ឈ្មោះ</th>\r\n                                <th>ភេទ</th>\r\n                                <th>អាយុ</th>\r\n                                <th>លេខទំនាក់ទំនង</th>\r\n                                <th>ថ្ងៃប៉ះពាល់ចុងក្រោយ</th>\r\n                                <th>កម្រិតហានិភ័យ</th>\r\n                                <th>អាសយដ្ឋាន</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Button, Modal } from 'antd';\r\nimport React, { useRef, useState } from 'react'\r\nimport ReactToPrint from 'react-to-print';\r\nimport DatePickerTwo from '../component/datepickertwo/datePickerTwo';\r\nimport PrintReport from '../component/print/report';\r\nimport PrintReport1 from '../component/print/report1';\r\nimport PrintReport2 from '../component/print/report2';\r\nimport PrintReport3 from '../component/print/reportPersonalInfo';\r\n\r\nexport default function Report() {\r\n    const componentRef = useRef()\r\n    const componentRef1 = useRef()\r\n    const componentRef2 = useRef()\r\n    const componentRef3 = useRef()\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [openModal1, setOpenModal1] = useState(false)\r\n    const [openModal2, setOpenModal2] = useState(false)\r\n    const [openModal3, setOpenModal3] = useState(false)\r\n    const [ranges, setRanges] = useState({\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button\r\n                    onClick={() => setOpenModal(true)}\r\n                >\r\n                    Print\r\n                </Button><Button\r\n                    onClick={() => setOpenModal1(true)}\r\n                >\r\n                    Print\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setOpenModal2(true)}\r\n                >\r\n                    Print\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setOpenModal3(true)}\r\n                >\r\n                    Print\r\n                </Button><br />\r\n                <DatePickerTwo ranges={ranges} setRange={setRanges} />\r\n            </div>\r\n            <Modal\r\n                width={1000}\r\n                visible={openModal}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal(false)}\r\n            >\r\n                <PrintReport ref={componentRef} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={1100}\r\n                visible={openModal1}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef1.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal1(false)}\r\n            >\r\n                <PrintReport1 ref={componentRef1} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={1100}\r\n                visible={openModal2}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef2.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal2(false)}\r\n            >\r\n                <PrintReport2 ref={componentRef2} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={1100}\r\n                visible={openModal3}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef3.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal3(false)}\r\n            >\r\n                <PrintReport3 ref={componentRef3} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const locationCol = ({ handleDelete, handleEdit, limit, page }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                {console.log(page)}\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ទីតាំង',\r\n            dataIndex: 'affectedLocationName',\r\n            key: 'affectedLocationName',\r\n            width: 150,\r\n        },\r\n     \r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                    {record.province && record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ករណី',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.case?.caseName}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទបិទ',\r\n            dataIndex: 'closeAt',\r\n            key: 'closeAt',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.closeAt === null? \"មិនទាន់មានសកម្មភាព\" : moment(record.closeAt).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទបើក',\r\n            dataIndex: 'openAt',\r\n            key: 'openAt',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.openAt === null? \"មិនទាន់មានសកម្មភាព\" : moment(record.openAt).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Link className=\"link\" to={\"/subSpecifylocation/\" + record.id}><EditOutlined /></Link> */}\r\n                    <span className=\"link\" onClick={() => handleEdit(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage, convertEditData } from '../../../function/fn'\r\nimport { UPDATE_AFFECTEDLOCATION_BY_ID } from '../../../graphql/location'\r\n// import { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\n// import { GET_ALL_PERSONINFO_NO_LIMIT } from '../../../graphql/people'\r\nimport { useMutation } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function EditLocation({ open, setOpen, setRefetch, dataEdit }) {\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [updateAffectedLocation, { loading: createLoading }] = useMutation(UPDATE_AFFECTEDLOCATION_BY_ID, {\r\n        onCompleted: ({ updateAffectedLocation }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n\r\n\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        if (dataEdit !== undefined) {\r\n            // form.setFieldsValue(dataEdit)\r\n            setProvince(dataEdit?.province)\r\n            setDistrict(dataEdit?.district)\r\n            setCommune(dataEdit?.commune)\r\n        }\r\n\r\n    }, [dataEdit])\r\n\r\n\r\n    // const { data, loading } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n    //     onCompleted: ({ allCases }) => {\r\n    //         console.log(allCases)\r\n    //         setAllCases(allCases)\r\n    //     }\r\n    // })\r\n\r\n    // const { data: people } = useQuery(GET_ALL_PERSONINFO_NO_LIMIT, {\r\n    //     onCompleted: ({ allPersonalInfos }) => {\r\n    //         // console.log(allPersonalInfos)\r\n    //         setPeopleData(allPersonalInfos)\r\n    //     }\r\n    // })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n        updateAffectedLocation({\r\n            variables: {\r\n                id: dataEdit.id,\r\n                affectedLocationName: values.affectedLocationName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                openAt: values.openAt === undefined ? null : moment(values.openAt),\r\n                closeAt: values.closeAt === undefined ? null : moment(values.closeAt),\r\n                other: values.other,\r\n                long: parseFloat(values.long),\r\n                lat: parseFloat(values.lat),\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    // const setToCaseFn = (e) => {\r\n    //     form.setFieldsValue({\r\n    //         case: e\r\n    //     });\r\n    // };\r\n\r\n    // const setToPeopleFn = (e) => {\r\n    //     form.setFieldsValue({\r\n    //         personalInfo: e\r\n    //     });\r\n    // };\r\n\r\n    // console.log(convertEditData(dataEdit))\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលទីតាំង\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                fields={convertEditData(dataEdit)}\r\n            // fields={[\r\n            //     {\r\n            //         name: \"closeAt\",\r\n            //         value: moment()\r\n            //     }\r\n            // ]}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"affectedLocationName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {/* <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                        <Option value={true}>វិជ្ជមាន</Option>\r\n                        <Option value={false}>អវិជ្ជមាន</Option>\r\n                    </Select> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"closeAt\"\r\n                        >\r\n                            <DatePicker\r\n                                placeholder=\"កាលបរិច្ឆេទបិទ\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"openAt\"\r\n                        >\r\n                            <DatePicker\r\n                                placeholder=\"កាលបរិច្ឆេទបើក\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { locationCol } from '../component/location/tableColumn/locationColumn'\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_CASES, DELETE_CASE_BY_ID } from '../graphql/case'\r\nimport { GET_AFFECTED_LOCATION_PAGINATION } from '../graphql/location';\r\nimport AddLocation from '../component/location/modal/addLocation';\r\nimport EditLocation from '../component/location/modal/editLocation';\r\nimport { DELETE_AFFECTEDLOCATION_BY_ID } from '../graphql/location';\r\n\r\nconst { Option } = Select\r\n\r\nexport default function Location() {\r\n    //const {caseData, caseDataDispatch} = useContext(CaseController)\r\n    // const [locationData, setLocationData] = useState([])\r\n    const [dataEdit, setDataEdit] = useState({})\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(20)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, loading, error, refetch } = useQuery(GET_AFFECTED_LOCATION_PAGINATION, {\r\n        variables: {\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n        },\r\n        // onCompleted: ({ getAffectedLocationWithPagination }) => {\r\n        //     console.log(getAffectedLocationWithPagination)\r\n        //     setLocationData(getAffectedLocationWithPagination)\r\n\r\n        // },\r\n        fetchPolicy:'network-only'\r\n    })\r\n\r\n    const getAffectedLocationWithPagination = data?.getAffectedLocationWithPagination\r\n    \r\n    const [deleteAffectedLocation, { loading: deleteLoading }] = useMutation(DELETE_AFFECTEDLOCATION_BY_ID, {\r\n        onCompleted: ({deleteAffectedLocation}) => {\r\n            \r\n            if(deleteAffectedLocation.success === true){\r\n                refetch()\r\n                message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n            }else{\r\n                message.error(\"បរាជ័យ\")\r\n            }\r\n            \r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    const callRefetch = ()=>{\r\n        console.log(\"ref\")\r\n        \r\n    }\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //caseDataDispatch({type: \"DELETE_CASE\", payload: e})\r\n        deleteAffectedLocation({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        setOpenEdit(true)\r\n        setDataEdit(e)\r\n        // console.log(e)\r\n    }\r\n\r\n    \r\n    return (\r\n        <Row>\r\n            <AddLocation open={openAdd} setRefetch={refetch} setOpen={setOpenAdd} />\r\n            <EditLocation open={openEdit} setOpen={setOpenEdit} dataEdit={dataEdit} setRefetch={refetch} />\r\n            <Col\r\n                xs={8}\r\n                md={13}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលទីតាំង\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={12}\r\n                md={4}\r\n            >\r\n                <Select style={{ width: \"100%\" }} placeholder=\"ទីតាំង\">\r\n                    <Option value={true}>ទីតាំងដែលបានបិទ</Option>\r\n                    <Option value={false}>ទីតាំងដែលបានបើក</Option>\r\n                </Select>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 6, offset: 1 }}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={locationCol({ handleDelete, handleEdit, limit, page })}\r\n                    dataSource={getAffectedLocationWithPagination?.affectedLocations}\r\n                    rowKey={record => record.id}\r\n                    // size=\"small\"\r\n                    pagination={{\r\n                        total: getAffectedLocationWithPagination?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        current: getAffectedLocationWithPagination?.paginator?.currentPage,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CaseController } from '../../context/caseContext'\r\nimport moment from 'moment'\r\n// import { subCaseCol } from './tableColumn/subCaseColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\n// import EditCase from './modal/editCase'\r\n// import AddSubCase from './modal/addSubCase'\r\n// import EditSubCase from './modal/editSubCase'\r\nimport { getRelated } from '../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case'\r\nimport { GET_CASE_BY_ID } from '../../graphql/case'\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubLocation() {\r\n    // const { subCaseData, subCaseDataDispatch } = useContext(CaseController)\r\n\r\n    let { id } = useParams();\r\n\r\n    const [headerData, setHeaderData] = useState()\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [caseData, setCaseData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n            console.log(getPersonalInfoByCaseWithPagination)\r\n            setSubCaseData(getPersonalInfoByCaseWithPagination)\r\n        }\r\n    })\r\n\r\n    const { data: dataCase } = useQuery(GET_CASE_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getCaseById }) => {\r\n            console.log(getCaseById)\r\n            setCaseData(getCaseById)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        // subCaseDataDispatch({type: \"DELETE_SUB_CASE\", payload: e})\r\n    }\r\n\r\n    const handleEditSubCase = (e) => {\r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            {/* <EditCase open={openEdit} setOpen={setOpenEdit} data={caseData} caseId={id} />\r\n            <AddSubCase open={openAddSub} setOpen={setOpenAddSub} caseId={id} />\r\n            <EditSubCase open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} setData={setUpdateSubData} /> */}\r\n            <Col\r\n                xs={24}\r\n            >\r\n                <Title level={5}>ឈ្មោះករណី៖ {caseData?.caseName + \" \"}\r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} />\r\n                </Title>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>កាលបរិច្ឆេទ៖ {moment(caseData?.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}</p>\r\n\r\n                <p>អាសយដ្ឋាន៖ {\" \"}\r\n                    {caseData?.village !== \"ក្រៅសៀមរាប\" && caseData?.village + \",\"}\r\n                    {caseData?.commune !== \"ក្រៅសៀមរាប\" && caseData?.commune + \",\"}\r\n                    {caseData?.district !== \"ក្រៅសៀមរាប\" && caseData?.district + \",\"}\r\n                    {caseData?.province}</p>\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធករណី៖ {subCaseData?.personalInfos?.length}</p>\r\n                <p>ផ្សេងៗ៖ {caseData?.other}</p>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធផ្ទាល់៖ {getRelated(subCaseData?.personalInfos, true)}នាក់</p>\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធប្រយោល៖ {getRelated(subCaseData?.personalInfos, false)}នាក់</p>\r\n                {/* <p>ចំនួនអ្នកជាសះស្បើយ៖ {getRelated(subCaseData, \"សះស្បើយ\")}នាក់</p>\r\n                <p>ចំនួនអ្នកស្លាប់៖ {getRelated(subCaseData, \"ស្លាប់\")}នាក់</p> */}\r\n            </Col>\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ៖\r\n                    {/* <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/> */}\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                {/* <Table\r\n                    columns={subCaseCol({ handleDelete, handleEditSubCase })}\r\n                    dataSource={subCaseData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: subCaseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                /> */}\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n","import { Space } from 'antd'\r\nimport {\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const interviewCol = ({ handleDelete, limit, page, handleEdit }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 60,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'អត្តសញ្ញាណប័ណ្ណ',\r\n            dataIndex: 'idCard',\r\n            key: 'idCard',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'លេខកូដអ្នកជំងឺ',\r\n            dataIndex: 'patientId',\r\n            key: 'patientId',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 200,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName + \" \" + record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'អាយុ',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'សញ្ជាតិ',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            width: 70,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 250,\r\n            render: (text, record) => (\r\n                <span>\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village + \", \"}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune + \", \"}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district + \", \"}\r\n                    {record.province && record.province}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'សម្ភាស',\r\n            dataIndex: 'interviewed',\r\n            key: 'interviewed',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span>\r\n                    {record.interviewed ? \"រួចរាល់\" : \"មិនទាន់រួចរាល់\"}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, message } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddInterview({ open, setOpen }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n\r\n\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({ variables: setAddPeople(values) })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បង្កើតការសម្ភាស\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {\r\n                                    allCases.map((c) => (\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n                                {/* <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option> */}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\nimport { convertEditData } from '../../../function/fn'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditInterview({ open, setOpen, editData }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({ variables: setAddPeople(values) })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    convertEditData(editData)\r\n    return (\r\n        <Modal\r\n            title=\"បង្កើតការសម្ភាស\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                fields={\r\n                    convertEditData(editData)\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {\r\n                                    allCases.map((c) => (\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n                                {/* <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option> */}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        valuePropName=\"checked\"\r\n                    >\r\n                        <Checkbox>ទិន្នន័យជាក់លាក់</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../context/peopleContext';\r\nimport { interviewCol } from '../component/interview/tableColumn/interviewColumn';\r\nimport AddInterview from '../component/interview/modal/addInterview';\r\nimport EditInterview from '../component/interview/modal/editInterview';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { DELETE_PERSONALINFO_BY_ID, GET_INTERVIEW } from '../graphql/people';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\nimport { ListSelect } from '../static/own-comp'\r\n\r\nconst {Option} = Select\r\n\r\nexport default function Interview() {\r\n\r\n    const [interviewType, setInterviewType] = useState(false)\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n\r\n    const [editData, setEditData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [interviewedData, setInterviewedData] = useState([])\r\n\r\n    const { data, loading, error } = useQuery(GET_INTERVIEW, {\r\n        variables: {\r\n            interview: interviewType,\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted: ({ getConfirmedPersonalInfoByInterviewWithPagination }) => {\r\n            console.log(getConfirmedPersonalInfoByInterviewWithPagination)\r\n            setInterviewedData(getConfirmedPersonalInfoByInterviewWithPagination)\r\n        },\r\n        fetchPolicy:'network-only'\r\n    })\r\n    // const getPersonalInfoWithPagination \r\n    useEffect(() => {\r\n        if (data) {\r\n            setInterviewedData(data?.getConfirmedPersonalInfoByInterviewWithPagination)\r\n        }\r\n    }, [data])\r\n\r\n    const [deletePersonalInfo, { loading: deleteLoading }] = useMutation(DELETE_PERSONALINFO_BY_ID, {\r\n        onCompleted: () => {\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleDelete = (e) => {\r\n        deletePersonalInfo({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        setEditData(e)\r\n        setOpenEdit(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            {/* <AddInterview open={openAdd} setOpen={setOpenAdd} />\r\n            <EditInterview open={openEdit} setOpen={setOpenEdit} editData={editData}/> */}\r\n            <Col\r\n                xs={12}\r\n                md={13}\r\n            >\r\n                {/* <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលប្រជាជន\r\n                    <PlusOutlined />\r\n                </Button> */}\r\n            </Col>\r\n            <Col\r\n                xs={12}\r\n                md={4}\r\n            >\r\n                <Select defaultValue={interviewType} style={{ width: \"100%\" }} onChange={(e) => setInterviewType(e) }>\r\n                    <Option value={true}>អ្នកសម្ភាសរួចរាល់</Option>\r\n                    <Option value={false}>អ្នកមិនទាន់សម្ភាស</Option>\r\n                </Select>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 6, offset: 1 }}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={interviewCol({ handleDelete, limit, page, handleEdit })}\r\n                    dataSource={interviewedData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: interviewedData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: interviewedData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1000 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Result, Button } from 'antd';\r\nfunction NotFound() {\r\n    return (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n    extra={<Button type=\"primary\">ត្រលប់ក្រោយ</Button>}\r\n  />\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useState } from 'react'\r\nimport MenuHeader from './dynamic/menu';\r\nimport Navbar from './dynamic/navbar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport { Image } from 'antd'\r\nimport GoGlobalLogo from './asset/goglobalschool.png'\r\nimport HeaderContext from './context/headerContext';\r\nimport DashBoardContext from './context/dashboardContext'\r\nimport CaseContext from './context/caseContext'\r\nimport UserContext from './context/userContext';\r\nimport QuarantineContext from './context/quarantineContext';\r\nimport HospitalContext from './context/hospitalContext';\r\n\r\nimport Dashboard from './page/dashboard';\r\nimport Case from './page/case'\r\nimport SubCase from './component/case/subCase';\r\nimport User from './page/user';\r\nimport Quarantine from './page/quarantine'\r\nimport SubQuarantine from './component/quarantine/subQuarantine';\r\nimport PeopleContext from './context/peopleContext';\r\nimport People from './page/people';\r\nimport SubPeople from './component/people/subPeople';\r\nimport Hospital from './page/hospital';\r\nimport SubHospital from './component/hospital/subHospital';\r\nimport Login from './page/login'\r\nimport { Layout } from 'antd'\r\nimport { useQuery } from '@apollo/client'\r\nimport { IS_LOGGED_IN } from './graphql/auth'\r\nimport MapScreen from './page/map';\r\nimport Report from './page/report';\r\nimport Location from './page/location';\r\nimport SubLocation from './component/location/subLocation';\r\nimport Interview from './page/interview';\r\nimport NotFound from './component/NotFound';\r\nimport ImageBack from './asset/cover-bg.jpg'\r\nconst { Footer, Content } = Layout\r\nconst Routes = () => {\r\n  const { data: isLogin } = useQuery(IS_LOGGED_IN);\r\n  const login = isLogin.isLoggedIn;\r\n  {/* <Dashboard /> */ }\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          \r\n          {login ? <>\r\n            <HeaderContext>\r\n              <MenuHeader />\r\n            </HeaderContext>\r\n            <Layout className=\"site-layout\">\r\n              <HeaderContext>\r\n                <Navbar />\r\n              </HeaderContext>\r\n              <Content style={{ margin: '20px',  }}>\r\n                \r\n                <DashBoardContext>\r\n                  <CaseContext>\r\n                    <UserContext>\r\n                      <QuarantineContext>\r\n                        <PeopleContext>\r\n                          <HospitalContext>\r\n                            <Switch >\r\n                              <Route exact path=\"/\">\r\n                                <MapScreen />\r\n                              </Route>\r\n                              <Route path=\"/case\">\r\n                                <Case />\r\n                              </Route>\r\n                              <Route path=\"/subCase/:id\">\r\n                                <SubCase />\r\n                              </Route>\r\n                              <Route path=\"/people\">\r\n                                <People />\r\n                              </Route>\r\n                              <Route path=\"/subPeople/:id\">\r\n                                <SubPeople />\r\n                              </Route>\r\n                              <Route path=\"/user\">\r\n                                <User />\r\n                              </Route>\r\n                              <Route path=\"/quarantine\">\r\n                                <Quarantine />\r\n                              </Route>\r\n                              <Route path=\"/subQuarantine/:id\">\r\n                                <SubQuarantine />\r\n                              </Route>\r\n                              <Route path=\"/hospital\">\r\n                                <Hospital />\r\n                              </Route>\r\n                              <Route path=\"/subHospital/:id\">\r\n                                <SubHospital />\r\n                              </Route>\r\n                              <Route path=\"/reportdaily\">\r\n                                <Report />\r\n                              </Route>\r\n                              <Route path=\"/specifylocation\">\r\n                                <Location />\r\n                              </Route>\r\n                              <Route path=\"/subSpecifylocation/:id\">\r\n                                <SubLocation />\r\n                              </Route>\r\n                              <Route path=\"/interview\">\r\n                                <Interview />\r\n                              </Route>\r\n                              <Route path=\"*\">\r\n                                <NotFound/>\r\n                              </Route>\r\n                            </Switch>\r\n                          </HospitalContext>\r\n                        </PeopleContext>\r\n                      </QuarantineContext>\r\n                    </UserContext>\r\n                  </CaseContext>\r\n                </DashBoardContext>\r\n              </Content>\r\n\r\n              <Footer style={{ textAlign: 'center', color: 'red', fontSize: 17 }}>\r\n                <marquee>\r\n                  <span style={{}}>\r\n                    <span  style={{ marginRight:15 }} >\r\n                      <Image height=\"25px\" width=\"25px\" src={GoGlobalLogo} preview={false}/>\r\n                    </span>\r\n                    <span style={{position:'absolute', top:2}}>សាលាហ្គោគ្លូប៊ល | Go Global School &copy;2021</span>\r\n                  </span>\r\n                </marquee>\r\n\r\n              </Footer>\r\n            </Layout></> : <Switch>\r\n            <Route>\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n          }\r\n        </Layout>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","export default __webpack_public_path__ + \"static/media/cover-bg.ed223e12.jpg\";","import './static/App.css';\r\n\r\nimport React, { useState } from 'react'\r\nimport {cache} from './cache'\r\nimport {\r\n  split,\r\n   HttpLink,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider\r\n} from \"@apollo/client\";\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport Routes from './Routes';\r\n\r\nconst token =()=>{\r\n  let newToken =  JSON.parse(localStorage.getItem('user'))\r\n  return newToken?.token\r\n}\r\n\r\nconst tokens = token()\r\nconsole.log(process.env.React_App_WS,\"env\")\r\n const upLoadLink = createUploadLink({\r\n    uri: process.env.React_App_URI,\r\n    headers:{\r\n      Authorization: tokens\r\n    }\r\n  })\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: process.env.React_App_WS,\r\n  options: {\r\n    reconnect: true\r\n  }\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    );\r\n  },\r\n  wsLink,\r\n  upLoadLink\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  onError: ({ networkError, graphQLErrors }) => {\r\n    console.log('graphQLErrors', graphQLErrors)\r\n    console.log('networkError', networkError)\r\n  },\r\n  link:splitLink\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Routes/>\r\n     \r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './static/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}